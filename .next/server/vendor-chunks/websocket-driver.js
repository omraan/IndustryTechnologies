"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/websocket-driver";
exports.ids = ["vendor-chunks/websocket-driver"];
exports.modules = {

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver.js":
/*!***************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n// Protocol references:\n//\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76\n// * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17\nvar Base = __webpack_require__(/*! ./driver/base */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"), Client = __webpack_require__(/*! ./driver/client */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/client.js\"), Server = __webpack_require__(/*! ./driver/server */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/server.js\");\nvar Driver = {\n    client: function(url, options) {\n        options = options || {};\n        if (options.masking === undefined) options.masking = true;\n        return new Client(url, options);\n    },\n    server: function(options) {\n        options = options || {};\n        if (options.requireMasking === undefined) options.requireMasking = true;\n        return new Server(options);\n    },\n    http: function() {\n        return Server.http.apply(Server, arguments);\n    },\n    isSecureRequest: function(request) {\n        return Server.isSecureRequest(request);\n    },\n    isWebSocket: function(request) {\n        return Base.isWebSocket(request);\n    },\n    validateOptions: function(options, validKeys) {\n        Base.validateOptions(options, validKeys);\n    }\n};\nmodule.exports = Driver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLHVCQUF1QjtBQUN2QixFQUFFO0FBQ0YsbUVBQW1FO0FBQ25FLG1FQUFtRTtBQUNuRSx1RUFBdUU7QUFFdkUsSUFBSUEsT0FBU0MsbUJBQU9BLENBQUMsNEZBQ2pCQyxTQUFTRCxtQkFBT0EsQ0FBQyxnR0FDakJFLFNBQVNGLG1CQUFPQSxDQUFDO0FBRXJCLElBQUlHLFNBQVM7SUFDWEMsUUFBUSxTQUFTQyxHQUFHLEVBQUVDLE9BQU87UUFDM0JBLFVBQVVBLFdBQVcsQ0FBQztRQUN0QixJQUFJQSxRQUFRQyxPQUFPLEtBQUtDLFdBQVdGLFFBQVFDLE9BQU8sR0FBRztRQUNyRCxPQUFPLElBQUlOLE9BQU9JLEtBQUtDO0lBQ3pCO0lBRUFHLFFBQVEsU0FBU0gsT0FBTztRQUN0QkEsVUFBVUEsV0FBVyxDQUFDO1FBQ3RCLElBQUlBLFFBQVFJLGNBQWMsS0FBS0YsV0FBV0YsUUFBUUksY0FBYyxHQUFHO1FBQ25FLE9BQU8sSUFBSVIsT0FBT0k7SUFDcEI7SUFFQUssTUFBTTtRQUNKLE9BQU9ULE9BQU9TLElBQUksQ0FBQ0MsS0FBSyxDQUFDVixRQUFRVztJQUNuQztJQUVBQyxpQkFBaUIsU0FBU0MsT0FBTztRQUMvQixPQUFPYixPQUFPWSxlQUFlLENBQUNDO0lBQ2hDO0lBRUFDLGFBQWEsU0FBU0QsT0FBTztRQUMzQixPQUFPaEIsS0FBS2lCLFdBQVcsQ0FBQ0Q7SUFDMUI7SUFFQUUsaUJBQWlCLFNBQVNYLE9BQU8sRUFBRVksU0FBUztRQUMxQ25CLEtBQUtrQixlQUFlLENBQUNYLFNBQVNZO0lBQ2hDO0FBQ0Y7QUFFQUMsT0FBT0MsT0FBTyxHQUFHakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnNkdXN0cnktdGVjaG5vbG9naWVzLy4vbm9kZV9tb2R1bGVzL3dlYnNvY2tldC1kcml2ZXIvbGliL3dlYnNvY2tldC9kcml2ZXIuanM/NGE3ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8vIFByb3RvY29sIHJlZmVyZW5jZXM6XG4vL1xuLy8gKiBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9kcmFmdC1oaXhpZS10aGV3ZWJzb2NrZXRwcm90b2NvbC03NVxuLy8gKiBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9kcmFmdC1oaXhpZS10aGV3ZWJzb2NrZXRwcm90b2NvbC03NlxuLy8gKiBodHRwOi8vdG9vbHMuaWV0Zi5vcmcvaHRtbC9kcmFmdC1pZXRmLWh5YmktdGhld2Vic29ja2V0cHJvdG9jb2wtMTdcblxudmFyIEJhc2UgICA9IHJlcXVpcmUoJy4vZHJpdmVyL2Jhc2UnKSxcbiAgICBDbGllbnQgPSByZXF1aXJlKCcuL2RyaXZlci9jbGllbnQnKSxcbiAgICBTZXJ2ZXIgPSByZXF1aXJlKCcuL2RyaXZlci9zZXJ2ZXInKTtcblxudmFyIERyaXZlciA9IHtcbiAgY2xpZW50OiBmdW5jdGlvbih1cmwsIG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBpZiAob3B0aW9ucy5tYXNraW5nID09PSB1bmRlZmluZWQpIG9wdGlvbnMubWFza2luZyA9IHRydWU7XG4gICAgcmV0dXJuIG5ldyBDbGllbnQodXJsLCBvcHRpb25zKTtcbiAgfSxcblxuICBzZXJ2ZXI6IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICBpZiAob3B0aW9ucy5yZXF1aXJlTWFza2luZyA9PT0gdW5kZWZpbmVkKSBvcHRpb25zLnJlcXVpcmVNYXNraW5nID0gdHJ1ZTtcbiAgICByZXR1cm4gbmV3IFNlcnZlcihvcHRpb25zKTtcbiAgfSxcblxuICBodHRwOiBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4gU2VydmVyLmh0dHAuYXBwbHkoU2VydmVyLCBhcmd1bWVudHMpO1xuICB9LFxuXG4gIGlzU2VjdXJlUmVxdWVzdDogZnVuY3Rpb24ocmVxdWVzdCkge1xuICAgIHJldHVybiBTZXJ2ZXIuaXNTZWN1cmVSZXF1ZXN0KHJlcXVlc3QpO1xuICB9LFxuXG4gIGlzV2ViU29ja2V0OiBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIEJhc2UuaXNXZWJTb2NrZXQocmVxdWVzdCk7XG4gIH0sXG5cbiAgdmFsaWRhdGVPcHRpb25zOiBmdW5jdGlvbihvcHRpb25zLCB2YWxpZEtleXMpIHtcbiAgICBCYXNlLnZhbGlkYXRlT3B0aW9ucyhvcHRpb25zLCB2YWxpZEtleXMpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IERyaXZlcjtcbiJdLCJuYW1lcyI6WyJCYXNlIiwicmVxdWlyZSIsIkNsaWVudCIsIlNlcnZlciIsIkRyaXZlciIsImNsaWVudCIsInVybCIsIm9wdGlvbnMiLCJtYXNraW5nIiwidW5kZWZpbmVkIiwic2VydmVyIiwicmVxdWlyZU1hc2tpbmciLCJodHRwIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJpc1NlY3VyZVJlcXVlc3QiLCJyZXF1ZXN0IiwiaXNXZWJTb2NrZXQiLCJ2YWxpZGF0ZU9wdGlvbnMiLCJ2YWxpZEtleXMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js":
/*!********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/base.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer), Emitter = (__webpack_require__(/*! events */ \"events\").EventEmitter), util = __webpack_require__(/*! util */ \"util\"), streams = __webpack_require__(/*! ../streams */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/streams.js\"), Headers = __webpack_require__(/*! ./headers */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/headers.js\"), Reader = __webpack_require__(/*! ./stream_reader */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js\");\nvar Base = function(request, url, options) {\n    Emitter.call(this);\n    Base.validateOptions(options || {}, [\n        \"maxLength\",\n        \"masking\",\n        \"requireMasking\",\n        \"protocols\"\n    ]);\n    this._request = request;\n    this._reader = new Reader();\n    this._options = options || {};\n    this._maxLength = this._options.maxLength || this.MAX_LENGTH;\n    this._headers = new Headers();\n    this.__queue = [];\n    this.readyState = 0;\n    this.url = url;\n    this.io = new streams.IO(this);\n    this.messages = new streams.Messages(this);\n    this._bindEventListeners();\n};\nutil.inherits(Base, Emitter);\nBase.isWebSocket = function(request) {\n    var connection = request.headers.connection || \"\", upgrade = request.headers.upgrade || \"\";\n    return request.method === \"GET\" && connection.toLowerCase().split(/ *, */).indexOf(\"upgrade\") >= 0 && upgrade.toLowerCase() === \"websocket\";\n};\nBase.validateOptions = function(options, validKeys) {\n    for(var key in options){\n        if (validKeys.indexOf(key) < 0) throw new Error(\"Unrecognized option: \" + key);\n    }\n};\nvar instance = {\n    // This is 64MB, small enough for an average VPS to handle without\n    // crashing from process out of memory\n    MAX_LENGTH: 0x3ffffff,\n    STATES: [\n        \"connecting\",\n        \"open\",\n        \"closing\",\n        \"closed\"\n    ],\n    _bindEventListeners: function() {\n        var self = this;\n        // Protocol errors are informational and do not have to be handled\n        this.messages.on(\"error\", function() {});\n        this.on(\"message\", function(event) {\n            var messages = self.messages;\n            if (messages.readable) messages.emit(\"data\", event.data);\n        });\n        this.on(\"error\", function(error) {\n            var messages = self.messages;\n            if (messages.readable) messages.emit(\"error\", error);\n        });\n        this.on(\"close\", function() {\n            var messages = self.messages;\n            if (!messages.readable) return;\n            messages.readable = messages.writable = false;\n            messages.emit(\"end\");\n        });\n    },\n    getState: function() {\n        return this.STATES[this.readyState] || null;\n    },\n    addExtension: function(extension) {\n        return false;\n    },\n    setHeader: function(name, value) {\n        if (this.readyState > 0) return false;\n        this._headers.set(name, value);\n        return true;\n    },\n    start: function() {\n        if (this.readyState !== 0) return false;\n        if (!Base.isWebSocket(this._request)) return this._failHandshake(new Error(\"Not a WebSocket request\"));\n        var response;\n        try {\n            response = this._handshakeResponse();\n        } catch (error) {\n            return this._failHandshake(error);\n        }\n        this._write(response);\n        if (this._stage !== -1) this._open();\n        return true;\n    },\n    _failHandshake: function(error) {\n        var headers = new Headers();\n        headers.set(\"Content-Type\", \"text/plain\");\n        headers.set(\"Content-Length\", Buffer.byteLength(error.message, \"utf8\"));\n        headers = [\n            \"HTTP/1.1 400 Bad Request\",\n            headers.toString(),\n            error.message\n        ];\n        this._write(Buffer.from(headers.join(\"\\r\\n\"), \"utf8\"));\n        this._fail(\"protocol_error\", error.message);\n        return false;\n    },\n    text: function(message) {\n        return this.frame(message);\n    },\n    binary: function(message) {\n        return false;\n    },\n    ping: function() {\n        return false;\n    },\n    pong: function() {\n        return false;\n    },\n    close: function(reason, code) {\n        if (this.readyState !== 1) return false;\n        this.readyState = 3;\n        this.emit(\"close\", new Base.CloseEvent(null, null));\n        return true;\n    },\n    _open: function() {\n        this.readyState = 1;\n        this.__queue.forEach(function(args) {\n            this.frame.apply(this, args);\n        }, this);\n        this.__queue = [];\n        this.emit(\"open\", new Base.OpenEvent());\n    },\n    _queue: function(message) {\n        this.__queue.push(message);\n        return true;\n    },\n    _write: function(chunk) {\n        var io = this.io;\n        if (io.readable) io.emit(\"data\", chunk);\n    },\n    _fail: function(type, message) {\n        this.readyState = 2;\n        this.emit(\"error\", new Error(message));\n        this.close();\n    }\n};\nfor(var key in instance)Base.prototype[key] = instance[key];\nBase.ConnectEvent = function() {};\nBase.OpenEvent = function() {};\nBase.CloseEvent = function(code, reason) {\n    this.code = code;\n    this.reason = reason;\n};\nBase.MessageEvent = function(data) {\n    this.data = data;\n};\nBase.PingEvent = function(data) {\n    this.data = data;\n};\nBase.PongEvent = function(data) {\n    this.data = data;\n};\nmodule.exports = Base;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/client.js":
/*!**********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/client.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer), crypto = __webpack_require__(/*! crypto */ \"crypto\"), url = __webpack_require__(/*! url */ \"url\"), util = __webpack_require__(/*! util */ \"util\"), HttpParser = __webpack_require__(/*! ../http_parser */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/http_parser.js\"), Base = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"), Hybi = __webpack_require__(/*! ./hybi */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js\"), Proxy = __webpack_require__(/*! ./proxy */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/proxy.js\");\nvar Client = function(_url, options) {\n    this.version = \"hybi-\" + Hybi.VERSION;\n    Hybi.call(this, null, _url, options);\n    this.readyState = -1;\n    this._key = Client.generateKey();\n    this._accept = Hybi.generateAccept(this._key);\n    this._http = new HttpParser(\"response\");\n    var uri = url.parse(this.url), auth = uri.auth && Buffer.from(uri.auth, \"utf8\").toString(\"base64\");\n    if (this.VALID_PROTOCOLS.indexOf(uri.protocol) < 0) throw new Error(this.url + \" is not a valid WebSocket URL\");\n    this._pathname = (uri.pathname || \"/\") + (uri.search || \"\");\n    this._headers.set(\"Host\", uri.host);\n    this._headers.set(\"Upgrade\", \"websocket\");\n    this._headers.set(\"Connection\", \"Upgrade\");\n    this._headers.set(\"Sec-WebSocket-Key\", this._key);\n    this._headers.set(\"Sec-WebSocket-Version\", Hybi.VERSION);\n    if (this._protocols.length > 0) this._headers.set(\"Sec-WebSocket-Protocol\", this._protocols.join(\", \"));\n    if (auth) this._headers.set(\"Authorization\", \"Basic \" + auth);\n};\nutil.inherits(Client, Hybi);\nClient.generateKey = function() {\n    return crypto.randomBytes(16).toString(\"base64\");\n};\nvar instance = {\n    VALID_PROTOCOLS: [\n        \"ws:\",\n        \"wss:\"\n    ],\n    proxy: function(origin, options) {\n        return new Proxy(this, origin, options);\n    },\n    start: function() {\n        if (this.readyState !== -1) return false;\n        this._write(this._handshakeRequest());\n        this.readyState = 0;\n        return true;\n    },\n    parse: function(chunk) {\n        if (this.readyState === 3) return;\n        if (this.readyState > 0) return Hybi.prototype.parse.call(this, chunk);\n        this._http.parse(chunk);\n        if (!this._http.isComplete()) return;\n        this._validateHandshake();\n        if (this.readyState === 3) return;\n        this._open();\n        this.parse(this._http.body);\n    },\n    _handshakeRequest: function() {\n        var extensions = this._extensions.generateOffer();\n        if (extensions) this._headers.set(\"Sec-WebSocket-Extensions\", extensions);\n        var start = \"GET \" + this._pathname + \" HTTP/1.1\", headers = [\n            start,\n            this._headers.toString(),\n            \"\"\n        ];\n        return Buffer.from(headers.join(\"\\r\\n\"), \"utf8\");\n    },\n    _failHandshake: function(message) {\n        message = \"Error during WebSocket handshake: \" + message;\n        this.readyState = 3;\n        this.emit(\"error\", new Error(message));\n        this.emit(\"close\", new Base.CloseEvent(this.ERRORS.protocol_error, message));\n    },\n    _validateHandshake: function() {\n        this.statusCode = this._http.statusCode;\n        this.headers = this._http.headers;\n        if (this._http.error) return this._failHandshake(this._http.error.message);\n        if (this._http.statusCode !== 101) return this._failHandshake(\"Unexpected response code: \" + this._http.statusCode);\n        var headers = this._http.headers, upgrade = headers[\"upgrade\"] || \"\", connection = headers[\"connection\"] || \"\", accept = headers[\"sec-websocket-accept\"] || \"\", protocol = headers[\"sec-websocket-protocol\"] || \"\";\n        if (upgrade === \"\") return this._failHandshake(\"'Upgrade' header is missing\");\n        if (upgrade.toLowerCase() !== \"websocket\") return this._failHandshake(\"'Upgrade' header value is not 'WebSocket'\");\n        if (connection === \"\") return this._failHandshake(\"'Connection' header is missing\");\n        if (connection.toLowerCase() !== \"upgrade\") return this._failHandshake(\"'Connection' header value is not 'Upgrade'\");\n        if (accept !== this._accept) return this._failHandshake(\"Sec-WebSocket-Accept mismatch\");\n        this.protocol = null;\n        if (protocol !== \"\") {\n            if (this._protocols.indexOf(protocol) < 0) return this._failHandshake(\"Sec-WebSocket-Protocol mismatch\");\n            else this.protocol = protocol;\n        }\n        try {\n            this._extensions.activate(this.headers[\"sec-websocket-extensions\"]);\n        } catch (e) {\n            return this._failHandshake(e.message);\n        }\n    }\n};\nfor(var key in instance)Client.prototype[key] = instance[key];\nmodule.exports = Client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/client.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js":
/*!***********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/draft75.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer), Base = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"), util = __webpack_require__(/*! util */ \"util\");\nvar Draft75 = function(request, url, options) {\n    Base.apply(this, arguments);\n    this._stage = 0;\n    this.version = \"hixie-75\";\n    this._headers.set(\"Upgrade\", \"WebSocket\");\n    this._headers.set(\"Connection\", \"Upgrade\");\n    this._headers.set(\"WebSocket-Origin\", this._request.headers.origin);\n    this._headers.set(\"WebSocket-Location\", this.url);\n};\nutil.inherits(Draft75, Base);\nvar instance = {\n    close: function() {\n        if (this.readyState === 3) return false;\n        this.readyState = 3;\n        this.emit(\"close\", new Base.CloseEvent(null, null));\n        return true;\n    },\n    parse: function(chunk) {\n        if (this.readyState > 1) return;\n        this._reader.put(chunk);\n        this._reader.eachByte(function(octet) {\n            var message;\n            switch(this._stage){\n                case -1:\n                    this._body.push(octet);\n                    this._sendHandshakeBody();\n                    break;\n                case 0:\n                    this._parseLeadingByte(octet);\n                    break;\n                case 1:\n                    this._length = (octet & 0x7F) + 128 * this._length;\n                    if (this._closing && this._length === 0) {\n                        return this.close();\n                    } else if ((octet & 0x80) !== 0x80) {\n                        if (this._length === 0) {\n                            this._stage = 0;\n                        } else {\n                            this._skipped = 0;\n                            this._stage = 2;\n                        }\n                    }\n                    break;\n                case 2:\n                    if (octet === 0xFF) {\n                        this._stage = 0;\n                        message = Buffer.from(this._buffer).toString(\"utf8\", 0, this._buffer.length);\n                        this.emit(\"message\", new Base.MessageEvent(message));\n                    } else {\n                        if (this._length) {\n                            this._skipped += 1;\n                            if (this._skipped === this._length) this._stage = 0;\n                        } else {\n                            this._buffer.push(octet);\n                            if (this._buffer.length > this._maxLength) return this.close();\n                        }\n                    }\n                    break;\n            }\n        }, this);\n    },\n    frame: function(buffer) {\n        if (this.readyState === 0) return this._queue([\n            buffer\n        ]);\n        if (this.readyState > 1) return false;\n        if (typeof buffer !== \"string\") buffer = buffer.toString();\n        var length = Buffer.byteLength(buffer), frame = Buffer.allocUnsafe(length + 2);\n        frame[0] = 0x00;\n        frame.write(buffer, 1);\n        frame[frame.length - 1] = 0xFF;\n        this._write(frame);\n        return true;\n    },\n    _handshakeResponse: function() {\n        var start = \"HTTP/1.1 101 Web Socket Protocol Handshake\", headers = [\n            start,\n            this._headers.toString(),\n            \"\"\n        ];\n        return Buffer.from(headers.join(\"\\r\\n\"), \"utf8\");\n    },\n    _parseLeadingByte: function(octet) {\n        if ((octet & 0x80) === 0x80) {\n            this._length = 0;\n            this._stage = 1;\n        } else {\n            delete this._length;\n            delete this._skipped;\n            this._buffer = [];\n            this._stage = 2;\n        }\n    }\n};\nfor(var key in instance)Draft75.prototype[key] = instance[key];\nmodule.exports = Draft75;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/draft76.js":
/*!***********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/draft76.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer), Base = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"), Draft75 = __webpack_require__(/*! ./draft75 */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js\"), crypto = __webpack_require__(/*! crypto */ \"crypto\"), util = __webpack_require__(/*! util */ \"util\");\nvar numberFromKey = function(key) {\n    return parseInt((key.match(/[0-9]/g) || []).join(\"\"), 10);\n};\nvar spacesInKey = function(key) {\n    return (key.match(/ /g) || []).length;\n};\nvar Draft76 = function(request, url, options) {\n    Draft75.apply(this, arguments);\n    this._stage = -1;\n    this._body = [];\n    this.version = \"hixie-76\";\n    this._headers.clear();\n    this._headers.set(\"Upgrade\", \"WebSocket\");\n    this._headers.set(\"Connection\", \"Upgrade\");\n    this._headers.set(\"Sec-WebSocket-Origin\", this._request.headers.origin);\n    this._headers.set(\"Sec-WebSocket-Location\", this.url);\n};\nutil.inherits(Draft76, Draft75);\nvar instance = {\n    BODY_SIZE: 8,\n    start: function() {\n        if (!Draft75.prototype.start.call(this)) return false;\n        this._started = true;\n        this._sendHandshakeBody();\n        return true;\n    },\n    close: function() {\n        if (this.readyState === 3) return false;\n        if (this.readyState === 1) this._write(Buffer.from([\n            0xFF,\n            0x00\n        ]));\n        this.readyState = 3;\n        this.emit(\"close\", new Base.CloseEvent(null, null));\n        return true;\n    },\n    _handshakeResponse: function() {\n        var headers = this._request.headers, key1 = headers[\"sec-websocket-key1\"], key2 = headers[\"sec-websocket-key2\"];\n        if (!key1) throw new Error(\"Missing required header: Sec-WebSocket-Key1\");\n        if (!key2) throw new Error(\"Missing required header: Sec-WebSocket-Key2\");\n        var number1 = numberFromKey(key1), spaces1 = spacesInKey(key1), number2 = numberFromKey(key2), spaces2 = spacesInKey(key2);\n        if (number1 % spaces1 !== 0 || number2 % spaces2 !== 0) throw new Error(\"Client sent invalid Sec-WebSocket-Key headers\");\n        this._keyValues = [\n            number1 / spaces1,\n            number2 / spaces2\n        ];\n        var start = \"HTTP/1.1 101 WebSocket Protocol Handshake\", headers = [\n            start,\n            this._headers.toString(),\n            \"\"\n        ];\n        return Buffer.from(headers.join(\"\\r\\n\"), \"binary\");\n    },\n    _handshakeSignature: function() {\n        if (this._body.length < this.BODY_SIZE) return null;\n        var md5 = crypto.createHash(\"md5\"), buffer = Buffer.allocUnsafe(8 + this.BODY_SIZE);\n        buffer.writeUInt32BE(this._keyValues[0], 0);\n        buffer.writeUInt32BE(this._keyValues[1], 4);\n        Buffer.from(this._body).copy(buffer, 8, 0, this.BODY_SIZE);\n        md5.update(buffer);\n        return Buffer.from(md5.digest(\"binary\"), \"binary\");\n    },\n    _sendHandshakeBody: function() {\n        if (!this._started) return;\n        var signature = this._handshakeSignature();\n        if (!signature) return;\n        this._write(signature);\n        this._stage = 0;\n        this._open();\n        if (this._body.length > this.BODY_SIZE) this.parse(this._body.slice(this.BODY_SIZE));\n    },\n    _parseLeadingByte: function(octet) {\n        if (octet !== 0xFF) return Draft75.prototype._parseLeadingByte.call(this, octet);\n        this._closing = true;\n        this._length = 0;\n        this._stage = 1;\n    }\n};\nfor(var key in instance)Draft76.prototype[key] = instance[key];\nmodule.exports = Draft76;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9kcmFmdDc2LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsU0FBVUMsNEZBQTZCLEVBQ3ZDQyxPQUFVRCxtQkFBT0EsQ0FBQyxxRkFDbEJFLFVBQVVGLG1CQUFPQSxDQUFDLDJGQUNsQkcsU0FBVUgsbUJBQU9BLENBQUMseUJBQ2xCSSxPQUFVSixtQkFBT0EsQ0FBQztBQUd0QixJQUFJSyxnQkFBZ0IsU0FBU0MsR0FBRztJQUM5QixPQUFPQyxTQUFTLENBQUNELElBQUlFLEtBQUssQ0FBQyxhQUFhLEVBQUUsRUFBRUMsSUFBSSxDQUFDLEtBQUs7QUFDeEQ7QUFFQSxJQUFJQyxjQUFjLFNBQVNKLEdBQUc7SUFDNUIsT0FBTyxDQUFDQSxJQUFJRSxLQUFLLENBQUMsU0FBUyxFQUFFLEVBQUVHLE1BQU07QUFDdkM7QUFHQSxJQUFJQyxVQUFVLFNBQVNDLE9BQU8sRUFBRUMsR0FBRyxFQUFFQyxPQUFPO0lBQzFDYixRQUFRYyxLQUFLLENBQUMsSUFBSSxFQUFFQztJQUNwQixJQUFJLENBQUNDLE1BQU0sR0FBSSxDQUFDO0lBQ2hCLElBQUksQ0FBQ0MsS0FBSyxHQUFLLEVBQUU7SUFDakIsSUFBSSxDQUFDQyxPQUFPLEdBQUc7SUFFZixJQUFJLENBQUNDLFFBQVEsQ0FBQ0MsS0FBSztJQUVuQixJQUFJLENBQUNELFFBQVEsQ0FBQ0UsR0FBRyxDQUFDLFdBQVc7SUFDN0IsSUFBSSxDQUFDRixRQUFRLENBQUNFLEdBQUcsQ0FBQyxjQUFjO0lBQ2hDLElBQUksQ0FBQ0YsUUFBUSxDQUFDRSxHQUFHLENBQUMsd0JBQXdCLElBQUksQ0FBQ0MsUUFBUSxDQUFDQyxPQUFPLENBQUNDLE1BQU07SUFDdEUsSUFBSSxDQUFDTCxRQUFRLENBQUNFLEdBQUcsQ0FBQywwQkFBMEIsSUFBSSxDQUFDVCxHQUFHO0FBQ3REO0FBQ0FWLEtBQUt1QixRQUFRLENBQUNmLFNBQVNWO0FBRXZCLElBQUkwQixXQUFXO0lBQ2JDLFdBQVc7SUFFWEMsT0FBTztRQUNMLElBQUksQ0FBQzVCLFFBQVE2QixTQUFTLENBQUNELEtBQUssQ0FBQ0UsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPO1FBQ2hELElBQUksQ0FBQ0MsUUFBUSxHQUFHO1FBQ2hCLElBQUksQ0FBQ0Msa0JBQWtCO1FBQ3ZCLE9BQU87SUFDVDtJQUVBQyxPQUFPO1FBQ0wsSUFBSSxJQUFJLENBQUNDLFVBQVUsS0FBSyxHQUFHLE9BQU87UUFDbEMsSUFBSSxJQUFJLENBQUNBLFVBQVUsS0FBSyxHQUFHLElBQUksQ0FBQ0MsTUFBTSxDQUFDdEMsT0FBT3VDLElBQUksQ0FBQztZQUFDO1lBQU07U0FBSztRQUMvRCxJQUFJLENBQUNGLFVBQVUsR0FBRztRQUNsQixJQUFJLENBQUNHLElBQUksQ0FBQyxTQUFTLElBQUl0QyxLQUFLdUMsVUFBVSxDQUFDLE1BQU07UUFDN0MsT0FBTztJQUNUO0lBRUFDLG9CQUFvQjtRQUNsQixJQUFJaEIsVUFBVSxJQUFJLENBQUNELFFBQVEsQ0FBQ0MsT0FBTyxFQUMvQmlCLE9BQVVqQixPQUFPLENBQUMscUJBQXFCLEVBQ3ZDa0IsT0FBVWxCLE9BQU8sQ0FBQyxxQkFBcUI7UUFFM0MsSUFBSSxDQUFDaUIsTUFBTSxNQUFNLElBQUlFLE1BQU07UUFDM0IsSUFBSSxDQUFDRCxNQUFNLE1BQU0sSUFBSUMsTUFBTTtRQUUzQixJQUFJQyxVQUFVeEMsY0FBY3FDLE9BQ3hCSSxVQUFVcEMsWUFBWWdDLE9BRXRCSyxVQUFVMUMsY0FBY3NDLE9BQ3hCSyxVQUFVdEMsWUFBWWlDO1FBRTFCLElBQUlFLFVBQVVDLFlBQVksS0FBS0MsVUFBVUMsWUFBWSxHQUNuRCxNQUFNLElBQUlKLE1BQU07UUFFbEIsSUFBSSxDQUFDSyxVQUFVLEdBQUc7WUFBQ0osVUFBVUM7WUFBU0MsVUFBVUM7U0FBUTtRQUV4RCxJQUFJbEIsUUFBVSw2Q0FDVkwsVUFBVTtZQUFDSztZQUFPLElBQUksQ0FBQ1QsUUFBUSxDQUFDNkIsUUFBUTtZQUFJO1NBQUc7UUFFbkQsT0FBT25ELE9BQU91QyxJQUFJLENBQUNiLFFBQVFoQixJQUFJLENBQUMsU0FBUztJQUMzQztJQUVBMEMscUJBQXFCO1FBQ25CLElBQUksSUFBSSxDQUFDaEMsS0FBSyxDQUFDUixNQUFNLEdBQUcsSUFBSSxDQUFDa0IsU0FBUyxFQUFFLE9BQU87UUFFL0MsSUFBSXVCLE1BQVNqRCxPQUFPa0QsVUFBVSxDQUFDLFFBQzNCQyxTQUFTdkQsT0FBT3dELFdBQVcsQ0FBQyxJQUFJLElBQUksQ0FBQzFCLFNBQVM7UUFFbER5QixPQUFPRSxhQUFhLENBQUMsSUFBSSxDQUFDUCxVQUFVLENBQUMsRUFBRSxFQUFFO1FBQ3pDSyxPQUFPRSxhQUFhLENBQUMsSUFBSSxDQUFDUCxVQUFVLENBQUMsRUFBRSxFQUFFO1FBQ3pDbEQsT0FBT3VDLElBQUksQ0FBQyxJQUFJLENBQUNuQixLQUFLLEVBQUVzQyxJQUFJLENBQUNILFFBQVEsR0FBRyxHQUFHLElBQUksQ0FBQ3pCLFNBQVM7UUFFekR1QixJQUFJTSxNQUFNLENBQUNKO1FBQ1gsT0FBT3ZELE9BQU91QyxJQUFJLENBQUNjLElBQUlPLE1BQU0sQ0FBQyxXQUFXO0lBQzNDO0lBRUF6QixvQkFBb0I7UUFDbEIsSUFBSSxDQUFDLElBQUksQ0FBQ0QsUUFBUSxFQUFFO1FBQ3BCLElBQUkyQixZQUFZLElBQUksQ0FBQ1QsbUJBQW1CO1FBQ3hDLElBQUksQ0FBQ1MsV0FBVztRQUVoQixJQUFJLENBQUN2QixNQUFNLENBQUN1QjtRQUNaLElBQUksQ0FBQzFDLE1BQU0sR0FBRztRQUNkLElBQUksQ0FBQzJDLEtBQUs7UUFFVixJQUFJLElBQUksQ0FBQzFDLEtBQUssQ0FBQ1IsTUFBTSxHQUFHLElBQUksQ0FBQ2tCLFNBQVMsRUFDcEMsSUFBSSxDQUFDaUMsS0FBSyxDQUFDLElBQUksQ0FBQzNDLEtBQUssQ0FBQzRDLEtBQUssQ0FBQyxJQUFJLENBQUNsQyxTQUFTO0lBQzlDO0lBRUFtQyxtQkFBbUIsU0FBU0MsS0FBSztRQUMvQixJQUFJQSxVQUFVLE1BQ1osT0FBTy9ELFFBQVE2QixTQUFTLENBQUNpQyxpQkFBaUIsQ0FBQ2hDLElBQUksQ0FBQyxJQUFJLEVBQUVpQztRQUV4RCxJQUFJLENBQUNDLFFBQVEsR0FBRztRQUNoQixJQUFJLENBQUNDLE9BQU8sR0FBSTtRQUNoQixJQUFJLENBQUNqRCxNQUFNLEdBQUs7SUFDbEI7QUFDRjtBQUVBLElBQUssSUFBSVosT0FBT3NCLFNBQ2RoQixRQUFRbUIsU0FBUyxDQUFDekIsSUFBSSxHQUFHc0IsUUFBUSxDQUFDdEIsSUFBSTtBQUV4QzhELE9BQU9DLE9BQU8sR0FBR3pEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zZHVzdHJ5LXRlY2hub2xvZ2llcy8uL25vZGVfbW9kdWxlcy93ZWJzb2NrZXQtZHJpdmVyL2xpYi93ZWJzb2NrZXQvZHJpdmVyL2RyYWZ0NzYuanM/YmZjNSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBCdWZmZXIgID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXIsXG4gICAgQmFzZSAgICA9IHJlcXVpcmUoJy4vYmFzZScpLFxuICAgIERyYWZ0NzUgPSByZXF1aXJlKCcuL2RyYWZ0NzUnKSxcbiAgICBjcnlwdG8gID0gcmVxdWlyZSgnY3J5cHRvJyksXG4gICAgdXRpbCAgICA9IHJlcXVpcmUoJ3V0aWwnKTtcblxuXG52YXIgbnVtYmVyRnJvbUtleSA9IGZ1bmN0aW9uKGtleSkge1xuICByZXR1cm4gcGFyc2VJbnQoKGtleS5tYXRjaCgvWzAtOV0vZykgfHwgW10pLmpvaW4oJycpLCAxMCk7XG59O1xuXG52YXIgc3BhY2VzSW5LZXkgPSBmdW5jdGlvbihrZXkpIHtcbiAgcmV0dXJuIChrZXkubWF0Y2goLyAvZykgfHwgW10pLmxlbmd0aDtcbn07XG5cblxudmFyIERyYWZ0NzYgPSBmdW5jdGlvbihyZXF1ZXN0LCB1cmwsIG9wdGlvbnMpIHtcbiAgRHJhZnQ3NS5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB0aGlzLl9zdGFnZSAgPSAtMTtcbiAgdGhpcy5fYm9keSAgID0gW107XG4gIHRoaXMudmVyc2lvbiA9ICdoaXhpZS03Nic7XG5cbiAgdGhpcy5faGVhZGVycy5jbGVhcigpO1xuXG4gIHRoaXMuX2hlYWRlcnMuc2V0KCdVcGdyYWRlJywgJ1dlYlNvY2tldCcpO1xuICB0aGlzLl9oZWFkZXJzLnNldCgnQ29ubmVjdGlvbicsICdVcGdyYWRlJyk7XG4gIHRoaXMuX2hlYWRlcnMuc2V0KCdTZWMtV2ViU29ja2V0LU9yaWdpbicsIHRoaXMuX3JlcXVlc3QuaGVhZGVycy5vcmlnaW4pO1xuICB0aGlzLl9oZWFkZXJzLnNldCgnU2VjLVdlYlNvY2tldC1Mb2NhdGlvbicsIHRoaXMudXJsKTtcbn07XG51dGlsLmluaGVyaXRzKERyYWZ0NzYsIERyYWZ0NzUpO1xuXG52YXIgaW5zdGFuY2UgPSB7XG4gIEJPRFlfU0laRTogOCxcblxuICBzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKCFEcmFmdDc1LnByb3RvdHlwZS5zdGFydC5jYWxsKHRoaXMpKSByZXR1cm4gZmFsc2U7XG4gICAgdGhpcy5fc3RhcnRlZCA9IHRydWU7XG4gICAgdGhpcy5fc2VuZEhhbmRzaGFrZUJvZHkoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSxcblxuICBjbG9zZTogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gMykgcmV0dXJuIGZhbHNlO1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IDEpIHRoaXMuX3dyaXRlKEJ1ZmZlci5mcm9tKFsweEZGLCAweDAwXSkpO1xuICAgIHRoaXMucmVhZHlTdGF0ZSA9IDM7XG4gICAgdGhpcy5lbWl0KCdjbG9zZScsIG5ldyBCYXNlLkNsb3NlRXZlbnQobnVsbCwgbnVsbCkpO1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuXG4gIF9oYW5kc2hha2VSZXNwb25zZTogZnVuY3Rpb24oKSB7XG4gICAgdmFyIGhlYWRlcnMgPSB0aGlzLl9yZXF1ZXN0LmhlYWRlcnMsXG4gICAgICAgIGtleTEgICAgPSBoZWFkZXJzWydzZWMtd2Vic29ja2V0LWtleTEnXSxcbiAgICAgICAga2V5MiAgICA9IGhlYWRlcnNbJ3NlYy13ZWJzb2NrZXQta2V5MiddO1xuXG4gICAgaWYgKCFrZXkxKSB0aHJvdyBuZXcgRXJyb3IoJ01pc3NpbmcgcmVxdWlyZWQgaGVhZGVyOiBTZWMtV2ViU29ja2V0LUtleTEnKTtcbiAgICBpZiAoIWtleTIpIHRocm93IG5ldyBFcnJvcignTWlzc2luZyByZXF1aXJlZCBoZWFkZXI6IFNlYy1XZWJTb2NrZXQtS2V5MicpO1xuXG4gICAgdmFyIG51bWJlcjEgPSBudW1iZXJGcm9tS2V5KGtleTEpLFxuICAgICAgICBzcGFjZXMxID0gc3BhY2VzSW5LZXkoa2V5MSksXG5cbiAgICAgICAgbnVtYmVyMiA9IG51bWJlckZyb21LZXkoa2V5MiksXG4gICAgICAgIHNwYWNlczIgPSBzcGFjZXNJbktleShrZXkyKTtcblxuICAgIGlmIChudW1iZXIxICUgc3BhY2VzMSAhPT0gMCB8fCBudW1iZXIyICUgc3BhY2VzMiAhPT0gMClcbiAgICAgIHRocm93IG5ldyBFcnJvcignQ2xpZW50IHNlbnQgaW52YWxpZCBTZWMtV2ViU29ja2V0LUtleSBoZWFkZXJzJyk7XG5cbiAgICB0aGlzLl9rZXlWYWx1ZXMgPSBbbnVtYmVyMSAvIHNwYWNlczEsIG51bWJlcjIgLyBzcGFjZXMyXTtcblxuICAgIHZhciBzdGFydCAgID0gJ0hUVFAvMS4xIDEwMSBXZWJTb2NrZXQgUHJvdG9jb2wgSGFuZHNoYWtlJyxcbiAgICAgICAgaGVhZGVycyA9IFtzdGFydCwgdGhpcy5faGVhZGVycy50b1N0cmluZygpLCAnJ107XG5cbiAgICByZXR1cm4gQnVmZmVyLmZyb20oaGVhZGVycy5qb2luKCdcXHJcXG4nKSwgJ2JpbmFyeScpO1xuICB9LFxuXG4gIF9oYW5kc2hha2VTaWduYXR1cmU6IGZ1bmN0aW9uKCkge1xuICAgIGlmICh0aGlzLl9ib2R5Lmxlbmd0aCA8IHRoaXMuQk9EWV9TSVpFKSByZXR1cm4gbnVsbDtcblxuICAgIHZhciBtZDUgICAgPSBjcnlwdG8uY3JlYXRlSGFzaCgnbWQ1JyksXG4gICAgICAgIGJ1ZmZlciA9IEJ1ZmZlci5hbGxvY1Vuc2FmZSg4ICsgdGhpcy5CT0RZX1NJWkUpO1xuXG4gICAgYnVmZmVyLndyaXRlVUludDMyQkUodGhpcy5fa2V5VmFsdWVzWzBdLCAwKTtcbiAgICBidWZmZXIud3JpdGVVSW50MzJCRSh0aGlzLl9rZXlWYWx1ZXNbMV0sIDQpO1xuICAgIEJ1ZmZlci5mcm9tKHRoaXMuX2JvZHkpLmNvcHkoYnVmZmVyLCA4LCAwLCB0aGlzLkJPRFlfU0laRSk7XG5cbiAgICBtZDUudXBkYXRlKGJ1ZmZlcik7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKG1kNS5kaWdlc3QoJ2JpbmFyeScpLCAnYmluYXJ5Jyk7XG4gIH0sXG5cbiAgX3NlbmRIYW5kc2hha2VCb2R5OiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIXRoaXMuX3N0YXJ0ZWQpIHJldHVybjtcbiAgICB2YXIgc2lnbmF0dXJlID0gdGhpcy5faGFuZHNoYWtlU2lnbmF0dXJlKCk7XG4gICAgaWYgKCFzaWduYXR1cmUpIHJldHVybjtcblxuICAgIHRoaXMuX3dyaXRlKHNpZ25hdHVyZSk7XG4gICAgdGhpcy5fc3RhZ2UgPSAwO1xuICAgIHRoaXMuX29wZW4oKTtcblxuICAgIGlmICh0aGlzLl9ib2R5Lmxlbmd0aCA+IHRoaXMuQk9EWV9TSVpFKVxuICAgICAgdGhpcy5wYXJzZSh0aGlzLl9ib2R5LnNsaWNlKHRoaXMuQk9EWV9TSVpFKSk7XG4gIH0sXG5cbiAgX3BhcnNlTGVhZGluZ0J5dGU6IGZ1bmN0aW9uKG9jdGV0KSB7XG4gICAgaWYgKG9jdGV0ICE9PSAweEZGKVxuICAgICAgcmV0dXJuIERyYWZ0NzUucHJvdG90eXBlLl9wYXJzZUxlYWRpbmdCeXRlLmNhbGwodGhpcywgb2N0ZXQpO1xuXG4gICAgdGhpcy5fY2xvc2luZyA9IHRydWU7XG4gICAgdGhpcy5fbGVuZ3RoICA9IDA7XG4gICAgdGhpcy5fc3RhZ2UgICA9IDE7XG4gIH1cbn07XG5cbmZvciAodmFyIGtleSBpbiBpbnN0YW5jZSlcbiAgRHJhZnQ3Ni5wcm90b3R5cGVba2V5XSA9IGluc3RhbmNlW2tleV07XG5cbm1vZHVsZS5leHBvcnRzID0gRHJhZnQ3NjtcbiJdLCJuYW1lcyI6WyJCdWZmZXIiLCJyZXF1aXJlIiwiQmFzZSIsIkRyYWZ0NzUiLCJjcnlwdG8iLCJ1dGlsIiwibnVtYmVyRnJvbUtleSIsImtleSIsInBhcnNlSW50IiwibWF0Y2giLCJqb2luIiwic3BhY2VzSW5LZXkiLCJsZW5ndGgiLCJEcmFmdDc2IiwicmVxdWVzdCIsInVybCIsIm9wdGlvbnMiLCJhcHBseSIsImFyZ3VtZW50cyIsIl9zdGFnZSIsIl9ib2R5IiwidmVyc2lvbiIsIl9oZWFkZXJzIiwiY2xlYXIiLCJzZXQiLCJfcmVxdWVzdCIsImhlYWRlcnMiLCJvcmlnaW4iLCJpbmhlcml0cyIsImluc3RhbmNlIiwiQk9EWV9TSVpFIiwic3RhcnQiLCJwcm90b3R5cGUiLCJjYWxsIiwiX3N0YXJ0ZWQiLCJfc2VuZEhhbmRzaGFrZUJvZHkiLCJjbG9zZSIsInJlYWR5U3RhdGUiLCJfd3JpdGUiLCJmcm9tIiwiZW1pdCIsIkNsb3NlRXZlbnQiLCJfaGFuZHNoYWtlUmVzcG9uc2UiLCJrZXkxIiwia2V5MiIsIkVycm9yIiwibnVtYmVyMSIsInNwYWNlczEiLCJudW1iZXIyIiwic3BhY2VzMiIsIl9rZXlWYWx1ZXMiLCJ0b1N0cmluZyIsIl9oYW5kc2hha2VTaWduYXR1cmUiLCJtZDUiLCJjcmVhdGVIYXNoIiwiYnVmZmVyIiwiYWxsb2NVbnNhZmUiLCJ3cml0ZVVJbnQzMkJFIiwiY29weSIsInVwZGF0ZSIsImRpZ2VzdCIsInNpZ25hdHVyZSIsIl9vcGVuIiwicGFyc2UiLCJzbGljZSIsIl9wYXJzZUxlYWRpbmdCeXRlIiwib2N0ZXQiLCJfY2xvc2luZyIsIl9sZW5ndGgiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/draft76.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/headers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/headers.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\nvar Headers = function() {\n    this.clear();\n};\nHeaders.prototype.ALLOWED_DUPLICATES = [\n    \"set-cookie\",\n    \"set-cookie2\",\n    \"warning\",\n    \"www-authenticate\"\n];\nHeaders.prototype.clear = function() {\n    this._sent = {};\n    this._lines = [];\n};\nHeaders.prototype.set = function(name, value) {\n    if (value === undefined) return;\n    name = this._strip(name);\n    value = this._strip(value);\n    var key = name.toLowerCase();\n    if (!this._sent.hasOwnProperty(key) || this.ALLOWED_DUPLICATES.indexOf(key) >= 0) {\n        this._sent[key] = true;\n        this._lines.push(name + \": \" + value + \"\\r\\n\");\n    }\n};\nHeaders.prototype.toString = function() {\n    return this._lines.join(\"\");\n};\nHeaders.prototype._strip = function(string) {\n    return string.toString().replace(/^ */, \"\").replace(/ *$/, \"\");\n};\nmodule.exports = Headers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsVUFBVTtJQUNaLElBQUksQ0FBQ0MsS0FBSztBQUNaO0FBRUFELFFBQVFFLFNBQVMsQ0FBQ0Msa0JBQWtCLEdBQUc7SUFBQztJQUFjO0lBQWU7SUFBVztDQUFtQjtBQUVuR0gsUUFBUUUsU0FBUyxDQUFDRCxLQUFLLEdBQUc7SUFDeEIsSUFBSSxDQUFDRyxLQUFLLEdBQUksQ0FBQztJQUNmLElBQUksQ0FBQ0MsTUFBTSxHQUFHLEVBQUU7QUFDbEI7QUFFQUwsUUFBUUUsU0FBUyxDQUFDSSxHQUFHLEdBQUcsU0FBU0MsSUFBSSxFQUFFQyxLQUFLO0lBQzFDLElBQUlBLFVBQVVDLFdBQVc7SUFFekJGLE9BQU8sSUFBSSxDQUFDRyxNQUFNLENBQUNIO0lBQ25CQyxRQUFRLElBQUksQ0FBQ0UsTUFBTSxDQUFDRjtJQUVwQixJQUFJRyxNQUFNSixLQUFLSyxXQUFXO0lBQzFCLElBQUksQ0FBQyxJQUFJLENBQUNSLEtBQUssQ0FBQ1MsY0FBYyxDQUFDRixRQUFRLElBQUksQ0FBQ1Isa0JBQWtCLENBQUNXLE9BQU8sQ0FBQ0gsUUFBUSxHQUFHO1FBQ2hGLElBQUksQ0FBQ1AsS0FBSyxDQUFDTyxJQUFJLEdBQUc7UUFDbEIsSUFBSSxDQUFDTixNQUFNLENBQUNVLElBQUksQ0FBQ1IsT0FBTyxPQUFPQyxRQUFRO0lBQ3pDO0FBQ0Y7QUFFQVIsUUFBUUUsU0FBUyxDQUFDYyxRQUFRLEdBQUc7SUFDM0IsT0FBTyxJQUFJLENBQUNYLE1BQU0sQ0FBQ1ksSUFBSSxDQUFDO0FBQzFCO0FBRUFqQixRQUFRRSxTQUFTLENBQUNRLE1BQU0sR0FBRyxTQUFTUSxNQUFNO0lBQ3hDLE9BQU9BLE9BQU9GLFFBQVEsR0FBR0csT0FBTyxDQUFDLE9BQU8sSUFBSUEsT0FBTyxDQUFDLE9BQU87QUFDN0Q7QUFFQUMsT0FBT0MsT0FBTyxHQUFHckIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnNkdXN0cnktdGVjaG5vbG9naWVzLy4vbm9kZV9tb2R1bGVzL3dlYnNvY2tldC1kcml2ZXIvbGliL3dlYnNvY2tldC9kcml2ZXIvaGVhZGVycy5qcz81ZDQwIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEhlYWRlcnMgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5jbGVhcigpO1xufTtcblxuSGVhZGVycy5wcm90b3R5cGUuQUxMT1dFRF9EVVBMSUNBVEVTID0gWydzZXQtY29va2llJywgJ3NldC1jb29raWUyJywgJ3dhcm5pbmcnLCAnd3d3LWF1dGhlbnRpY2F0ZSddO1xuXG5IZWFkZXJzLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9zZW50ICA9IHt9O1xuICB0aGlzLl9saW5lcyA9IFtdO1xufTtcblxuSGVhZGVycy5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICBuYW1lID0gdGhpcy5fc3RyaXAobmFtZSk7XG4gIHZhbHVlID0gdGhpcy5fc3RyaXAodmFsdWUpO1xuXG4gIHZhciBrZXkgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gIGlmICghdGhpcy5fc2VudC5oYXNPd25Qcm9wZXJ0eShrZXkpIHx8IHRoaXMuQUxMT1dFRF9EVVBMSUNBVEVTLmluZGV4T2Yoa2V5KSA+PSAwKSB7XG4gICAgdGhpcy5fc2VudFtrZXldID0gdHJ1ZTtcbiAgICB0aGlzLl9saW5lcy5wdXNoKG5hbWUgKyAnOiAnICsgdmFsdWUgKyAnXFxyXFxuJyk7XG4gIH1cbn07XG5cbkhlYWRlcnMucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLl9saW5lcy5qb2luKCcnKTtcbn07XG5cbkhlYWRlcnMucHJvdG90eXBlLl9zdHJpcCA9IGZ1bmN0aW9uKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnRvU3RyaW5nKCkucmVwbGFjZSgvXiAqLywgJycpLnJlcGxhY2UoLyAqJC8sICcnKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSGVhZGVycztcbiJdLCJuYW1lcyI6WyJIZWFkZXJzIiwiY2xlYXIiLCJwcm90b3R5cGUiLCJBTExPV0VEX0RVUExJQ0FURVMiLCJfc2VudCIsIl9saW5lcyIsInNldCIsIm5hbWUiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsIl9zdHJpcCIsImtleSIsInRvTG93ZXJDYXNlIiwiaGFzT3duUHJvcGVydHkiLCJpbmRleE9mIiwicHVzaCIsInRvU3RyaW5nIiwiam9pbiIsInN0cmluZyIsInJlcGxhY2UiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/headers.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js":
/*!********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/hybi.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer), crypto = __webpack_require__(/*! crypto */ \"crypto\"), util = __webpack_require__(/*! util */ \"util\"), Extensions = __webpack_require__(/*! websocket-extensions */ \"(rsc)/./node_modules/websocket-extensions/lib/websocket_extensions.js\"), Base = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"), Frame = __webpack_require__(/*! ./hybi/frame */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js\"), Message = __webpack_require__(/*! ./hybi/message */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js\");\nvar Hybi = function(request, url, options) {\n    Base.apply(this, arguments);\n    this._extensions = new Extensions();\n    this._stage = 0;\n    this._masking = this._options.masking;\n    this._protocols = this._options.protocols || [];\n    this._requireMasking = this._options.requireMasking;\n    this._pingCallbacks = {};\n    if (typeof this._protocols === \"string\") this._protocols = this._protocols.split(/ *, */);\n    if (!this._request) return;\n    var protos = this._request.headers[\"sec-websocket-protocol\"], supported = this._protocols;\n    if (protos !== undefined) {\n        if (typeof protos === \"string\") protos = protos.split(/ *, */);\n        this.protocol = protos.filter(function(p) {\n            return supported.indexOf(p) >= 0;\n        })[0];\n    }\n    this.version = \"hybi-\" + Hybi.VERSION;\n};\nutil.inherits(Hybi, Base);\nHybi.VERSION = \"13\";\nHybi.mask = function(payload, mask, offset) {\n    if (!mask || mask.length === 0) return payload;\n    offset = offset || 0;\n    for(var i = 0, n = payload.length - offset; i < n; i++){\n        payload[offset + i] = payload[offset + i] ^ mask[i % 4];\n    }\n    return payload;\n};\nHybi.generateAccept = function(key) {\n    var sha1 = crypto.createHash(\"sha1\");\n    sha1.update(key + Hybi.GUID);\n    return sha1.digest(\"base64\");\n};\nHybi.GUID = \"258EAFA5-E914-47DA-95CA-C5AB0DC85B11\";\nvar instance = {\n    FIN: 0x80,\n    MASK: 0x80,\n    RSV1: 0x40,\n    RSV2: 0x20,\n    RSV3: 0x10,\n    OPCODE: 0x0F,\n    LENGTH: 0x7F,\n    OPCODES: {\n        continuation: 0,\n        text: 1,\n        binary: 2,\n        close: 8,\n        ping: 9,\n        pong: 10\n    },\n    OPCODE_CODES: [\n        0,\n        1,\n        2,\n        8,\n        9,\n        10\n    ],\n    MESSAGE_OPCODES: [\n        0,\n        1,\n        2\n    ],\n    OPENING_OPCODES: [\n        1,\n        2\n    ],\n    ERRORS: {\n        normal_closure: 1000,\n        going_away: 1001,\n        protocol_error: 1002,\n        unacceptable: 1003,\n        encoding_error: 1007,\n        policy_violation: 1008,\n        too_large: 1009,\n        extension_error: 1010,\n        unexpected_condition: 1011\n    },\n    ERROR_CODES: [\n        1000,\n        1001,\n        1002,\n        1003,\n        1007,\n        1008,\n        1009,\n        1010,\n        1011\n    ],\n    DEFAULT_ERROR_CODE: 1000,\n    MIN_RESERVED_ERROR: 3000,\n    MAX_RESERVED_ERROR: 4999,\n    // http://www.w3.org/International/questions/qa-forms-utf-8.en.php\n    UTF8_MATCH: /^([\\x00-\\x7F]|[\\xC2-\\xDF][\\x80-\\xBF]|\\xE0[\\xA0-\\xBF][\\x80-\\xBF]|[\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}|\\xED[\\x80-\\x9F][\\x80-\\xBF]|\\xF0[\\x90-\\xBF][\\x80-\\xBF]{2}|[\\xF1-\\xF3][\\x80-\\xBF]{3}|\\xF4[\\x80-\\x8F][\\x80-\\xBF]{2})*$/,\n    addExtension: function(extension) {\n        this._extensions.add(extension);\n        return true;\n    },\n    parse: function(chunk) {\n        this._reader.put(chunk);\n        var buffer = true;\n        while(buffer){\n            switch(this._stage){\n                case 0:\n                    buffer = this._reader.read(1);\n                    if (buffer) this._parseOpcode(buffer[0]);\n                    break;\n                case 1:\n                    buffer = this._reader.read(1);\n                    if (buffer) this._parseLength(buffer[0]);\n                    break;\n                case 2:\n                    buffer = this._reader.read(this._frame.lengthBytes);\n                    if (buffer) this._parseExtendedLength(buffer);\n                    break;\n                case 3:\n                    buffer = this._reader.read(4);\n                    if (buffer) {\n                        this._stage = 4;\n                        this._frame.maskingKey = buffer;\n                    }\n                    break;\n                case 4:\n                    buffer = this._reader.read(this._frame.length);\n                    if (buffer) {\n                        this._stage = 0;\n                        this._emitFrame(buffer);\n                    }\n                    break;\n                default:\n                    buffer = null;\n            }\n        }\n    },\n    text: function(message) {\n        if (this.readyState > 1) return false;\n        return this.frame(message, \"text\");\n    },\n    binary: function(message) {\n        if (this.readyState > 1) return false;\n        return this.frame(message, \"binary\");\n    },\n    ping: function(message, callback) {\n        if (this.readyState > 1) return false;\n        message = message || \"\";\n        if (callback) this._pingCallbacks[message] = callback;\n        return this.frame(message, \"ping\");\n    },\n    pong: function(message) {\n        if (this.readyState > 1) return false;\n        message = message || \"\";\n        return this.frame(message, \"pong\");\n    },\n    close: function(reason, code) {\n        reason = reason || \"\";\n        code = code || this.ERRORS.normal_closure;\n        if (this.readyState <= 0) {\n            this.readyState = 3;\n            this.emit(\"close\", new Base.CloseEvent(code, reason));\n            return true;\n        } else if (this.readyState === 1) {\n            this.readyState = 2;\n            this._extensions.close(function() {\n                this.frame(reason, \"close\", code);\n            }, this);\n            return true;\n        } else {\n            return false;\n        }\n    },\n    frame: function(buffer, type, code) {\n        if (this.readyState <= 0) return this._queue([\n            buffer,\n            type,\n            code\n        ]);\n        if (this.readyState > 2) return false;\n        if (buffer instanceof Array) buffer = Buffer.from(buffer);\n        if (typeof buffer === \"number\") buffer = buffer.toString();\n        var message = new Message(), isText = typeof buffer === \"string\", payload, copy;\n        message.rsv1 = message.rsv2 = message.rsv3 = false;\n        message.opcode = this.OPCODES[type || (isText ? \"text\" : \"binary\")];\n        payload = isText ? Buffer.from(buffer, \"utf8\") : buffer;\n        if (code) {\n            copy = payload;\n            payload = Buffer.allocUnsafe(2 + copy.length);\n            payload.writeUInt16BE(code, 0);\n            copy.copy(payload, 2);\n        }\n        message.data = payload;\n        var onMessageReady = function(message) {\n            var frame = new Frame();\n            frame.final = true;\n            frame.rsv1 = message.rsv1;\n            frame.rsv2 = message.rsv2;\n            frame.rsv3 = message.rsv3;\n            frame.opcode = message.opcode;\n            frame.masked = !!this._masking;\n            frame.length = message.data.length;\n            frame.payload = message.data;\n            if (frame.masked) frame.maskingKey = crypto.randomBytes(4);\n            this._sendFrame(frame);\n        };\n        if (this.MESSAGE_OPCODES.indexOf(message.opcode) >= 0) this._extensions.processOutgoingMessage(message, function(error, message) {\n            if (error) return this._fail(\"extension_error\", error.message);\n            onMessageReady.call(this, message);\n        }, this);\n        else onMessageReady.call(this, message);\n        return true;\n    },\n    _sendFrame: function(frame) {\n        var length = frame.length, header = length <= 125 ? 2 : length <= 65535 ? 4 : 10, offset = header + (frame.masked ? 4 : 0), buffer = Buffer.allocUnsafe(offset + length), masked = frame.masked ? this.MASK : 0;\n        buffer[0] = (frame.final ? this.FIN : 0) | (frame.rsv1 ? this.RSV1 : 0) | (frame.rsv2 ? this.RSV2 : 0) | (frame.rsv3 ? this.RSV3 : 0) | frame.opcode;\n        if (length <= 125) {\n            buffer[1] = masked | length;\n        } else if (length <= 65535) {\n            buffer[1] = masked | 126;\n            buffer.writeUInt16BE(length, 2);\n        } else {\n            buffer[1] = masked | 127;\n            buffer.writeUInt32BE(Math.floor(length / 0x100000000), 2);\n            buffer.writeUInt32BE(length % 0x100000000, 6);\n        }\n        frame.payload.copy(buffer, offset);\n        if (frame.masked) {\n            frame.maskingKey.copy(buffer, header);\n            Hybi.mask(buffer, frame.maskingKey, offset);\n        }\n        this._write(buffer);\n    },\n    _handshakeResponse: function() {\n        var secKey = this._request.headers[\"sec-websocket-key\"], version = this._request.headers[\"sec-websocket-version\"];\n        if (version !== Hybi.VERSION) throw new Error(\"Unsupported WebSocket version: \" + version);\n        if (typeof secKey !== \"string\") throw new Error(\"Missing handshake request header: Sec-WebSocket-Key\");\n        this._headers.set(\"Upgrade\", \"websocket\");\n        this._headers.set(\"Connection\", \"Upgrade\");\n        this._headers.set(\"Sec-WebSocket-Accept\", Hybi.generateAccept(secKey));\n        if (this.protocol) this._headers.set(\"Sec-WebSocket-Protocol\", this.protocol);\n        var extensions = this._extensions.generateResponse(this._request.headers[\"sec-websocket-extensions\"]);\n        if (extensions) this._headers.set(\"Sec-WebSocket-Extensions\", extensions);\n        var start = \"HTTP/1.1 101 Switching Protocols\", headers = [\n            start,\n            this._headers.toString(),\n            \"\"\n        ];\n        return Buffer.from(headers.join(\"\\r\\n\"), \"utf8\");\n    },\n    _shutdown: function(code, reason, error) {\n        delete this._frame;\n        delete this._message;\n        this._stage = 5;\n        var sendCloseFrame = this.readyState === 1;\n        this.readyState = 2;\n        this._extensions.close(function() {\n            if (sendCloseFrame) this.frame(reason, \"close\", code);\n            this.readyState = 3;\n            if (error) this.emit(\"error\", new Error(reason));\n            this.emit(\"close\", new Base.CloseEvent(code, reason));\n        }, this);\n    },\n    _fail: function(type, message) {\n        if (this.readyState > 1) return;\n        this._shutdown(this.ERRORS[type], message, true);\n    },\n    _parseOpcode: function(octet) {\n        var rsvs = [\n            this.RSV1,\n            this.RSV2,\n            this.RSV3\n        ].map(function(rsv) {\n            return (octet & rsv) === rsv;\n        });\n        var frame = this._frame = new Frame();\n        frame.final = (octet & this.FIN) === this.FIN;\n        frame.rsv1 = rsvs[0];\n        frame.rsv2 = rsvs[1];\n        frame.rsv3 = rsvs[2];\n        frame.opcode = octet & this.OPCODE;\n        this._stage = 1;\n        if (!this._extensions.validFrameRsv(frame)) return this._fail(\"protocol_error\", \"One or more reserved bits are on: reserved1 = \" + (frame.rsv1 ? 1 : 0) + \", reserved2 = \" + (frame.rsv2 ? 1 : 0) + \", reserved3 = \" + (frame.rsv3 ? 1 : 0));\n        if (this.OPCODE_CODES.indexOf(frame.opcode) < 0) return this._fail(\"protocol_error\", \"Unrecognized frame opcode: \" + frame.opcode);\n        if (this.MESSAGE_OPCODES.indexOf(frame.opcode) < 0 && !frame.final) return this._fail(\"protocol_error\", \"Received fragmented control frame: opcode = \" + frame.opcode);\n        if (this._message && this.OPENING_OPCODES.indexOf(frame.opcode) >= 0) return this._fail(\"protocol_error\", \"Received new data frame but previous continuous frame is unfinished\");\n    },\n    _parseLength: function(octet) {\n        var frame = this._frame;\n        frame.masked = (octet & this.MASK) === this.MASK;\n        frame.length = octet & this.LENGTH;\n        if (frame.length >= 0 && frame.length <= 125) {\n            this._stage = frame.masked ? 3 : 4;\n            if (!this._checkFrameLength()) return;\n        } else {\n            this._stage = 2;\n            frame.lengthBytes = frame.length === 126 ? 2 : 8;\n        }\n        if (this._requireMasking && !frame.masked) return this._fail(\"unacceptable\", \"Received unmasked frame but masking is required\");\n    },\n    _parseExtendedLength: function(buffer) {\n        var frame = this._frame;\n        frame.length = this._readUInt(buffer);\n        this._stage = frame.masked ? 3 : 4;\n        if (this.MESSAGE_OPCODES.indexOf(frame.opcode) < 0 && frame.length > 125) return this._fail(\"protocol_error\", \"Received control frame having too long payload: \" + frame.length);\n        if (!this._checkFrameLength()) return;\n    },\n    _checkFrameLength: function() {\n        var length = this._message ? this._message.length : 0;\n        if (length + this._frame.length > this._maxLength) {\n            this._fail(\"too_large\", \"WebSocket frame length too large\");\n            return false;\n        } else {\n            return true;\n        }\n    },\n    _emitFrame: function(buffer) {\n        var frame = this._frame, payload = frame.payload = Hybi.mask(buffer, frame.maskingKey), opcode = frame.opcode, message, code, reason, callbacks, callback;\n        delete this._frame;\n        if (opcode === this.OPCODES.continuation) {\n            if (!this._message) return this._fail(\"protocol_error\", \"Received unexpected continuation frame\");\n            this._message.pushFrame(frame);\n        }\n        if (opcode === this.OPCODES.text || opcode === this.OPCODES.binary) {\n            this._message = new Message();\n            this._message.pushFrame(frame);\n        }\n        if (frame.final && this.MESSAGE_OPCODES.indexOf(opcode) >= 0) return this._emitMessage(this._message);\n        if (opcode === this.OPCODES.close) {\n            code = payload.length >= 2 ? payload.readUInt16BE(0) : null;\n            reason = payload.length > 2 ? this._encode(payload.slice(2)) : null;\n            if (!(payload.length === 0) && !(code !== null && code >= this.MIN_RESERVED_ERROR && code <= this.MAX_RESERVED_ERROR) && this.ERROR_CODES.indexOf(code) < 0) code = this.ERRORS.protocol_error;\n            if (payload.length > 125 || payload.length > 2 && !reason) code = this.ERRORS.protocol_error;\n            this._shutdown(code || this.DEFAULT_ERROR_CODE, reason || \"\");\n        }\n        if (opcode === this.OPCODES.ping) {\n            this.frame(payload, \"pong\");\n            this.emit(\"ping\", new Base.PingEvent(payload.toString()));\n        }\n        if (opcode === this.OPCODES.pong) {\n            callbacks = this._pingCallbacks;\n            message = this._encode(payload);\n            callback = callbacks[message];\n            delete callbacks[message];\n            if (callback) callback();\n            this.emit(\"pong\", new Base.PongEvent(payload.toString()));\n        }\n    },\n    _emitMessage: function(message) {\n        var message = this._message;\n        message.read();\n        delete this._message;\n        this._extensions.processIncomingMessage(message, function(error, message) {\n            if (error) return this._fail(\"extension_error\", error.message);\n            var payload = message.data;\n            if (message.opcode === this.OPCODES.text) payload = this._encode(payload);\n            if (payload === null) return this._fail(\"encoding_error\", \"Could not decode a text frame as UTF-8\");\n            else this.emit(\"message\", new Base.MessageEvent(payload));\n        }, this);\n    },\n    _encode: function(buffer) {\n        try {\n            var string = buffer.toString(\"binary\", 0, buffer.length);\n            if (!this.UTF8_MATCH.test(string)) return null;\n        } catch (e) {}\n        return buffer.toString(\"utf8\", 0, buffer.length);\n    },\n    _readUInt: function(buffer) {\n        if (buffer.length === 2) return buffer.readUInt16BE(0);\n        return buffer.readUInt32BE(0) * 0x100000000 + buffer.readUInt32BE(4);\n    }\n};\nfor(var key in instance)Hybi.prototype[key] = instance[key];\nmodule.exports = Hybi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js":
/*!**************************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("\nvar Frame = function() {};\nvar instance = {\n    final: false,\n    rsv1: false,\n    rsv2: false,\n    rsv3: false,\n    opcode: null,\n    masked: false,\n    maskingKey: null,\n    lengthBytes: 1,\n    length: 0,\n    payload: null\n};\nfor(var key in instance)Frame.prototype[key] = instance[key];\nmodule.exports = Frame;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9oeWJpL2ZyYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsUUFBUSxZQUFZO0FBRXhCLElBQUlDLFdBQVc7SUFDYkMsT0FBYztJQUNkQyxNQUFjO0lBQ2RDLE1BQWM7SUFDZEMsTUFBYztJQUNkQyxRQUFjO0lBQ2RDLFFBQWM7SUFDZEMsWUFBYztJQUNkQyxhQUFjO0lBQ2RDLFFBQWM7SUFDZEMsU0FBYztBQUNoQjtBQUVBLElBQUssSUFBSUMsT0FBT1gsU0FDZEQsTUFBTWEsU0FBUyxDQUFDRCxJQUFJLEdBQUdYLFFBQVEsQ0FBQ1csSUFBSTtBQUV0Q0UsT0FBT0MsT0FBTyxHQUFHZiIsInNvdXJjZXMiOlsid2VicGFjazovL2luc2R1c3RyeS10ZWNobm9sb2dpZXMvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9oeWJpL2ZyYW1lLmpzPzQzMzUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgRnJhbWUgPSBmdW5jdGlvbigpIHt9O1xuXG52YXIgaW5zdGFuY2UgPSB7XG4gIGZpbmFsOiAgICAgICAgZmFsc2UsXG4gIHJzdjE6ICAgICAgICAgZmFsc2UsXG4gIHJzdjI6ICAgICAgICAgZmFsc2UsXG4gIHJzdjM6ICAgICAgICAgZmFsc2UsXG4gIG9wY29kZTogICAgICAgbnVsbCxcbiAgbWFza2VkOiAgICAgICBmYWxzZSxcbiAgbWFza2luZ0tleTogICBudWxsLFxuICBsZW5ndGhCeXRlczogIDEsXG4gIGxlbmd0aDogICAgICAgMCxcbiAgcGF5bG9hZDogICAgICBudWxsXG59O1xuXG5mb3IgKHZhciBrZXkgaW4gaW5zdGFuY2UpXG4gIEZyYW1lLnByb3RvdHlwZVtrZXldID0gaW5zdGFuY2Vba2V5XTtcblxubW9kdWxlLmV4cG9ydHMgPSBGcmFtZTtcbiJdLCJuYW1lcyI6WyJGcmFtZSIsImluc3RhbmNlIiwiZmluYWwiLCJyc3YxIiwicnN2MiIsInJzdjMiLCJvcGNvZGUiLCJtYXNrZWQiLCJtYXNraW5nS2V5IiwibGVuZ3RoQnl0ZXMiLCJsZW5ndGgiLCJwYXlsb2FkIiwia2V5IiwicHJvdG90eXBlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js":
/*!****************************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer);\nvar Message = function() {\n    this.rsv1 = false;\n    this.rsv2 = false;\n    this.rsv3 = false;\n    this.opcode = null;\n    this.length = 0;\n    this._chunks = [];\n};\nvar instance = {\n    read: function() {\n        return this.data = this.data || Buffer.concat(this._chunks, this.length);\n    },\n    pushFrame: function(frame) {\n        this.rsv1 = this.rsv1 || frame.rsv1;\n        this.rsv2 = this.rsv2 || frame.rsv2;\n        this.rsv3 = this.rsv3 || frame.rsv3;\n        if (this.opcode === null) this.opcode = frame.opcode;\n        this._chunks.push(frame.payload);\n        this.length += frame.length;\n    }\n};\nfor(var key in instance)Message.prototype[key] = instance[key];\nmodule.exports = Message;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9oeWJpL21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxJQUFJQSxTQUFTQyw0RkFBNkI7QUFFMUMsSUFBSUMsVUFBVTtJQUNaLElBQUksQ0FBQ0MsSUFBSSxHQUFNO0lBQ2YsSUFBSSxDQUFDQyxJQUFJLEdBQU07SUFDZixJQUFJLENBQUNDLElBQUksR0FBTTtJQUNmLElBQUksQ0FBQ0MsTUFBTSxHQUFJO0lBQ2YsSUFBSSxDQUFDQyxNQUFNLEdBQUk7SUFDZixJQUFJLENBQUNDLE9BQU8sR0FBRyxFQUFFO0FBQ25CO0FBRUEsSUFBSUMsV0FBVztJQUNiQyxNQUFNO1FBQ0osT0FBTyxJQUFJLENBQUNDLElBQUksR0FBRyxJQUFJLENBQUNBLElBQUksSUFBSVgsT0FBT1ksTUFBTSxDQUFDLElBQUksQ0FBQ0osT0FBTyxFQUFFLElBQUksQ0FBQ0QsTUFBTTtJQUN6RTtJQUVBTSxXQUFXLFNBQVNDLEtBQUs7UUFDdkIsSUFBSSxDQUFDWCxJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJLElBQUlXLE1BQU1YLElBQUk7UUFDbkMsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJLElBQUlVLE1BQU1WLElBQUk7UUFDbkMsSUFBSSxDQUFDQyxJQUFJLEdBQUcsSUFBSSxDQUFDQSxJQUFJLElBQUlTLE1BQU1ULElBQUk7UUFFbkMsSUFBSSxJQUFJLENBQUNDLE1BQU0sS0FBSyxNQUFNLElBQUksQ0FBQ0EsTUFBTSxHQUFHUSxNQUFNUixNQUFNO1FBRXBELElBQUksQ0FBQ0UsT0FBTyxDQUFDTyxJQUFJLENBQUNELE1BQU1FLE9BQU87UUFDL0IsSUFBSSxDQUFDVCxNQUFNLElBQUlPLE1BQU1QLE1BQU07SUFDN0I7QUFDRjtBQUVBLElBQUssSUFBSVUsT0FBT1IsU0FDZFAsUUFBUWdCLFNBQVMsQ0FBQ0QsSUFBSSxHQUFHUixRQUFRLENBQUNRLElBQUk7QUFFeENFLE9BQU9DLE9BQU8sR0FBR2xCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zZHVzdHJ5LXRlY2hub2xvZ2llcy8uL25vZGVfbW9kdWxlcy93ZWJzb2NrZXQtZHJpdmVyL2xpYi93ZWJzb2NrZXQvZHJpdmVyL2h5YmkvbWVzc2FnZS5qcz9kYjhkIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyO1xuXG52YXIgTWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJzdjEgICAgPSBmYWxzZTtcbiAgdGhpcy5yc3YyICAgID0gZmFsc2U7XG4gIHRoaXMucnN2MyAgICA9IGZhbHNlO1xuICB0aGlzLm9wY29kZSAgPSBudWxsO1xuICB0aGlzLmxlbmd0aCAgPSAwO1xuICB0aGlzLl9jaHVua3MgPSBbXTtcbn07XG5cbnZhciBpbnN0YW5jZSA9IHtcbiAgcmVhZDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YSA9IHRoaXMuZGF0YSB8fCBCdWZmZXIuY29uY2F0KHRoaXMuX2NodW5rcywgdGhpcy5sZW5ndGgpO1xuICB9LFxuXG4gIHB1c2hGcmFtZTogZnVuY3Rpb24oZnJhbWUpIHtcbiAgICB0aGlzLnJzdjEgPSB0aGlzLnJzdjEgfHwgZnJhbWUucnN2MTtcbiAgICB0aGlzLnJzdjIgPSB0aGlzLnJzdjIgfHwgZnJhbWUucnN2MjtcbiAgICB0aGlzLnJzdjMgPSB0aGlzLnJzdjMgfHwgZnJhbWUucnN2MztcblxuICAgIGlmICh0aGlzLm9wY29kZSA9PT0gbnVsbCkgdGhpcy5vcGNvZGUgPSBmcmFtZS5vcGNvZGU7XG5cbiAgICB0aGlzLl9jaHVua3MucHVzaChmcmFtZS5wYXlsb2FkKTtcbiAgICB0aGlzLmxlbmd0aCArPSBmcmFtZS5sZW5ndGg7XG4gIH1cbn07XG5cbmZvciAodmFyIGtleSBpbiBpbnN0YW5jZSlcbiAgTWVzc2FnZS5wcm90b3R5cGVba2V5XSA9IGluc3RhbmNlW2tleV07XG5cbm1vZHVsZS5leHBvcnRzID0gTWVzc2FnZTtcbiJdLCJuYW1lcyI6WyJCdWZmZXIiLCJyZXF1aXJlIiwiTWVzc2FnZSIsInJzdjEiLCJyc3YyIiwicnN2MyIsIm9wY29kZSIsImxlbmd0aCIsIl9jaHVua3MiLCJpbnN0YW5jZSIsInJlYWQiLCJkYXRhIiwiY29uY2F0IiwicHVzaEZyYW1lIiwiZnJhbWUiLCJwdXNoIiwicGF5bG9hZCIsImtleSIsInByb3RvdHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/proxy.js":
/*!*********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/proxy.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer), Stream = (__webpack_require__(/*! stream */ \"stream\").Stream), url = __webpack_require__(/*! url */ \"url\"), util = __webpack_require__(/*! util */ \"util\"), Base = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"), Headers = __webpack_require__(/*! ./headers */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/headers.js\"), HttpParser = __webpack_require__(/*! ../http_parser */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/http_parser.js\");\nvar PORTS = {\n    \"ws:\": 80,\n    \"wss:\": 443\n};\nvar Proxy = function(client, origin, options) {\n    this._client = client;\n    this._http = new HttpParser(\"response\");\n    this._origin = typeof client.url === \"object\" ? client.url : url.parse(client.url);\n    this._url = typeof origin === \"object\" ? origin : url.parse(origin);\n    this._options = options || {};\n    this._state = 0;\n    this.readable = this.writable = true;\n    this._paused = false;\n    this._headers = new Headers();\n    this._headers.set(\"Host\", this._origin.host);\n    this._headers.set(\"Connection\", \"keep-alive\");\n    this._headers.set(\"Proxy-Connection\", \"keep-alive\");\n    var auth = this._url.auth && Buffer.from(this._url.auth, \"utf8\").toString(\"base64\");\n    if (auth) this._headers.set(\"Proxy-Authorization\", \"Basic \" + auth);\n};\nutil.inherits(Proxy, Stream);\nvar instance = {\n    setHeader: function(name, value) {\n        if (this._state !== 0) return false;\n        this._headers.set(name, value);\n        return true;\n    },\n    start: function() {\n        if (this._state !== 0) return false;\n        this._state = 1;\n        var origin = this._origin, port = origin.port || PORTS[origin.protocol], start = \"CONNECT \" + origin.hostname + \":\" + port + \" HTTP/1.1\";\n        var headers = [\n            start,\n            this._headers.toString(),\n            \"\"\n        ];\n        this.emit(\"data\", Buffer.from(headers.join(\"\\r\\n\"), \"utf8\"));\n        return true;\n    },\n    pause: function() {\n        this._paused = true;\n    },\n    resume: function() {\n        this._paused = false;\n        this.emit(\"drain\");\n    },\n    write: function(chunk) {\n        if (!this.writable) return false;\n        this._http.parse(chunk);\n        if (!this._http.isComplete()) return !this._paused;\n        this.statusCode = this._http.statusCode;\n        this.headers = this._http.headers;\n        if (this.statusCode === 200) {\n            this.emit(\"connect\", new Base.ConnectEvent());\n        } else {\n            var message = \"Can't establish a connection to the server at \" + this._origin.href;\n            this.emit(\"error\", new Error(message));\n        }\n        this.end();\n        return !this._paused;\n    },\n    end: function(chunk) {\n        if (!this.writable) return;\n        if (chunk !== undefined) this.write(chunk);\n        this.readable = this.writable = false;\n        this.emit(\"close\");\n        this.emit(\"end\");\n    },\n    destroy: function() {\n        this.end();\n    }\n};\nfor(var key in instance)Proxy.prototype[key] = instance[key];\nmodule.exports = Proxy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/proxy.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/server.js":
/*!**********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/server.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar util = __webpack_require__(/*! util */ \"util\"), HttpParser = __webpack_require__(/*! ../http_parser */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/http_parser.js\"), Base = __webpack_require__(/*! ./base */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"), Draft75 = __webpack_require__(/*! ./draft75 */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js\"), Draft76 = __webpack_require__(/*! ./draft76 */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/draft76.js\"), Hybi = __webpack_require__(/*! ./hybi */ \"(rsc)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js\");\nvar Server = function(options) {\n    Base.call(this, null, null, options);\n    this._http = new HttpParser(\"request\");\n};\nutil.inherits(Server, Base);\nvar instance = {\n    EVENTS: [\n        \"open\",\n        \"message\",\n        \"error\",\n        \"close\",\n        \"ping\",\n        \"pong\"\n    ],\n    _bindEventListeners: function() {\n        this.messages.on(\"error\", function() {});\n        this.on(\"error\", function() {});\n    },\n    parse: function(chunk) {\n        if (this._delegate) return this._delegate.parse(chunk);\n        this._http.parse(chunk);\n        if (!this._http.isComplete()) return;\n        this.method = this._http.method;\n        this.url = this._http.url;\n        this.headers = this._http.headers;\n        this.body = this._http.body;\n        var self = this;\n        this._delegate = Server.http(this, this._options);\n        this._delegate.messages = this.messages;\n        this._delegate.io = this.io;\n        this._open();\n        this.EVENTS.forEach(function(event) {\n            this._delegate.on(event, function(e) {\n                self.emit(event, e);\n            });\n        }, this);\n        this.protocol = this._delegate.protocol;\n        this.version = this._delegate.version;\n        this.parse(this._http.body);\n        this.emit(\"connect\", new Base.ConnectEvent());\n    },\n    _open: function() {\n        this.__queue.forEach(function(msg) {\n            this._delegate[msg[0]].apply(this._delegate, msg[1]);\n        }, this);\n        this.__queue = [];\n    }\n};\n[\n    \"addExtension\",\n    \"setHeader\",\n    \"start\",\n    \"frame\",\n    \"text\",\n    \"binary\",\n    \"ping\",\n    \"close\"\n].forEach(function(method) {\n    instance[method] = function() {\n        if (this._delegate) {\n            return this._delegate[method].apply(this._delegate, arguments);\n        } else {\n            this.__queue.push([\n                method,\n                arguments\n            ]);\n            return true;\n        }\n    };\n});\nfor(var key in instance)Server.prototype[key] = instance[key];\nServer.isSecureRequest = function(request) {\n    if (request.connection && request.connection.authorized !== undefined) return true;\n    if (request.socket && request.socket.secure) return true;\n    var headers = request.headers;\n    if (!headers) return false;\n    if (headers[\"https\"] === \"on\") return true;\n    if (headers[\"x-forwarded-ssl\"] === \"on\") return true;\n    if (headers[\"x-forwarded-scheme\"] === \"https\") return true;\n    if (headers[\"x-forwarded-proto\"] === \"https\") return true;\n    return false;\n};\nServer.determineUrl = function(request) {\n    var scheme = this.isSecureRequest(request) ? \"wss:\" : \"ws:\";\n    return scheme + \"//\" + request.headers.host + request.url;\n};\nServer.http = function(request, options) {\n    options = options || {};\n    if (options.requireMasking === undefined) options.requireMasking = true;\n    var headers = request.headers, version = headers[\"sec-websocket-version\"], key = headers[\"sec-websocket-key\"], key1 = headers[\"sec-websocket-key1\"], key2 = headers[\"sec-websocket-key2\"], url = this.determineUrl(request);\n    if (version || key) return new Hybi(request, url, options);\n    else if (key1 || key2) return new Draft76(request, url, options);\n    else return new Draft75(request, url, options);\n};\nmodule.exports = Server;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/server.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer);\nvar StreamReader = function() {\n    this._queue = [];\n    this._queueSize = 0;\n    this._offset = 0;\n};\nStreamReader.prototype.put = function(buffer) {\n    if (!buffer || buffer.length === 0) return;\n    if (!Buffer.isBuffer(buffer)) buffer = Buffer.from(buffer);\n    this._queue.push(buffer);\n    this._queueSize += buffer.length;\n};\nStreamReader.prototype.read = function(length) {\n    if (length > this._queueSize) return null;\n    if (length === 0) return Buffer.alloc(0);\n    this._queueSize -= length;\n    var queue = this._queue, remain = length, first = queue[0], buffers, buffer;\n    if (first.length >= length) {\n        if (first.length === length) {\n            return queue.shift();\n        } else {\n            buffer = first.slice(0, length);\n            queue[0] = first.slice(length);\n            return buffer;\n        }\n    }\n    for(var i = 0, n = queue.length; i < n; i++){\n        if (remain < queue[i].length) break;\n        remain -= queue[i].length;\n    }\n    buffers = queue.splice(0, i);\n    if (remain > 0 && queue.length > 0) {\n        buffers.push(queue[0].slice(0, remain));\n        queue[0] = queue[0].slice(remain);\n    }\n    return Buffer.concat(buffers, length);\n};\nStreamReader.prototype.eachByte = function(callback, context) {\n    var buffer, n, index;\n    while(this._queue.length > 0){\n        buffer = this._queue[0];\n        n = buffer.length;\n        while(this._offset < n){\n            index = this._offset;\n            this._offset += 1;\n            callback.call(context, buffer[index]);\n        }\n        this._offset = 0;\n        this._queue.shift();\n    }\n};\nmodule.exports = StreamReader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9zdHJlYW1fcmVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsSUFBSUEsU0FBU0MsNEZBQTZCO0FBRTFDLElBQUlDLGVBQWU7SUFDakIsSUFBSSxDQUFDQyxNQUFNLEdBQU8sRUFBRTtJQUNwQixJQUFJLENBQUNDLFVBQVUsR0FBRztJQUNsQixJQUFJLENBQUNDLE9BQU8sR0FBTTtBQUNwQjtBQUVBSCxhQUFhSSxTQUFTLENBQUNDLEdBQUcsR0FBRyxTQUFTQyxNQUFNO0lBQzFDLElBQUksQ0FBQ0EsVUFBVUEsT0FBT0MsTUFBTSxLQUFLLEdBQUc7SUFDcEMsSUFBSSxDQUFDVCxPQUFPVSxRQUFRLENBQUNGLFNBQVNBLFNBQVNSLE9BQU9XLElBQUksQ0FBQ0g7SUFDbkQsSUFBSSxDQUFDTCxNQUFNLENBQUNTLElBQUksQ0FBQ0o7SUFDakIsSUFBSSxDQUFDSixVQUFVLElBQUlJLE9BQU9DLE1BQU07QUFDbEM7QUFFQVAsYUFBYUksU0FBUyxDQUFDTyxJQUFJLEdBQUcsU0FBU0osTUFBTTtJQUMzQyxJQUFJQSxTQUFTLElBQUksQ0FBQ0wsVUFBVSxFQUFFLE9BQU87SUFDckMsSUFBSUssV0FBVyxHQUFHLE9BQU9ULE9BQU9jLEtBQUssQ0FBQztJQUV0QyxJQUFJLENBQUNWLFVBQVUsSUFBSUs7SUFFbkIsSUFBSU0sUUFBUyxJQUFJLENBQUNaLE1BQU0sRUFDcEJhLFNBQVNQLFFBQ1RRLFFBQVNGLEtBQUssQ0FBQyxFQUFFLEVBQ2pCRyxTQUFTVjtJQUViLElBQUlTLE1BQU1SLE1BQU0sSUFBSUEsUUFBUTtRQUMxQixJQUFJUSxNQUFNUixNQUFNLEtBQUtBLFFBQVE7WUFDM0IsT0FBT00sTUFBTUksS0FBSztRQUNwQixPQUFPO1lBQ0xYLFNBQVNTLE1BQU1HLEtBQUssQ0FBQyxHQUFHWDtZQUN4Qk0sS0FBSyxDQUFDLEVBQUUsR0FBR0UsTUFBTUcsS0FBSyxDQUFDWDtZQUN2QixPQUFPRDtRQUNUO0lBQ0Y7SUFFQSxJQUFLLElBQUlhLElBQUksR0FBR0MsSUFBSVAsTUFBTU4sTUFBTSxFQUFFWSxJQUFJQyxHQUFHRCxJQUFLO1FBQzVDLElBQUlMLFNBQVNELEtBQUssQ0FBQ00sRUFBRSxDQUFDWixNQUFNLEVBQUU7UUFDOUJPLFVBQVVELEtBQUssQ0FBQ00sRUFBRSxDQUFDWixNQUFNO0lBQzNCO0lBQ0FTLFVBQVVILE1BQU1RLE1BQU0sQ0FBQyxHQUFHRjtJQUUxQixJQUFJTCxTQUFTLEtBQUtELE1BQU1OLE1BQU0sR0FBRyxHQUFHO1FBQ2xDUyxRQUFRTixJQUFJLENBQUNHLEtBQUssQ0FBQyxFQUFFLENBQUNLLEtBQUssQ0FBQyxHQUFHSjtRQUMvQkQsS0FBSyxDQUFDLEVBQUUsR0FBR0EsS0FBSyxDQUFDLEVBQUUsQ0FBQ0ssS0FBSyxDQUFDSjtJQUM1QjtJQUNBLE9BQU9oQixPQUFPd0IsTUFBTSxDQUFDTixTQUFTVDtBQUNoQztBQUVBUCxhQUFhSSxTQUFTLENBQUNtQixRQUFRLEdBQUcsU0FBU0MsUUFBUSxFQUFFQyxPQUFPO0lBQzFELElBQUluQixRQUFRYyxHQUFHTTtJQUVmLE1BQU8sSUFBSSxDQUFDekIsTUFBTSxDQUFDTSxNQUFNLEdBQUcsRUFBRztRQUM3QkQsU0FBUyxJQUFJLENBQUNMLE1BQU0sQ0FBQyxFQUFFO1FBQ3ZCbUIsSUFBSWQsT0FBT0MsTUFBTTtRQUVqQixNQUFPLElBQUksQ0FBQ0osT0FBTyxHQUFHaUIsRUFBRztZQUN2Qk0sUUFBUSxJQUFJLENBQUN2QixPQUFPO1lBQ3BCLElBQUksQ0FBQ0EsT0FBTyxJQUFJO1lBQ2hCcUIsU0FBU0csSUFBSSxDQUFDRixTQUFTbkIsTUFBTSxDQUFDb0IsTUFBTTtRQUN0QztRQUNBLElBQUksQ0FBQ3ZCLE9BQU8sR0FBRztRQUNmLElBQUksQ0FBQ0YsTUFBTSxDQUFDZ0IsS0FBSztJQUNuQjtBQUNGO0FBRUFXLE9BQU9DLE9BQU8sR0FBRzdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zZHVzdHJ5LXRlY2hub2xvZ2llcy8uL25vZGVfbW9kdWxlcy93ZWJzb2NrZXQtZHJpdmVyL2xpYi93ZWJzb2NrZXQvZHJpdmVyL3N0cmVhbV9yZWFkZXIuanM/YWRiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBCdWZmZXIgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcjtcblxudmFyIFN0cmVhbVJlYWRlciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9xdWV1ZSAgICAgPSBbXTtcbiAgdGhpcy5fcXVldWVTaXplID0gMDtcbiAgdGhpcy5fb2Zmc2V0ICAgID0gMDtcbn07XG5cblN0cmVhbVJlYWRlci5wcm90b3R5cGUucHV0ID0gZnVuY3Rpb24oYnVmZmVyKSB7XG4gIGlmICghYnVmZmVyIHx8IGJ1ZmZlci5sZW5ndGggPT09IDApIHJldHVybjtcbiAgaWYgKCFCdWZmZXIuaXNCdWZmZXIoYnVmZmVyKSkgYnVmZmVyID0gQnVmZmVyLmZyb20oYnVmZmVyKTtcbiAgdGhpcy5fcXVldWUucHVzaChidWZmZXIpO1xuICB0aGlzLl9xdWV1ZVNpemUgKz0gYnVmZmVyLmxlbmd0aDtcbn07XG5cblN0cmVhbVJlYWRlci5wcm90b3R5cGUucmVhZCA9IGZ1bmN0aW9uKGxlbmd0aCkge1xuICBpZiAobGVuZ3RoID4gdGhpcy5fcXVldWVTaXplKSByZXR1cm4gbnVsbDtcbiAgaWYgKGxlbmd0aCA9PT0gMCkgcmV0dXJuIEJ1ZmZlci5hbGxvYygwKTtcblxuICB0aGlzLl9xdWV1ZVNpemUgLT0gbGVuZ3RoO1xuXG4gIHZhciBxdWV1ZSAgPSB0aGlzLl9xdWV1ZSxcbiAgICAgIHJlbWFpbiA9IGxlbmd0aCxcbiAgICAgIGZpcnN0ICA9IHF1ZXVlWzBdLFxuICAgICAgYnVmZmVycywgYnVmZmVyO1xuXG4gIGlmIChmaXJzdC5sZW5ndGggPj0gbGVuZ3RoKSB7XG4gICAgaWYgKGZpcnN0Lmxlbmd0aCA9PT0gbGVuZ3RoKSB7XG4gICAgICByZXR1cm4gcXVldWUuc2hpZnQoKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYnVmZmVyID0gZmlyc3Quc2xpY2UoMCwgbGVuZ3RoKTtcbiAgICAgIHF1ZXVlWzBdID0gZmlyc3Quc2xpY2UobGVuZ3RoKTtcbiAgICAgIHJldHVybiBidWZmZXI7XG4gICAgfVxuICB9XG5cbiAgZm9yICh2YXIgaSA9IDAsIG4gPSBxdWV1ZS5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICBpZiAocmVtYWluIDwgcXVldWVbaV0ubGVuZ3RoKSBicmVhaztcbiAgICByZW1haW4gLT0gcXVldWVbaV0ubGVuZ3RoO1xuICB9XG4gIGJ1ZmZlcnMgPSBxdWV1ZS5zcGxpY2UoMCwgaSk7XG5cbiAgaWYgKHJlbWFpbiA+IDAgJiYgcXVldWUubGVuZ3RoID4gMCkge1xuICAgIGJ1ZmZlcnMucHVzaChxdWV1ZVswXS5zbGljZSgwLCByZW1haW4pKTtcbiAgICBxdWV1ZVswXSA9IHF1ZXVlWzBdLnNsaWNlKHJlbWFpbik7XG4gIH1cbiAgcmV0dXJuIEJ1ZmZlci5jb25jYXQoYnVmZmVycywgbGVuZ3RoKTtcbn07XG5cblN0cmVhbVJlYWRlci5wcm90b3R5cGUuZWFjaEJ5dGUgPSBmdW5jdGlvbihjYWxsYmFjaywgY29udGV4dCkge1xuICB2YXIgYnVmZmVyLCBuLCBpbmRleDtcblxuICB3aGlsZSAodGhpcy5fcXVldWUubGVuZ3RoID4gMCkge1xuICAgIGJ1ZmZlciA9IHRoaXMuX3F1ZXVlWzBdO1xuICAgIG4gPSBidWZmZXIubGVuZ3RoO1xuXG4gICAgd2hpbGUgKHRoaXMuX29mZnNldCA8IG4pIHtcbiAgICAgIGluZGV4ID0gdGhpcy5fb2Zmc2V0O1xuICAgICAgdGhpcy5fb2Zmc2V0ICs9IDE7XG4gICAgICBjYWxsYmFjay5jYWxsKGNvbnRleHQsIGJ1ZmZlcltpbmRleF0pO1xuICAgIH1cbiAgICB0aGlzLl9vZmZzZXQgPSAwO1xuICAgIHRoaXMuX3F1ZXVlLnNoaWZ0KCk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gU3RyZWFtUmVhZGVyO1xuIl0sIm5hbWVzIjpbIkJ1ZmZlciIsInJlcXVpcmUiLCJTdHJlYW1SZWFkZXIiLCJfcXVldWUiLCJfcXVldWVTaXplIiwiX29mZnNldCIsInByb3RvdHlwZSIsInB1dCIsImJ1ZmZlciIsImxlbmd0aCIsImlzQnVmZmVyIiwiZnJvbSIsInB1c2giLCJyZWFkIiwiYWxsb2MiLCJxdWV1ZSIsInJlbWFpbiIsImZpcnN0IiwiYnVmZmVycyIsInNoaWZ0Iiwic2xpY2UiLCJpIiwibiIsInNwbGljZSIsImNvbmNhdCIsImVhY2hCeXRlIiwiY2FsbGJhY2siLCJjb250ZXh0IiwiaW5kZXgiLCJjYWxsIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/http_parser.js":
/*!********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/http_parser.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\nvar NodeHTTPParser = (__webpack_require__(/*! http-parser-js */ \"(rsc)/./node_modules/http-parser-js/http-parser.js\").HTTPParser), Buffer = (__webpack_require__(/*! safe-buffer */ \"(rsc)/./node_modules/safe-buffer/index.js\").Buffer);\nvar TYPES = {\n    request: NodeHTTPParser.REQUEST || \"request\",\n    response: NodeHTTPParser.RESPONSE || \"response\"\n};\nvar HttpParser = function(type) {\n    this._type = type;\n    this._parser = new NodeHTTPParser(TYPES[type]);\n    this._complete = false;\n    this.headers = {};\n    var current = null, self = this;\n    this._parser.onHeaderField = function(b, start, length) {\n        current = b.toString(\"utf8\", start, start + length).toLowerCase();\n    };\n    this._parser.onHeaderValue = function(b, start, length) {\n        var value = b.toString(\"utf8\", start, start + length);\n        if (self.headers.hasOwnProperty(current)) self.headers[current] += \", \" + value;\n        else self.headers[current] = value;\n    };\n    this._parser.onHeadersComplete = this._parser[NodeHTTPParser.kOnHeadersComplete] = function(majorVersion, minorVersion, headers, method, pathname, statusCode) {\n        var info = arguments[0];\n        if (typeof info === \"object\") {\n            method = info.method;\n            pathname = info.url;\n            statusCode = info.statusCode;\n            headers = info.headers;\n        }\n        self.method = typeof method === \"number\" ? HttpParser.METHODS[method] : method;\n        self.statusCode = statusCode;\n        self.url = pathname;\n        if (!headers) return;\n        for(var i = 0, n = headers.length, key, value; i < n; i += 2){\n            key = headers[i].toLowerCase();\n            value = headers[i + 1];\n            if (self.headers.hasOwnProperty(key)) self.headers[key] += \", \" + value;\n            else self.headers[key] = value;\n        }\n        self._complete = true;\n    };\n};\nHttpParser.METHODS = {\n    0: \"DELETE\",\n    1: \"GET\",\n    2: \"HEAD\",\n    3: \"POST\",\n    4: \"PUT\",\n    5: \"CONNECT\",\n    6: \"OPTIONS\",\n    7: \"TRACE\",\n    8: \"COPY\",\n    9: \"LOCK\",\n    10: \"MKCOL\",\n    11: \"MOVE\",\n    12: \"PROPFIND\",\n    13: \"PROPPATCH\",\n    14: \"SEARCH\",\n    15: \"UNLOCK\",\n    16: \"BIND\",\n    17: \"REBIND\",\n    18: \"UNBIND\",\n    19: \"ACL\",\n    20: \"REPORT\",\n    21: \"MKACTIVITY\",\n    22: \"CHECKOUT\",\n    23: \"MERGE\",\n    24: \"M-SEARCH\",\n    25: \"NOTIFY\",\n    26: \"SUBSCRIBE\",\n    27: \"UNSUBSCRIBE\",\n    28: \"PATCH\",\n    29: \"PURGE\",\n    30: \"MKCALENDAR\",\n    31: \"LINK\",\n    32: \"UNLINK\"\n};\nvar VERSION = process.version ? process.version.match(/[0-9]+/g).map(function(n) {\n    return parseInt(n, 10);\n}) : [];\nif (VERSION[0] === 0 && VERSION[1] === 12) {\n    HttpParser.METHODS[16] = \"REPORT\";\n    HttpParser.METHODS[17] = \"MKACTIVITY\";\n    HttpParser.METHODS[18] = \"CHECKOUT\";\n    HttpParser.METHODS[19] = \"MERGE\";\n    HttpParser.METHODS[20] = \"M-SEARCH\";\n    HttpParser.METHODS[21] = \"NOTIFY\";\n    HttpParser.METHODS[22] = \"SUBSCRIBE\";\n    HttpParser.METHODS[23] = \"UNSUBSCRIBE\";\n    HttpParser.METHODS[24] = \"PATCH\";\n    HttpParser.METHODS[25] = \"PURGE\";\n}\nHttpParser.prototype.isComplete = function() {\n    return this._complete;\n};\nHttpParser.prototype.parse = function(chunk) {\n    var consumed = this._parser.execute(chunk, 0, chunk.length);\n    if (typeof consumed !== \"number\") {\n        this.error = consumed;\n        this._complete = true;\n        return;\n    }\n    if (this._complete) this.body = consumed < chunk.length ? chunk.slice(consumed) : Buffer.alloc(0);\n};\nmodule.exports = HttpParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/http_parser.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/websocket-driver/lib/websocket/streams.js":
/*!****************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/streams.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n/**\n\nStreams in a WebSocket connection\n---------------------------------\n\nWe model a WebSocket as two duplex streams: one stream is for the wire protocol\nover an I/O socket, and the other is for incoming/outgoing messages.\n\n\n                        +----------+      +---------+      +----------+\n    [1] write(chunk) -->| ~~~~~~~~ +----->| parse() +----->| ~~~~~~~~ +--> emit('data') [2]\n                        |          |      +----+----+      |          |\n                        |          |           |           |          |\n                        |    IO    |           | [5]       | Messages |\n                        |          |           V           |          |\n                        |          |      +---------+      |          |\n    [4] emit('data') <--+ ~~~~~~~~ |<-----+ frame() |<-----+ ~~~~~~~~ |<-- write(chunk) [3]\n                        +----------+      +---------+      +----------+\n\n\nMessage transfer in each direction is simple: IO receives a byte stream [1] and\nsends this stream for parsing. The parser will periodically emit a complete\nmessage text on the Messages stream [2]. Similarly, when messages are written\nto the Messages stream [3], they are framed using the WebSocket wire format and\nemitted via IO [4].\n\nThere is a feedback loop via [5] since some input from [1] will be things like\nping, pong and close frames. In these cases the protocol responds by emitting\nresponses directly back to [4] rather than emitting messages via [2].\n\nFor the purposes of flow control, we consider the sources of each Readable\nstream to be as follows:\n\n* [2] receives input from [1]\n* [4] receives input from [1] and [3]\n\nThe classes below express the relationships described above without prescribing\nanything about how parse() and frame() work, other than assuming they emit\n'data' events to the IO and Messages streams. They will work with any protocol\ndriver having these two methods.\n**/ var Stream = (__webpack_require__(/*! stream */ \"stream\").Stream), util = __webpack_require__(/*! util */ \"util\");\nvar IO = function(driver) {\n    this.readable = this.writable = true;\n    this._paused = false;\n    this._driver = driver;\n};\nutil.inherits(IO, Stream);\n// The IO pause() and resume() methods will be called when the socket we are\n// piping to gets backed up and drains. Since IO output [4] comes from IO input\n// [1] and Messages input [3], we need to tell both of those to return false\n// from write() when this stream is paused.\nIO.prototype.pause = function() {\n    this._paused = true;\n    this._driver.messages._paused = true;\n};\nIO.prototype.resume = function() {\n    this._paused = false;\n    this.emit(\"drain\");\n    var messages = this._driver.messages;\n    messages._paused = false;\n    messages.emit(\"drain\");\n};\n// When we receive input from a socket, send it to the parser and tell the\n// source whether to back off.\nIO.prototype.write = function(chunk) {\n    if (!this.writable) return false;\n    this._driver.parse(chunk);\n    return !this._paused;\n};\n// The IO end() method will be called when the socket piping into it emits\n// 'close' or 'end', i.e. the socket is closed. In this situation the Messages\n// stream will not emit any more data so we emit 'end'.\nIO.prototype.end = function(chunk) {\n    if (!this.writable) return;\n    if (chunk !== undefined) this.write(chunk);\n    this.writable = false;\n    var messages = this._driver.messages;\n    if (messages.readable) {\n        messages.readable = messages.writable = false;\n        messages.emit(\"end\");\n    }\n};\nIO.prototype.destroy = function() {\n    this.end();\n};\nvar Messages = function(driver) {\n    this.readable = this.writable = true;\n    this._paused = false;\n    this._driver = driver;\n};\nutil.inherits(Messages, Stream);\n// The Messages pause() and resume() methods will be called when the app that's\n// processing the messages gets backed up and drains. If we're emitting\n// messages too fast we should tell the source to slow down. Message output [2]\n// comes from IO input [1].\nMessages.prototype.pause = function() {\n    this._driver.io._paused = true;\n};\nMessages.prototype.resume = function() {\n    this._driver.io._paused = false;\n    this._driver.io.emit(\"drain\");\n};\n// When we receive messages from the user, send them to the formatter and tell\n// the source whether to back off.\nMessages.prototype.write = function(message) {\n    if (!this.writable) return false;\n    if (typeof message === \"string\") this._driver.text(message);\n    else this._driver.binary(message);\n    return !this._paused;\n};\n// The Messages end() method will be called when a stream piping into it emits\n// 'end'. Many streams may be piped into the WebSocket and one of them ending\n// does not mean the whole socket is done, so just process the input and move\n// on leaving the socket open.\nMessages.prototype.end = function(message) {\n    if (message !== undefined) this.write(message);\n};\nMessages.prototype.destroy = function() {};\nexports.IO = IO;\nexports.Messages = Messages;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/websocket-driver/lib/websocket/streams.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver.js":
/*!***************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n// Protocol references:\n//\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76\n// * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17\n\nvar Base   = __webpack_require__(/*! ./driver/base */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"),\n    Client = __webpack_require__(/*! ./driver/client */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/client.js\"),\n    Server = __webpack_require__(/*! ./driver/server */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/server.js\");\n\nvar Driver = {\n  client: function(url, options) {\n    options = options || {};\n    if (options.masking === undefined) options.masking = true;\n    return new Client(url, options);\n  },\n\n  server: function(options) {\n    options = options || {};\n    if (options.requireMasking === undefined) options.requireMasking = true;\n    return new Server(options);\n  },\n\n  http: function() {\n    return Server.http.apply(Server, arguments);\n  },\n\n  isSecureRequest: function(request) {\n    return Server.isSecureRequest(request);\n  },\n\n  isWebSocket: function(request) {\n    return Base.isWebSocket(request);\n  },\n\n  validateOptions: function(options, validKeys) {\n    Base.validateOptions(options, validKeys);\n  }\n};\n\nmodule.exports = Driver;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGFBQWEsbUJBQU8sQ0FBQyx5RkFBZTtBQUNwQyxhQUFhLG1CQUFPLENBQUMsNkZBQWlCO0FBQ3RDLGFBQWEsbUJBQU8sQ0FBQyw2RkFBaUI7O0FBRXRDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc2R1c3RyeS10ZWNobm9sb2dpZXMvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci5qcz85NzMxIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLy8gUHJvdG9jb2wgcmVmZXJlbmNlczpcbi8vXG4vLyAqIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2RyYWZ0LWhpeGllLXRoZXdlYnNvY2tldHByb3RvY29sLTc1XG4vLyAqIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2RyYWZ0LWhpeGllLXRoZXdlYnNvY2tldHByb3RvY29sLTc2XG4vLyAqIGh0dHA6Ly90b29scy5pZXRmLm9yZy9odG1sL2RyYWZ0LWlldGYtaHliaS10aGV3ZWJzb2NrZXRwcm90b2NvbC0xN1xuXG52YXIgQmFzZSAgID0gcmVxdWlyZSgnLi9kcml2ZXIvYmFzZScpLFxuICAgIENsaWVudCA9IHJlcXVpcmUoJy4vZHJpdmVyL2NsaWVudCcpLFxuICAgIFNlcnZlciA9IHJlcXVpcmUoJy4vZHJpdmVyL3NlcnZlcicpO1xuXG52YXIgRHJpdmVyID0ge1xuICBjbGllbnQ6IGZ1bmN0aW9uKHVybCwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIGlmIChvcHRpb25zLm1hc2tpbmcgPT09IHVuZGVmaW5lZCkgb3B0aW9ucy5tYXNraW5nID0gdHJ1ZTtcbiAgICByZXR1cm4gbmV3IENsaWVudCh1cmwsIG9wdGlvbnMpO1xuICB9LFxuXG4gIHNlcnZlcjogZnVuY3Rpb24ob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIGlmIChvcHRpb25zLnJlcXVpcmVNYXNraW5nID09PSB1bmRlZmluZWQpIG9wdGlvbnMucmVxdWlyZU1hc2tpbmcgPSB0cnVlO1xuICAgIHJldHVybiBuZXcgU2VydmVyKG9wdGlvbnMpO1xuICB9LFxuXG4gIGh0dHA6IGZ1bmN0aW9uKCkge1xuICAgIHJldHVybiBTZXJ2ZXIuaHR0cC5hcHBseShTZXJ2ZXIsIGFyZ3VtZW50cyk7XG4gIH0sXG5cbiAgaXNTZWN1cmVSZXF1ZXN0OiBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gICAgcmV0dXJuIFNlcnZlci5pc1NlY3VyZVJlcXVlc3QocmVxdWVzdCk7XG4gIH0sXG5cbiAgaXNXZWJTb2NrZXQ6IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgICByZXR1cm4gQmFzZS5pc1dlYlNvY2tldChyZXF1ZXN0KTtcbiAgfSxcblxuICB2YWxpZGF0ZU9wdGlvbnM6IGZ1bmN0aW9uKG9wdGlvbnMsIHZhbGlkS2V5cykge1xuICAgIEJhc2UudmFsaWRhdGVPcHRpb25zKG9wdGlvbnMsIHZhbGlkS2V5cyk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRHJpdmVyO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js":
/*!********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/base.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer  = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer),\n    Emitter = (__webpack_require__(/*! events */ \"events\").EventEmitter),\n    util    = __webpack_require__(/*! util */ \"util\"),\n    streams = __webpack_require__(/*! ../streams */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/streams.js\"),\n    Headers = __webpack_require__(/*! ./headers */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/headers.js\"),\n    Reader  = __webpack_require__(/*! ./stream_reader */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js\");\n\nvar Base = function(request, url, options) {\n  Emitter.call(this);\n  Base.validateOptions(options || {}, ['maxLength', 'masking', 'requireMasking', 'protocols']);\n\n  this._request   = request;\n  this._reader    = new Reader();\n  this._options   = options || {};\n  this._maxLength = this._options.maxLength || this.MAX_LENGTH;\n  this._headers   = new Headers();\n  this.__queue    = [];\n  this.readyState = 0;\n  this.url        = url;\n\n  this.io = new streams.IO(this);\n  this.messages = new streams.Messages(this);\n  this._bindEventListeners();\n};\nutil.inherits(Base, Emitter);\n\nBase.isWebSocket = function(request) {\n  var connection = request.headers.connection || '',\n      upgrade    = request.headers.upgrade || '';\n\n  return request.method === 'GET' &&\n         connection.toLowerCase().split(/ *, */).indexOf('upgrade') >= 0 &&\n         upgrade.toLowerCase() === 'websocket';\n};\n\nBase.validateOptions = function(options, validKeys) {\n  for (var key in options) {\n    if (validKeys.indexOf(key) < 0)\n      throw new Error('Unrecognized option: ' + key);\n  }\n};\n\nvar instance = {\n  // This is 64MB, small enough for an average VPS to handle without\n  // crashing from process out of memory\n  MAX_LENGTH: 0x3ffffff,\n\n  STATES: ['connecting', 'open', 'closing', 'closed'],\n\n  _bindEventListeners: function() {\n    var self = this;\n\n    // Protocol errors are informational and do not have to be handled\n    this.messages.on('error', function() {});\n\n    this.on('message', function(event) {\n      var messages = self.messages;\n      if (messages.readable) messages.emit('data', event.data);\n    });\n\n    this.on('error', function(error) {\n      var messages = self.messages;\n      if (messages.readable) messages.emit('error', error);\n    });\n\n    this.on('close', function() {\n      var messages = self.messages;\n      if (!messages.readable) return;\n      messages.readable = messages.writable = false;\n      messages.emit('end');\n    });\n  },\n\n  getState: function() {\n    return this.STATES[this.readyState] || null;\n  },\n\n  addExtension: function(extension) {\n    return false;\n  },\n\n  setHeader: function(name, value) {\n    if (this.readyState > 0) return false;\n    this._headers.set(name, value);\n    return true;\n  },\n\n  start: function() {\n    if (this.readyState !== 0) return false;\n\n    if (!Base.isWebSocket(this._request))\n      return this._failHandshake(new Error('Not a WebSocket request'));\n\n    var response;\n\n    try {\n      response = this._handshakeResponse();\n    } catch (error) {\n      return this._failHandshake(error);\n    }\n\n    this._write(response);\n    if (this._stage !== -1) this._open();\n    return true;\n  },\n\n  _failHandshake: function(error) {\n    var headers = new Headers();\n    headers.set('Content-Type', 'text/plain');\n    headers.set('Content-Length', Buffer.byteLength(error.message, 'utf8'));\n\n    headers = ['HTTP/1.1 400 Bad Request', headers.toString(), error.message];\n    this._write(Buffer.from(headers.join('\\r\\n'), 'utf8'));\n    this._fail('protocol_error', error.message);\n\n    return false;\n  },\n\n  text: function(message) {\n    return this.frame(message);\n  },\n\n  binary: function(message) {\n    return false;\n  },\n\n  ping: function() {\n    return false;\n  },\n\n  pong: function() {\n      return false;\n  },\n\n  close: function(reason, code) {\n    if (this.readyState !== 1) return false;\n    this.readyState = 3;\n    this.emit('close', new Base.CloseEvent(null, null));\n    return true;\n  },\n\n  _open: function() {\n    this.readyState = 1;\n    this.__queue.forEach(function(args) { this.frame.apply(this, args) }, this);\n    this.__queue = [];\n    this.emit('open', new Base.OpenEvent());\n  },\n\n  _queue: function(message) {\n    this.__queue.push(message);\n    return true;\n  },\n\n  _write: function(chunk) {\n    var io = this.io;\n    if (io.readable) io.emit('data', chunk);\n  },\n\n  _fail: function(type, message) {\n    this.readyState = 2;\n    this.emit('error', new Error(message));\n    this.close();\n  }\n};\n\nfor (var key in instance)\n  Base.prototype[key] = instance[key];\n\n\nBase.ConnectEvent = function() {};\n\nBase.OpenEvent = function() {};\n\nBase.CloseEvent = function(code, reason) {\n  this.code   = code;\n  this.reason = reason;\n};\n\nBase.MessageEvent = function(data) {\n  this.data = data;\n};\n\nBase.PingEvent = function(data) {\n  this.data = data;\n};\n\nBase.PongEvent = function(data) {\n  this.data = data;\n};\n\nmodule.exports = Base;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/client.js":
/*!**********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/client.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer     = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer),\n    crypto     = __webpack_require__(/*! crypto */ \"crypto\"),\n    url        = __webpack_require__(/*! url */ \"url\"),\n    util       = __webpack_require__(/*! util */ \"util\"),\n    HttpParser = __webpack_require__(/*! ../http_parser */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/http_parser.js\"),\n    Base       = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"),\n    Hybi       = __webpack_require__(/*! ./hybi */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js\"),\n    Proxy      = __webpack_require__(/*! ./proxy */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/proxy.js\");\n\nvar Client = function(_url, options) {\n  this.version = 'hybi-' + Hybi.VERSION;\n  Hybi.call(this, null, _url, options);\n\n  this.readyState = -1;\n  this._key       = Client.generateKey();\n  this._accept    = Hybi.generateAccept(this._key);\n  this._http      = new HttpParser('response');\n\n  var uri  = url.parse(this.url),\n      auth = uri.auth && Buffer.from(uri.auth, 'utf8').toString('base64');\n\n  if (this.VALID_PROTOCOLS.indexOf(uri.protocol) < 0)\n    throw new Error(this.url + ' is not a valid WebSocket URL');\n\n  this._pathname = (uri.pathname || '/') + (uri.search || '');\n\n  this._headers.set('Host', uri.host);\n  this._headers.set('Upgrade', 'websocket');\n  this._headers.set('Connection', 'Upgrade');\n  this._headers.set('Sec-WebSocket-Key', this._key);\n  this._headers.set('Sec-WebSocket-Version', Hybi.VERSION);\n\n  if (this._protocols.length > 0)\n    this._headers.set('Sec-WebSocket-Protocol', this._protocols.join(', '));\n\n  if (auth)\n    this._headers.set('Authorization', 'Basic ' + auth);\n};\nutil.inherits(Client, Hybi);\n\nClient.generateKey = function() {\n  return crypto.randomBytes(16).toString('base64');\n};\n\nvar instance = {\n  VALID_PROTOCOLS: ['ws:', 'wss:'],\n\n  proxy: function(origin, options) {\n    return new Proxy(this, origin, options);\n  },\n\n  start: function() {\n    if (this.readyState !== -1) return false;\n    this._write(this._handshakeRequest());\n    this.readyState = 0;\n    return true;\n  },\n\n  parse: function(chunk) {\n    if (this.readyState === 3) return;\n    if (this.readyState > 0) return Hybi.prototype.parse.call(this, chunk);\n\n    this._http.parse(chunk);\n    if (!this._http.isComplete()) return;\n\n    this._validateHandshake();\n    if (this.readyState === 3) return;\n\n    this._open();\n    this.parse(this._http.body);\n  },\n\n  _handshakeRequest: function() {\n    var extensions = this._extensions.generateOffer();\n    if (extensions)\n      this._headers.set('Sec-WebSocket-Extensions', extensions);\n\n    var start   = 'GET ' + this._pathname + ' HTTP/1.1',\n        headers = [start, this._headers.toString(), ''];\n\n    return Buffer.from(headers.join('\\r\\n'), 'utf8');\n  },\n\n  _failHandshake: function(message) {\n    message = 'Error during WebSocket handshake: ' + message;\n    this.readyState = 3;\n    this.emit('error', new Error(message));\n    this.emit('close', new Base.CloseEvent(this.ERRORS.protocol_error, message));\n  },\n\n  _validateHandshake: function() {\n    this.statusCode = this._http.statusCode;\n    this.headers    = this._http.headers;\n\n    if (this._http.error)\n      return this._failHandshake(this._http.error.message);\n\n    if (this._http.statusCode !== 101)\n      return this._failHandshake('Unexpected response code: ' + this._http.statusCode);\n\n    var headers    = this._http.headers,\n        upgrade    = headers['upgrade'] || '',\n        connection = headers['connection'] || '',\n        accept     = headers['sec-websocket-accept'] || '',\n        protocol   = headers['sec-websocket-protocol'] || '';\n\n    if (upgrade === '')\n      return this._failHandshake(\"'Upgrade' header is missing\");\n    if (upgrade.toLowerCase() !== 'websocket')\n      return this._failHandshake(\"'Upgrade' header value is not 'WebSocket'\");\n\n    if (connection === '')\n      return this._failHandshake(\"'Connection' header is missing\");\n    if (connection.toLowerCase() !== 'upgrade')\n      return this._failHandshake(\"'Connection' header value is not 'Upgrade'\");\n\n    if (accept !== this._accept)\n      return this._failHandshake('Sec-WebSocket-Accept mismatch');\n\n    this.protocol = null;\n\n    if (protocol !== '') {\n      if (this._protocols.indexOf(protocol) < 0)\n        return this._failHandshake('Sec-WebSocket-Protocol mismatch');\n      else\n        this.protocol = protocol;\n    }\n\n    try {\n      this._extensions.activate(this.headers['sec-websocket-extensions']);\n    } catch (e) {\n      return this._failHandshake(e.message);\n    }\n  }\n};\n\nfor (var key in instance)\n  Client.prototype[key] = instance[key];\n\nmodule.exports = Client;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9jbGllbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUJBQWlCLDRGQUE2QjtBQUM5QyxpQkFBaUIsbUJBQU8sQ0FBQyxzQkFBUTtBQUNqQyxpQkFBaUIsbUJBQU8sQ0FBQyxnQkFBSztBQUM5QixpQkFBaUIsbUJBQU8sQ0FBQyxrQkFBTTtBQUMvQixpQkFBaUIsbUJBQU8sQ0FBQywwRkFBZ0I7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsa0ZBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsa0ZBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsb0ZBQVM7O0FBRWxDO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc2R1c3RyeS10ZWNobm9sb2dpZXMvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9jbGllbnQuanM/OGZiZCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBCdWZmZXIgICAgID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXIsXG4gICAgY3J5cHRvICAgICA9IHJlcXVpcmUoJ2NyeXB0bycpLFxuICAgIHVybCAgICAgICAgPSByZXF1aXJlKCd1cmwnKSxcbiAgICB1dGlsICAgICAgID0gcmVxdWlyZSgndXRpbCcpLFxuICAgIEh0dHBQYXJzZXIgPSByZXF1aXJlKCcuLi9odHRwX3BhcnNlcicpLFxuICAgIEJhc2UgICAgICAgPSByZXF1aXJlKCcuL2Jhc2UnKSxcbiAgICBIeWJpICAgICAgID0gcmVxdWlyZSgnLi9oeWJpJyksXG4gICAgUHJveHkgICAgICA9IHJlcXVpcmUoJy4vcHJveHknKTtcblxudmFyIENsaWVudCA9IGZ1bmN0aW9uKF91cmwsIG9wdGlvbnMpIHtcbiAgdGhpcy52ZXJzaW9uID0gJ2h5YmktJyArIEh5YmkuVkVSU0lPTjtcbiAgSHliaS5jYWxsKHRoaXMsIG51bGwsIF91cmwsIG9wdGlvbnMpO1xuXG4gIHRoaXMucmVhZHlTdGF0ZSA9IC0xO1xuICB0aGlzLl9rZXkgICAgICAgPSBDbGllbnQuZ2VuZXJhdGVLZXkoKTtcbiAgdGhpcy5fYWNjZXB0ICAgID0gSHliaS5nZW5lcmF0ZUFjY2VwdCh0aGlzLl9rZXkpO1xuICB0aGlzLl9odHRwICAgICAgPSBuZXcgSHR0cFBhcnNlcigncmVzcG9uc2UnKTtcblxuICB2YXIgdXJpICA9IHVybC5wYXJzZSh0aGlzLnVybCksXG4gICAgICBhdXRoID0gdXJpLmF1dGggJiYgQnVmZmVyLmZyb20odXJpLmF1dGgsICd1dGY4JykudG9TdHJpbmcoJ2Jhc2U2NCcpO1xuXG4gIGlmICh0aGlzLlZBTElEX1BST1RPQ09MUy5pbmRleE9mKHVyaS5wcm90b2NvbCkgPCAwKVxuICAgIHRocm93IG5ldyBFcnJvcih0aGlzLnVybCArICcgaXMgbm90IGEgdmFsaWQgV2ViU29ja2V0IFVSTCcpO1xuXG4gIHRoaXMuX3BhdGhuYW1lID0gKHVyaS5wYXRobmFtZSB8fCAnLycpICsgKHVyaS5zZWFyY2ggfHwgJycpO1xuXG4gIHRoaXMuX2hlYWRlcnMuc2V0KCdIb3N0JywgdXJpLmhvc3QpO1xuICB0aGlzLl9oZWFkZXJzLnNldCgnVXBncmFkZScsICd3ZWJzb2NrZXQnKTtcbiAgdGhpcy5faGVhZGVycy5zZXQoJ0Nvbm5lY3Rpb24nLCAnVXBncmFkZScpO1xuICB0aGlzLl9oZWFkZXJzLnNldCgnU2VjLVdlYlNvY2tldC1LZXknLCB0aGlzLl9rZXkpO1xuICB0aGlzLl9oZWFkZXJzLnNldCgnU2VjLVdlYlNvY2tldC1WZXJzaW9uJywgSHliaS5WRVJTSU9OKTtcblxuICBpZiAodGhpcy5fcHJvdG9jb2xzLmxlbmd0aCA+IDApXG4gICAgdGhpcy5faGVhZGVycy5zZXQoJ1NlYy1XZWJTb2NrZXQtUHJvdG9jb2wnLCB0aGlzLl9wcm90b2NvbHMuam9pbignLCAnKSk7XG5cbiAgaWYgKGF1dGgpXG4gICAgdGhpcy5faGVhZGVycy5zZXQoJ0F1dGhvcml6YXRpb24nLCAnQmFzaWMgJyArIGF1dGgpO1xufTtcbnV0aWwuaW5oZXJpdHMoQ2xpZW50LCBIeWJpKTtcblxuQ2xpZW50LmdlbmVyYXRlS2V5ID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiBjcnlwdG8ucmFuZG9tQnl0ZXMoMTYpLnRvU3RyaW5nKCdiYXNlNjQnKTtcbn07XG5cbnZhciBpbnN0YW5jZSA9IHtcbiAgVkFMSURfUFJPVE9DT0xTOiBbJ3dzOicsICd3c3M6J10sXG5cbiAgcHJveHk6IGZ1bmN0aW9uKG9yaWdpbiwgb3B0aW9ucykge1xuICAgIHJldHVybiBuZXcgUHJveHkodGhpcywgb3JpZ2luLCBvcHRpb25zKTtcbiAgfSxcblxuICBzdGFydDogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSAhPT0gLTEpIHJldHVybiBmYWxzZTtcbiAgICB0aGlzLl93cml0ZSh0aGlzLl9oYW5kc2hha2VSZXF1ZXN0KCkpO1xuICAgIHRoaXMucmVhZHlTdGF0ZSA9IDA7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgcGFyc2U6IGZ1bmN0aW9uKGNodW5rKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gMykgcmV0dXJuO1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPiAwKSByZXR1cm4gSHliaS5wcm90b3R5cGUucGFyc2UuY2FsbCh0aGlzLCBjaHVuayk7XG5cbiAgICB0aGlzLl9odHRwLnBhcnNlKGNodW5rKTtcbiAgICBpZiAoIXRoaXMuX2h0dHAuaXNDb21wbGV0ZSgpKSByZXR1cm47XG5cbiAgICB0aGlzLl92YWxpZGF0ZUhhbmRzaGFrZSgpO1xuICAgIGlmICh0aGlzLnJlYWR5U3RhdGUgPT09IDMpIHJldHVybjtcblxuICAgIHRoaXMuX29wZW4oKTtcbiAgICB0aGlzLnBhcnNlKHRoaXMuX2h0dHAuYm9keSk7XG4gIH0sXG5cbiAgX2hhbmRzaGFrZVJlcXVlc3Q6IGZ1bmN0aW9uKCkge1xuICAgIHZhciBleHRlbnNpb25zID0gdGhpcy5fZXh0ZW5zaW9ucy5nZW5lcmF0ZU9mZmVyKCk7XG4gICAgaWYgKGV4dGVuc2lvbnMpXG4gICAgICB0aGlzLl9oZWFkZXJzLnNldCgnU2VjLVdlYlNvY2tldC1FeHRlbnNpb25zJywgZXh0ZW5zaW9ucyk7XG5cbiAgICB2YXIgc3RhcnQgICA9ICdHRVQgJyArIHRoaXMuX3BhdGhuYW1lICsgJyBIVFRQLzEuMScsXG4gICAgICAgIGhlYWRlcnMgPSBbc3RhcnQsIHRoaXMuX2hlYWRlcnMudG9TdHJpbmcoKSwgJyddO1xuXG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGhlYWRlcnMuam9pbignXFxyXFxuJyksICd1dGY4Jyk7XG4gIH0sXG5cbiAgX2ZhaWxIYW5kc2hha2U6IGZ1bmN0aW9uKG1lc3NhZ2UpIHtcbiAgICBtZXNzYWdlID0gJ0Vycm9yIGR1cmluZyBXZWJTb2NrZXQgaGFuZHNoYWtlOiAnICsgbWVzc2FnZTtcbiAgICB0aGlzLnJlYWR5U3RhdGUgPSAzO1xuICAgIHRoaXMuZW1pdCgnZXJyb3InLCBuZXcgRXJyb3IobWVzc2FnZSkpO1xuICAgIHRoaXMuZW1pdCgnY2xvc2UnLCBuZXcgQmFzZS5DbG9zZUV2ZW50KHRoaXMuRVJST1JTLnByb3RvY29sX2Vycm9yLCBtZXNzYWdlKSk7XG4gIH0sXG5cbiAgX3ZhbGlkYXRlSGFuZHNoYWtlOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLnN0YXR1c0NvZGUgPSB0aGlzLl9odHRwLnN0YXR1c0NvZGU7XG4gICAgdGhpcy5oZWFkZXJzICAgID0gdGhpcy5faHR0cC5oZWFkZXJzO1xuXG4gICAgaWYgKHRoaXMuX2h0dHAuZXJyb3IpXG4gICAgICByZXR1cm4gdGhpcy5fZmFpbEhhbmRzaGFrZSh0aGlzLl9odHRwLmVycm9yLm1lc3NhZ2UpO1xuXG4gICAgaWYgKHRoaXMuX2h0dHAuc3RhdHVzQ29kZSAhPT0gMTAxKVxuICAgICAgcmV0dXJuIHRoaXMuX2ZhaWxIYW5kc2hha2UoJ1VuZXhwZWN0ZWQgcmVzcG9uc2UgY29kZTogJyArIHRoaXMuX2h0dHAuc3RhdHVzQ29kZSk7XG5cbiAgICB2YXIgaGVhZGVycyAgICA9IHRoaXMuX2h0dHAuaGVhZGVycyxcbiAgICAgICAgdXBncmFkZSAgICA9IGhlYWRlcnNbJ3VwZ3JhZGUnXSB8fCAnJyxcbiAgICAgICAgY29ubmVjdGlvbiA9IGhlYWRlcnNbJ2Nvbm5lY3Rpb24nXSB8fCAnJyxcbiAgICAgICAgYWNjZXB0ICAgICA9IGhlYWRlcnNbJ3NlYy13ZWJzb2NrZXQtYWNjZXB0J10gfHwgJycsXG4gICAgICAgIHByb3RvY29sICAgPSBoZWFkZXJzWydzZWMtd2Vic29ja2V0LXByb3RvY29sJ10gfHwgJyc7XG5cbiAgICBpZiAodXBncmFkZSA9PT0gJycpXG4gICAgICByZXR1cm4gdGhpcy5fZmFpbEhhbmRzaGFrZShcIidVcGdyYWRlJyBoZWFkZXIgaXMgbWlzc2luZ1wiKTtcbiAgICBpZiAodXBncmFkZS50b0xvd2VyQ2FzZSgpICE9PSAnd2Vic29ja2V0JylcbiAgICAgIHJldHVybiB0aGlzLl9mYWlsSGFuZHNoYWtlKFwiJ1VwZ3JhZGUnIGhlYWRlciB2YWx1ZSBpcyBub3QgJ1dlYlNvY2tldCdcIik7XG5cbiAgICBpZiAoY29ubmVjdGlvbiA9PT0gJycpXG4gICAgICByZXR1cm4gdGhpcy5fZmFpbEhhbmRzaGFrZShcIidDb25uZWN0aW9uJyBoZWFkZXIgaXMgbWlzc2luZ1wiKTtcbiAgICBpZiAoY29ubmVjdGlvbi50b0xvd2VyQ2FzZSgpICE9PSAndXBncmFkZScpXG4gICAgICByZXR1cm4gdGhpcy5fZmFpbEhhbmRzaGFrZShcIidDb25uZWN0aW9uJyBoZWFkZXIgdmFsdWUgaXMgbm90ICdVcGdyYWRlJ1wiKTtcblxuICAgIGlmIChhY2NlcHQgIT09IHRoaXMuX2FjY2VwdClcbiAgICAgIHJldHVybiB0aGlzLl9mYWlsSGFuZHNoYWtlKCdTZWMtV2ViU29ja2V0LUFjY2VwdCBtaXNtYXRjaCcpO1xuXG4gICAgdGhpcy5wcm90b2NvbCA9IG51bGw7XG5cbiAgICBpZiAocHJvdG9jb2wgIT09ICcnKSB7XG4gICAgICBpZiAodGhpcy5fcHJvdG9jb2xzLmluZGV4T2YocHJvdG9jb2wpIDwgMClcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZhaWxIYW5kc2hha2UoJ1NlYy1XZWJTb2NrZXQtUHJvdG9jb2wgbWlzbWF0Y2gnKTtcbiAgICAgIGVsc2VcbiAgICAgICAgdGhpcy5wcm90b2NvbCA9IHByb3RvY29sO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICB0aGlzLl9leHRlbnNpb25zLmFjdGl2YXRlKHRoaXMuaGVhZGVyc1snc2VjLXdlYnNvY2tldC1leHRlbnNpb25zJ10pO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHJldHVybiB0aGlzLl9mYWlsSGFuZHNoYWtlKGUubWVzc2FnZSk7XG4gICAgfVxuICB9XG59O1xuXG5mb3IgKHZhciBrZXkgaW4gaW5zdGFuY2UpXG4gIENsaWVudC5wcm90b3R5cGVba2V5XSA9IGluc3RhbmNlW2tleV07XG5cbm1vZHVsZS5leHBvcnRzID0gQ2xpZW50O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/client.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js":
/*!***********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/draft75.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer),\n    Base   = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"),\n    util   = __webpack_require__(/*! util */ \"util\");\n\nvar Draft75 = function(request, url, options) {\n  Base.apply(this, arguments);\n  this._stage  = 0;\n  this.version = 'hixie-75';\n\n  this._headers.set('Upgrade', 'WebSocket');\n  this._headers.set('Connection', 'Upgrade');\n  this._headers.set('WebSocket-Origin', this._request.headers.origin);\n  this._headers.set('WebSocket-Location', this.url);\n};\nutil.inherits(Draft75, Base);\n\nvar instance = {\n  close: function() {\n    if (this.readyState === 3) return false;\n    this.readyState = 3;\n    this.emit('close', new Base.CloseEvent(null, null));\n    return true;\n  },\n\n  parse: function(chunk) {\n    if (this.readyState > 1) return;\n\n    this._reader.put(chunk);\n\n    this._reader.eachByte(function(octet) {\n      var message;\n\n      switch (this._stage) {\n        case -1:\n          this._body.push(octet);\n          this._sendHandshakeBody();\n          break;\n\n        case 0:\n          this._parseLeadingByte(octet);\n          break;\n\n        case 1:\n          this._length = (octet & 0x7F) + 128 * this._length;\n\n          if (this._closing && this._length === 0) {\n            return this.close();\n          }\n          else if ((octet & 0x80) !== 0x80) {\n            if (this._length === 0) {\n              this._stage = 0;\n            }\n            else {\n              this._skipped = 0;\n              this._stage   = 2;\n            }\n          }\n          break;\n\n        case 2:\n          if (octet === 0xFF) {\n            this._stage = 0;\n            message = Buffer.from(this._buffer).toString('utf8', 0, this._buffer.length);\n            this.emit('message', new Base.MessageEvent(message));\n          }\n          else {\n            if (this._length) {\n              this._skipped += 1;\n              if (this._skipped === this._length)\n                this._stage = 0;\n            } else {\n              this._buffer.push(octet);\n              if (this._buffer.length > this._maxLength) return this.close();\n            }\n          }\n          break;\n      }\n    }, this);\n  },\n\n  frame: function(buffer) {\n    if (this.readyState === 0) return this._queue([buffer]);\n    if (this.readyState > 1) return false;\n\n    if (typeof buffer !== 'string') buffer = buffer.toString();\n\n    var length = Buffer.byteLength(buffer),\n        frame  = Buffer.allocUnsafe(length + 2);\n\n    frame[0] = 0x00;\n    frame.write(buffer, 1);\n    frame[frame.length - 1] = 0xFF;\n\n    this._write(frame);\n    return true;\n  },\n\n  _handshakeResponse: function() {\n    var start   = 'HTTP/1.1 101 Web Socket Protocol Handshake',\n        headers = [start, this._headers.toString(), ''];\n\n    return Buffer.from(headers.join('\\r\\n'), 'utf8');\n  },\n\n  _parseLeadingByte: function(octet) {\n    if ((octet & 0x80) === 0x80) {\n      this._length = 0;\n      this._stage  = 1;\n    } else {\n      delete this._length;\n      delete this._skipped;\n      this._buffer = [];\n      this._stage  = 2;\n    }\n  }\n};\n\nfor (var key in instance)\n  Draft75.prototype[key] = instance[key];\n\nmodule.exports = Draft75;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9kcmFmdDc1LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsNEZBQTZCO0FBQzFDLGFBQWEsbUJBQU8sQ0FBQyxrRkFBUTtBQUM3QixhQUFhLG1CQUFPLENBQUMsa0JBQU07O0FBRTNCO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc2R1c3RyeS10ZWNobm9sb2dpZXMvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9kcmFmdDc1LmpzPzcwNDYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXIsXG4gICAgQmFzZSAgID0gcmVxdWlyZSgnLi9iYXNlJyksXG4gICAgdXRpbCAgID0gcmVxdWlyZSgndXRpbCcpO1xuXG52YXIgRHJhZnQ3NSA9IGZ1bmN0aW9uKHJlcXVlc3QsIHVybCwgb3B0aW9ucykge1xuICBCYXNlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIHRoaXMuX3N0YWdlICA9IDA7XG4gIHRoaXMudmVyc2lvbiA9ICdoaXhpZS03NSc7XG5cbiAgdGhpcy5faGVhZGVycy5zZXQoJ1VwZ3JhZGUnLCAnV2ViU29ja2V0Jyk7XG4gIHRoaXMuX2hlYWRlcnMuc2V0KCdDb25uZWN0aW9uJywgJ1VwZ3JhZGUnKTtcbiAgdGhpcy5faGVhZGVycy5zZXQoJ1dlYlNvY2tldC1PcmlnaW4nLCB0aGlzLl9yZXF1ZXN0LmhlYWRlcnMub3JpZ2luKTtcbiAgdGhpcy5faGVhZGVycy5zZXQoJ1dlYlNvY2tldC1Mb2NhdGlvbicsIHRoaXMudXJsKTtcbn07XG51dGlsLmluaGVyaXRzKERyYWZ0NzUsIEJhc2UpO1xuXG52YXIgaW5zdGFuY2UgPSB7XG4gIGNsb3NlOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSAzKSByZXR1cm4gZmFsc2U7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gMztcbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgbmV3IEJhc2UuQ2xvc2VFdmVudChudWxsLCBudWxsKSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgcGFyc2U6IGZ1bmN0aW9uKGNodW5rKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA+IDEpIHJldHVybjtcblxuICAgIHRoaXMuX3JlYWRlci5wdXQoY2h1bmspO1xuXG4gICAgdGhpcy5fcmVhZGVyLmVhY2hCeXRlKGZ1bmN0aW9uKG9jdGV0KSB7XG4gICAgICB2YXIgbWVzc2FnZTtcblxuICAgICAgc3dpdGNoICh0aGlzLl9zdGFnZSkge1xuICAgICAgICBjYXNlIC0xOlxuICAgICAgICAgIHRoaXMuX2JvZHkucHVzaChvY3RldCk7XG4gICAgICAgICAgdGhpcy5fc2VuZEhhbmRzaGFrZUJvZHkoKTtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgdGhpcy5fcGFyc2VMZWFkaW5nQnl0ZShvY3RldCk7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAxOlxuICAgICAgICAgIHRoaXMuX2xlbmd0aCA9IChvY3RldCAmIDB4N0YpICsgMTI4ICogdGhpcy5fbGVuZ3RoO1xuXG4gICAgICAgICAgaWYgKHRoaXMuX2Nsb3NpbmcgJiYgdGhpcy5fbGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gdGhpcy5jbG9zZSgpO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIGlmICgob2N0ZXQgJiAweDgwKSAhPT0gMHg4MCkge1xuICAgICAgICAgICAgaWYgKHRoaXMuX2xlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICB0aGlzLl9zdGFnZSA9IDA7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgdGhpcy5fc2tpcHBlZCA9IDA7XG4gICAgICAgICAgICAgIHRoaXMuX3N0YWdlICAgPSAyO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgaWYgKG9jdGV0ID09PSAweEZGKSB7XG4gICAgICAgICAgICB0aGlzLl9zdGFnZSA9IDA7XG4gICAgICAgICAgICBtZXNzYWdlID0gQnVmZmVyLmZyb20odGhpcy5fYnVmZmVyKS50b1N0cmluZygndXRmOCcsIDAsIHRoaXMuX2J1ZmZlci5sZW5ndGgpO1xuICAgICAgICAgICAgdGhpcy5lbWl0KCdtZXNzYWdlJywgbmV3IEJhc2UuTWVzc2FnZUV2ZW50KG1lc3NhZ2UpKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBpZiAodGhpcy5fbGVuZ3RoKSB7XG4gICAgICAgICAgICAgIHRoaXMuX3NraXBwZWQgKz0gMTtcbiAgICAgICAgICAgICAgaWYgKHRoaXMuX3NraXBwZWQgPT09IHRoaXMuX2xlbmd0aClcbiAgICAgICAgICAgICAgICB0aGlzLl9zdGFnZSA9IDA7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB0aGlzLl9idWZmZXIucHVzaChvY3RldCk7XG4gICAgICAgICAgICAgIGlmICh0aGlzLl9idWZmZXIubGVuZ3RoID4gdGhpcy5fbWF4TGVuZ3RoKSByZXR1cm4gdGhpcy5jbG9zZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgICBicmVhaztcbiAgICAgIH1cbiAgICB9LCB0aGlzKTtcbiAgfSxcblxuICBmcmFtZTogZnVuY3Rpb24oYnVmZmVyKSB7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gMCkgcmV0dXJuIHRoaXMuX3F1ZXVlKFtidWZmZXJdKTtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID4gMSkgcmV0dXJuIGZhbHNlO1xuXG4gICAgaWYgKHR5cGVvZiBidWZmZXIgIT09ICdzdHJpbmcnKSBidWZmZXIgPSBidWZmZXIudG9TdHJpbmcoKTtcblxuICAgIHZhciBsZW5ndGggPSBCdWZmZXIuYnl0ZUxlbmd0aChidWZmZXIpLFxuICAgICAgICBmcmFtZSAgPSBCdWZmZXIuYWxsb2NVbnNhZmUobGVuZ3RoICsgMik7XG5cbiAgICBmcmFtZVswXSA9IDB4MDA7XG4gICAgZnJhbWUud3JpdGUoYnVmZmVyLCAxKTtcbiAgICBmcmFtZVtmcmFtZS5sZW5ndGggLSAxXSA9IDB4RkY7XG5cbiAgICB0aGlzLl93cml0ZShmcmFtZSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgX2hhbmRzaGFrZVJlc3BvbnNlOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgc3RhcnQgICA9ICdIVFRQLzEuMSAxMDEgV2ViIFNvY2tldCBQcm90b2NvbCBIYW5kc2hha2UnLFxuICAgICAgICBoZWFkZXJzID0gW3N0YXJ0LCB0aGlzLl9oZWFkZXJzLnRvU3RyaW5nKCksICcnXTtcblxuICAgIHJldHVybiBCdWZmZXIuZnJvbShoZWFkZXJzLmpvaW4oJ1xcclxcbicpLCAndXRmOCcpO1xuICB9LFxuXG4gIF9wYXJzZUxlYWRpbmdCeXRlOiBmdW5jdGlvbihvY3RldCkge1xuICAgIGlmICgob2N0ZXQgJiAweDgwKSA9PT0gMHg4MCkge1xuICAgICAgdGhpcy5fbGVuZ3RoID0gMDtcbiAgICAgIHRoaXMuX3N0YWdlICA9IDE7XG4gICAgfSBlbHNlIHtcbiAgICAgIGRlbGV0ZSB0aGlzLl9sZW5ndGg7XG4gICAgICBkZWxldGUgdGhpcy5fc2tpcHBlZDtcbiAgICAgIHRoaXMuX2J1ZmZlciA9IFtdO1xuICAgICAgdGhpcy5fc3RhZ2UgID0gMjtcbiAgICB9XG4gIH1cbn07XG5cbmZvciAodmFyIGtleSBpbiBpbnN0YW5jZSlcbiAgRHJhZnQ3NS5wcm90b3R5cGVba2V5XSA9IGluc3RhbmNlW2tleV07XG5cbm1vZHVsZS5leHBvcnRzID0gRHJhZnQ3NTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/draft76.js":
/*!***********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/draft76.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer  = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer),\n    Base    = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"),\n    Draft75 = __webpack_require__(/*! ./draft75 */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js\"),\n    crypto  = __webpack_require__(/*! crypto */ \"crypto\"),\n    util    = __webpack_require__(/*! util */ \"util\");\n\n\nvar numberFromKey = function(key) {\n  return parseInt((key.match(/[0-9]/g) || []).join(''), 10);\n};\n\nvar spacesInKey = function(key) {\n  return (key.match(/ /g) || []).length;\n};\n\n\nvar Draft76 = function(request, url, options) {\n  Draft75.apply(this, arguments);\n  this._stage  = -1;\n  this._body   = [];\n  this.version = 'hixie-76';\n\n  this._headers.clear();\n\n  this._headers.set('Upgrade', 'WebSocket');\n  this._headers.set('Connection', 'Upgrade');\n  this._headers.set('Sec-WebSocket-Origin', this._request.headers.origin);\n  this._headers.set('Sec-WebSocket-Location', this.url);\n};\nutil.inherits(Draft76, Draft75);\n\nvar instance = {\n  BODY_SIZE: 8,\n\n  start: function() {\n    if (!Draft75.prototype.start.call(this)) return false;\n    this._started = true;\n    this._sendHandshakeBody();\n    return true;\n  },\n\n  close: function() {\n    if (this.readyState === 3) return false;\n    if (this.readyState === 1) this._write(Buffer.from([0xFF, 0x00]));\n    this.readyState = 3;\n    this.emit('close', new Base.CloseEvent(null, null));\n    return true;\n  },\n\n  _handshakeResponse: function() {\n    var headers = this._request.headers,\n        key1    = headers['sec-websocket-key1'],\n        key2    = headers['sec-websocket-key2'];\n\n    if (!key1) throw new Error('Missing required header: Sec-WebSocket-Key1');\n    if (!key2) throw new Error('Missing required header: Sec-WebSocket-Key2');\n\n    var number1 = numberFromKey(key1),\n        spaces1 = spacesInKey(key1),\n\n        number2 = numberFromKey(key2),\n        spaces2 = spacesInKey(key2);\n\n    if (number1 % spaces1 !== 0 || number2 % spaces2 !== 0)\n      throw new Error('Client sent invalid Sec-WebSocket-Key headers');\n\n    this._keyValues = [number1 / spaces1, number2 / spaces2];\n\n    var start   = 'HTTP/1.1 101 WebSocket Protocol Handshake',\n        headers = [start, this._headers.toString(), ''];\n\n    return Buffer.from(headers.join('\\r\\n'), 'binary');\n  },\n\n  _handshakeSignature: function() {\n    if (this._body.length < this.BODY_SIZE) return null;\n\n    var md5    = crypto.createHash('md5'),\n        buffer = Buffer.allocUnsafe(8 + this.BODY_SIZE);\n\n    buffer.writeUInt32BE(this._keyValues[0], 0);\n    buffer.writeUInt32BE(this._keyValues[1], 4);\n    Buffer.from(this._body).copy(buffer, 8, 0, this.BODY_SIZE);\n\n    md5.update(buffer);\n    return Buffer.from(md5.digest('binary'), 'binary');\n  },\n\n  _sendHandshakeBody: function() {\n    if (!this._started) return;\n    var signature = this._handshakeSignature();\n    if (!signature) return;\n\n    this._write(signature);\n    this._stage = 0;\n    this._open();\n\n    if (this._body.length > this.BODY_SIZE)\n      this.parse(this._body.slice(this.BODY_SIZE));\n  },\n\n  _parseLeadingByte: function(octet) {\n    if (octet !== 0xFF)\n      return Draft75.prototype._parseLeadingByte.call(this, octet);\n\n    this._closing = true;\n    this._length  = 0;\n    this._stage   = 1;\n  }\n};\n\nfor (var key in instance)\n  Draft76.prototype[key] = instance[key];\n\nmodule.exports = Draft76;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9kcmFmdDc2LmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGNBQWMsNEZBQTZCO0FBQzNDLGNBQWMsbUJBQU8sQ0FBQyxrRkFBUTtBQUM5QixjQUFjLG1CQUFPLENBQUMsd0ZBQVc7QUFDakMsY0FBYyxtQkFBTyxDQUFDLHNCQUFRO0FBQzlCLGNBQWMsbUJBQU8sQ0FBQyxrQkFBTTs7O0FBRzVCO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnNkdXN0cnktdGVjaG5vbG9naWVzLy4vbm9kZV9tb2R1bGVzL3dlYnNvY2tldC1kcml2ZXIvbGliL3dlYnNvY2tldC9kcml2ZXIvZHJhZnQ3Ni5qcz8xMTNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEJ1ZmZlciAgPSByZXF1aXJlKCdzYWZlLWJ1ZmZlcicpLkJ1ZmZlcixcbiAgICBCYXNlICAgID0gcmVxdWlyZSgnLi9iYXNlJyksXG4gICAgRHJhZnQ3NSA9IHJlcXVpcmUoJy4vZHJhZnQ3NScpLFxuICAgIGNyeXB0byAgPSByZXF1aXJlKCdjcnlwdG8nKSxcbiAgICB1dGlsICAgID0gcmVxdWlyZSgndXRpbCcpO1xuXG5cbnZhciBudW1iZXJGcm9tS2V5ID0gZnVuY3Rpb24oa2V5KSB7XG4gIHJldHVybiBwYXJzZUludCgoa2V5Lm1hdGNoKC9bMC05XS9nKSB8fCBbXSkuam9pbignJyksIDEwKTtcbn07XG5cbnZhciBzcGFjZXNJbktleSA9IGZ1bmN0aW9uKGtleSkge1xuICByZXR1cm4gKGtleS5tYXRjaCgvIC9nKSB8fCBbXSkubGVuZ3RoO1xufTtcblxuXG52YXIgRHJhZnQ3NiA9IGZ1bmN0aW9uKHJlcXVlc3QsIHVybCwgb3B0aW9ucykge1xuICBEcmFmdDc1LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gIHRoaXMuX3N0YWdlICA9IC0xO1xuICB0aGlzLl9ib2R5ICAgPSBbXTtcbiAgdGhpcy52ZXJzaW9uID0gJ2hpeGllLTc2JztcblxuICB0aGlzLl9oZWFkZXJzLmNsZWFyKCk7XG5cbiAgdGhpcy5faGVhZGVycy5zZXQoJ1VwZ3JhZGUnLCAnV2ViU29ja2V0Jyk7XG4gIHRoaXMuX2hlYWRlcnMuc2V0KCdDb25uZWN0aW9uJywgJ1VwZ3JhZGUnKTtcbiAgdGhpcy5faGVhZGVycy5zZXQoJ1NlYy1XZWJTb2NrZXQtT3JpZ2luJywgdGhpcy5fcmVxdWVzdC5oZWFkZXJzLm9yaWdpbik7XG4gIHRoaXMuX2hlYWRlcnMuc2V0KCdTZWMtV2ViU29ja2V0LUxvY2F0aW9uJywgdGhpcy51cmwpO1xufTtcbnV0aWwuaW5oZXJpdHMoRHJhZnQ3NiwgRHJhZnQ3NSk7XG5cbnZhciBpbnN0YW5jZSA9IHtcbiAgQk9EWV9TSVpFOiA4LFxuXG4gIHN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBpZiAoIURyYWZ0NzUucHJvdG90eXBlLnN0YXJ0LmNhbGwodGhpcykpIHJldHVybiBmYWxzZTtcbiAgICB0aGlzLl9zdGFydGVkID0gdHJ1ZTtcbiAgICB0aGlzLl9zZW5kSGFuZHNoYWtlQm9keSgpO1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuXG4gIGNsb3NlOiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09PSAzKSByZXR1cm4gZmFsc2U7XG4gICAgaWYgKHRoaXMucmVhZHlTdGF0ZSA9PT0gMSkgdGhpcy5fd3JpdGUoQnVmZmVyLmZyb20oWzB4RkYsIDB4MDBdKSk7XG4gICAgdGhpcy5yZWFkeVN0YXRlID0gMztcbiAgICB0aGlzLmVtaXQoJ2Nsb3NlJywgbmV3IEJhc2UuQ2xvc2VFdmVudChudWxsLCBudWxsKSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgX2hhbmRzaGFrZVJlc3BvbnNlOiBmdW5jdGlvbigpIHtcbiAgICB2YXIgaGVhZGVycyA9IHRoaXMuX3JlcXVlc3QuaGVhZGVycyxcbiAgICAgICAga2V5MSAgICA9IGhlYWRlcnNbJ3NlYy13ZWJzb2NrZXQta2V5MSddLFxuICAgICAgICBrZXkyICAgID0gaGVhZGVyc1snc2VjLXdlYnNvY2tldC1rZXkyJ107XG5cbiAgICBpZiAoIWtleTEpIHRocm93IG5ldyBFcnJvcignTWlzc2luZyByZXF1aXJlZCBoZWFkZXI6IFNlYy1XZWJTb2NrZXQtS2V5MScpO1xuICAgIGlmICgha2V5MikgdGhyb3cgbmV3IEVycm9yKCdNaXNzaW5nIHJlcXVpcmVkIGhlYWRlcjogU2VjLVdlYlNvY2tldC1LZXkyJyk7XG5cbiAgICB2YXIgbnVtYmVyMSA9IG51bWJlckZyb21LZXkoa2V5MSksXG4gICAgICAgIHNwYWNlczEgPSBzcGFjZXNJbktleShrZXkxKSxcblxuICAgICAgICBudW1iZXIyID0gbnVtYmVyRnJvbUtleShrZXkyKSxcbiAgICAgICAgc3BhY2VzMiA9IHNwYWNlc0luS2V5KGtleTIpO1xuXG4gICAgaWYgKG51bWJlcjEgJSBzcGFjZXMxICE9PSAwIHx8IG51bWJlcjIgJSBzcGFjZXMyICE9PSAwKVxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDbGllbnQgc2VudCBpbnZhbGlkIFNlYy1XZWJTb2NrZXQtS2V5IGhlYWRlcnMnKTtcblxuICAgIHRoaXMuX2tleVZhbHVlcyA9IFtudW1iZXIxIC8gc3BhY2VzMSwgbnVtYmVyMiAvIHNwYWNlczJdO1xuXG4gICAgdmFyIHN0YXJ0ICAgPSAnSFRUUC8xLjEgMTAxIFdlYlNvY2tldCBQcm90b2NvbCBIYW5kc2hha2UnLFxuICAgICAgICBoZWFkZXJzID0gW3N0YXJ0LCB0aGlzLl9oZWFkZXJzLnRvU3RyaW5nKCksICcnXTtcblxuICAgIHJldHVybiBCdWZmZXIuZnJvbShoZWFkZXJzLmpvaW4oJ1xcclxcbicpLCAnYmluYXJ5Jyk7XG4gIH0sXG5cbiAgX2hhbmRzaGFrZVNpZ25hdHVyZTogZnVuY3Rpb24oKSB7XG4gICAgaWYgKHRoaXMuX2JvZHkubGVuZ3RoIDwgdGhpcy5CT0RZX1NJWkUpIHJldHVybiBudWxsO1xuXG4gICAgdmFyIG1kNSAgICA9IGNyeXB0by5jcmVhdGVIYXNoKCdtZDUnKSxcbiAgICAgICAgYnVmZmVyID0gQnVmZmVyLmFsbG9jVW5zYWZlKDggKyB0aGlzLkJPRFlfU0laRSk7XG5cbiAgICBidWZmZXIud3JpdGVVSW50MzJCRSh0aGlzLl9rZXlWYWx1ZXNbMF0sIDApO1xuICAgIGJ1ZmZlci53cml0ZVVJbnQzMkJFKHRoaXMuX2tleVZhbHVlc1sxXSwgNCk7XG4gICAgQnVmZmVyLmZyb20odGhpcy5fYm9keSkuY29weShidWZmZXIsIDgsIDAsIHRoaXMuQk9EWV9TSVpFKTtcblxuICAgIG1kNS51cGRhdGUoYnVmZmVyKTtcbiAgICByZXR1cm4gQnVmZmVyLmZyb20obWQ1LmRpZ2VzdCgnYmluYXJ5JyksICdiaW5hcnknKTtcbiAgfSxcblxuICBfc2VuZEhhbmRzaGFrZUJvZHk6IGZ1bmN0aW9uKCkge1xuICAgIGlmICghdGhpcy5fc3RhcnRlZCkgcmV0dXJuO1xuICAgIHZhciBzaWduYXR1cmUgPSB0aGlzLl9oYW5kc2hha2VTaWduYXR1cmUoKTtcbiAgICBpZiAoIXNpZ25hdHVyZSkgcmV0dXJuO1xuXG4gICAgdGhpcy5fd3JpdGUoc2lnbmF0dXJlKTtcbiAgICB0aGlzLl9zdGFnZSA9IDA7XG4gICAgdGhpcy5fb3BlbigpO1xuXG4gICAgaWYgKHRoaXMuX2JvZHkubGVuZ3RoID4gdGhpcy5CT0RZX1NJWkUpXG4gICAgICB0aGlzLnBhcnNlKHRoaXMuX2JvZHkuc2xpY2UodGhpcy5CT0RZX1NJWkUpKTtcbiAgfSxcblxuICBfcGFyc2VMZWFkaW5nQnl0ZTogZnVuY3Rpb24ob2N0ZXQpIHtcbiAgICBpZiAob2N0ZXQgIT09IDB4RkYpXG4gICAgICByZXR1cm4gRHJhZnQ3NS5wcm90b3R5cGUuX3BhcnNlTGVhZGluZ0J5dGUuY2FsbCh0aGlzLCBvY3RldCk7XG5cbiAgICB0aGlzLl9jbG9zaW5nID0gdHJ1ZTtcbiAgICB0aGlzLl9sZW5ndGggID0gMDtcbiAgICB0aGlzLl9zdGFnZSAgID0gMTtcbiAgfVxufTtcblxuZm9yICh2YXIga2V5IGluIGluc3RhbmNlKVxuICBEcmFmdDc2LnByb3RvdHlwZVtrZXldID0gaW5zdGFuY2Vba2V5XTtcblxubW9kdWxlLmV4cG9ydHMgPSBEcmFmdDc2O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/draft76.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/headers.js":
/*!***********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/headers.js ***!
  \***********************************************************************/
/***/ ((module) => {

eval("\n\nvar Headers = function() {\n  this.clear();\n};\n\nHeaders.prototype.ALLOWED_DUPLICATES = ['set-cookie', 'set-cookie2', 'warning', 'www-authenticate'];\n\nHeaders.prototype.clear = function() {\n  this._sent  = {};\n  this._lines = [];\n};\n\nHeaders.prototype.set = function(name, value) {\n  if (value === undefined) return;\n\n  name = this._strip(name);\n  value = this._strip(value);\n\n  var key = name.toLowerCase();\n  if (!this._sent.hasOwnProperty(key) || this.ALLOWED_DUPLICATES.indexOf(key) >= 0) {\n    this._sent[key] = true;\n    this._lines.push(name + ': ' + value + '\\r\\n');\n  }\n};\n\nHeaders.prototype.toString = function() {\n  return this._lines.join('');\n};\n\nHeaders.prototype._strip = function(string) {\n  return string.toString().replace(/^ */, '').replace(/ *$/, '');\n};\n\nmodule.exports = Headers;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9oZWFkZXJzLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnNkdXN0cnktdGVjaG5vbG9naWVzLy4vbm9kZV9tb2R1bGVzL3dlYnNvY2tldC1kcml2ZXIvbGliL3dlYnNvY2tldC9kcml2ZXIvaGVhZGVycy5qcz8yMjNiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEhlYWRlcnMgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5jbGVhcigpO1xufTtcblxuSGVhZGVycy5wcm90b3R5cGUuQUxMT1dFRF9EVVBMSUNBVEVTID0gWydzZXQtY29va2llJywgJ3NldC1jb29raWUyJywgJ3dhcm5pbmcnLCAnd3d3LWF1dGhlbnRpY2F0ZSddO1xuXG5IZWFkZXJzLnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9zZW50ICA9IHt9O1xuICB0aGlzLl9saW5lcyA9IFtdO1xufTtcblxuSGVhZGVycy5wcm90b3R5cGUuc2V0ID0gZnVuY3Rpb24obmFtZSwgdmFsdWUpIHtcbiAgaWYgKHZhbHVlID09PSB1bmRlZmluZWQpIHJldHVybjtcblxuICBuYW1lID0gdGhpcy5fc3RyaXAobmFtZSk7XG4gIHZhbHVlID0gdGhpcy5fc3RyaXAodmFsdWUpO1xuXG4gIHZhciBrZXkgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gIGlmICghdGhpcy5fc2VudC5oYXNPd25Qcm9wZXJ0eShrZXkpIHx8IHRoaXMuQUxMT1dFRF9EVVBMSUNBVEVTLmluZGV4T2Yoa2V5KSA+PSAwKSB7XG4gICAgdGhpcy5fc2VudFtrZXldID0gdHJ1ZTtcbiAgICB0aGlzLl9saW5lcy5wdXNoKG5hbWUgKyAnOiAnICsgdmFsdWUgKyAnXFxyXFxuJyk7XG4gIH1cbn07XG5cbkhlYWRlcnMucHJvdG90eXBlLnRvU3RyaW5nID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLl9saW5lcy5qb2luKCcnKTtcbn07XG5cbkhlYWRlcnMucHJvdG90eXBlLl9zdHJpcCA9IGZ1bmN0aW9uKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLnRvU3RyaW5nKCkucmVwbGFjZSgvXiAqLywgJycpLnJlcGxhY2UoLyAqJC8sICcnKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSGVhZGVycztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/headers.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js":
/*!********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/hybi.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer     = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer),\n    crypto     = __webpack_require__(/*! crypto */ \"crypto\"),\n    util       = __webpack_require__(/*! util */ \"util\"),\n    Extensions = __webpack_require__(/*! websocket-extensions */ \"(ssr)/./node_modules/websocket-extensions/lib/websocket_extensions.js\"),\n    Base       = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"),\n    Frame      = __webpack_require__(/*! ./hybi/frame */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js\"),\n    Message    = __webpack_require__(/*! ./hybi/message */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js\");\n\nvar Hybi = function(request, url, options) {\n  Base.apply(this, arguments);\n\n  this._extensions     = new Extensions();\n  this._stage          = 0;\n  this._masking        = this._options.masking;\n  this._protocols      = this._options.protocols || [];\n  this._requireMasking = this._options.requireMasking;\n  this._pingCallbacks  = {};\n\n  if (typeof this._protocols === 'string')\n    this._protocols = this._protocols.split(/ *, */);\n\n  if (!this._request) return;\n\n  var protos    = this._request.headers['sec-websocket-protocol'],\n      supported = this._protocols;\n\n  if (protos !== undefined) {\n    if (typeof protos === 'string') protos = protos.split(/ *, */);\n    this.protocol = protos.filter(function(p) { return supported.indexOf(p) >= 0 })[0];\n  }\n\n  this.version = 'hybi-' + Hybi.VERSION;\n};\nutil.inherits(Hybi, Base);\n\nHybi.VERSION = '13';\n\nHybi.mask = function(payload, mask, offset) {\n  if (!mask || mask.length === 0) return payload;\n  offset = offset || 0;\n\n  for (var i = 0, n = payload.length - offset; i < n; i++) {\n    payload[offset + i] = payload[offset + i] ^ mask[i % 4];\n  }\n  return payload;\n};\n\nHybi.generateAccept = function(key) {\n  var sha1 = crypto.createHash('sha1');\n  sha1.update(key + Hybi.GUID);\n  return sha1.digest('base64');\n};\n\nHybi.GUID = '258EAFA5-E914-47DA-95CA-C5AB0DC85B11';\n\nvar instance = {\n  FIN:    0x80,\n  MASK:   0x80,\n  RSV1:   0x40,\n  RSV2:   0x20,\n  RSV3:   0x10,\n  OPCODE: 0x0F,\n  LENGTH: 0x7F,\n\n  OPCODES: {\n    continuation: 0,\n    text:         1,\n    binary:       2,\n    close:        8,\n    ping:         9,\n    pong:         10\n  },\n\n  OPCODE_CODES:    [0, 1, 2, 8, 9, 10],\n  MESSAGE_OPCODES: [0, 1, 2],\n  OPENING_OPCODES: [1, 2],\n\n  ERRORS: {\n    normal_closure:       1000,\n    going_away:           1001,\n    protocol_error:       1002,\n    unacceptable:         1003,\n    encoding_error:       1007,\n    policy_violation:     1008,\n    too_large:            1009,\n    extension_error:      1010,\n    unexpected_condition: 1011\n  },\n\n  ERROR_CODES:        [1000, 1001, 1002, 1003, 1007, 1008, 1009, 1010, 1011],\n  DEFAULT_ERROR_CODE: 1000,\n  MIN_RESERVED_ERROR: 3000,\n  MAX_RESERVED_ERROR: 4999,\n\n  // http://www.w3.org/International/questions/qa-forms-utf-8.en.php\n  UTF8_MATCH: /^([\\x00-\\x7F]|[\\xC2-\\xDF][\\x80-\\xBF]|\\xE0[\\xA0-\\xBF][\\x80-\\xBF]|[\\xE1-\\xEC\\xEE\\xEF][\\x80-\\xBF]{2}|\\xED[\\x80-\\x9F][\\x80-\\xBF]|\\xF0[\\x90-\\xBF][\\x80-\\xBF]{2}|[\\xF1-\\xF3][\\x80-\\xBF]{3}|\\xF4[\\x80-\\x8F][\\x80-\\xBF]{2})*$/,\n\n  addExtension: function(extension) {\n    this._extensions.add(extension);\n    return true;\n  },\n\n  parse: function(chunk) {\n    this._reader.put(chunk);\n    var buffer = true;\n    while (buffer) {\n      switch (this._stage) {\n        case 0:\n          buffer = this._reader.read(1);\n          if (buffer) this._parseOpcode(buffer[0]);\n          break;\n\n        case 1:\n          buffer = this._reader.read(1);\n          if (buffer) this._parseLength(buffer[0]);\n          break;\n\n        case 2:\n          buffer = this._reader.read(this._frame.lengthBytes);\n          if (buffer) this._parseExtendedLength(buffer);\n          break;\n\n        case 3:\n          buffer = this._reader.read(4);\n          if (buffer) {\n            this._stage = 4;\n            this._frame.maskingKey = buffer;\n          }\n          break;\n\n        case 4:\n          buffer = this._reader.read(this._frame.length);\n          if (buffer) {\n            this._stage = 0;\n            this._emitFrame(buffer);\n          }\n          break;\n\n        default:\n          buffer = null;\n      }\n    }\n  },\n\n  text: function(message) {\n    if (this.readyState > 1) return false;\n    return this.frame(message, 'text');\n  },\n\n  binary: function(message) {\n    if (this.readyState > 1) return false;\n    return this.frame(message, 'binary');\n  },\n\n  ping: function(message, callback) {\n    if (this.readyState > 1) return false;\n    message = message || '';\n    if (callback) this._pingCallbacks[message] = callback;\n    return this.frame(message, 'ping');\n  },\n\n  pong: function(message) {\n      if (this.readyState > 1) return false;\n      message = message ||'';\n      return this.frame(message, 'pong');\n  },\n\n  close: function(reason, code) {\n    reason = reason || '';\n    code   = code   || this.ERRORS.normal_closure;\n\n    if (this.readyState <= 0) {\n      this.readyState = 3;\n      this.emit('close', new Base.CloseEvent(code, reason));\n      return true;\n    } else if (this.readyState === 1) {\n      this.readyState = 2;\n      this._extensions.close(function() { this.frame(reason, 'close', code) }, this);\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  frame: function(buffer, type, code) {\n    if (this.readyState <= 0) return this._queue([buffer, type, code]);\n    if (this.readyState > 2) return false;\n\n    if (buffer instanceof Array)    buffer = Buffer.from(buffer);\n    if (typeof buffer === 'number') buffer = buffer.toString();\n\n    var message = new Message(),\n        isText  = (typeof buffer === 'string'),\n        payload, copy;\n\n    message.rsv1   = message.rsv2 = message.rsv3 = false;\n    message.opcode = this.OPCODES[type || (isText ? 'text' : 'binary')];\n\n    payload = isText ? Buffer.from(buffer, 'utf8') : buffer;\n\n    if (code) {\n      copy = payload;\n      payload = Buffer.allocUnsafe(2 + copy.length);\n      payload.writeUInt16BE(code, 0);\n      copy.copy(payload, 2);\n    }\n    message.data = payload;\n\n    var onMessageReady = function(message) {\n      var frame = new Frame();\n\n      frame.final   = true;\n      frame.rsv1    = message.rsv1;\n      frame.rsv2    = message.rsv2;\n      frame.rsv3    = message.rsv3;\n      frame.opcode  = message.opcode;\n      frame.masked  = !!this._masking;\n      frame.length  = message.data.length;\n      frame.payload = message.data;\n\n      if (frame.masked) frame.maskingKey = crypto.randomBytes(4);\n\n      this._sendFrame(frame);\n    };\n\n    if (this.MESSAGE_OPCODES.indexOf(message.opcode) >= 0)\n      this._extensions.processOutgoingMessage(message, function(error, message) {\n        if (error) return this._fail('extension_error', error.message);\n        onMessageReady.call(this, message);\n      }, this);\n    else\n      onMessageReady.call(this, message);\n\n    return true;\n  },\n\n  _sendFrame: function(frame) {\n    var length = frame.length,\n        header = (length <= 125) ? 2 : (length <= 65535 ? 4 : 10),\n        offset = header + (frame.masked ? 4 : 0),\n        buffer = Buffer.allocUnsafe(offset + length),\n        masked = frame.masked ? this.MASK : 0;\n\n    buffer[0] = (frame.final ? this.FIN : 0) |\n                (frame.rsv1 ? this.RSV1 : 0) |\n                (frame.rsv2 ? this.RSV2 : 0) |\n                (frame.rsv3 ? this.RSV3 : 0) |\n                frame.opcode;\n\n    if (length <= 125) {\n      buffer[1] = masked | length;\n    } else if (length <= 65535) {\n      buffer[1] = masked | 126;\n      buffer.writeUInt16BE(length, 2);\n    } else {\n      buffer[1] = masked | 127;\n      buffer.writeUInt32BE(Math.floor(length / 0x100000000), 2);\n      buffer.writeUInt32BE(length % 0x100000000, 6);\n    }\n\n    frame.payload.copy(buffer, offset);\n\n    if (frame.masked) {\n      frame.maskingKey.copy(buffer, header);\n      Hybi.mask(buffer, frame.maskingKey, offset);\n    }\n\n    this._write(buffer);\n  },\n\n  _handshakeResponse: function() {\n    var secKey  = this._request.headers['sec-websocket-key'],\n        version = this._request.headers['sec-websocket-version'];\n\n    if (version !== Hybi.VERSION)\n      throw new Error('Unsupported WebSocket version: ' + version);\n\n    if (typeof secKey !== 'string')\n      throw new Error('Missing handshake request header: Sec-WebSocket-Key');\n\n    this._headers.set('Upgrade', 'websocket');\n    this._headers.set('Connection', 'Upgrade');\n    this._headers.set('Sec-WebSocket-Accept', Hybi.generateAccept(secKey));\n\n    if (this.protocol) this._headers.set('Sec-WebSocket-Protocol', this.protocol);\n\n    var extensions = this._extensions.generateResponse(this._request.headers['sec-websocket-extensions']);\n    if (extensions) this._headers.set('Sec-WebSocket-Extensions', extensions);\n\n    var start   = 'HTTP/1.1 101 Switching Protocols',\n        headers = [start, this._headers.toString(), ''];\n\n    return Buffer.from(headers.join('\\r\\n'), 'utf8');\n  },\n\n  _shutdown: function(code, reason, error) {\n    delete this._frame;\n    delete this._message;\n    this._stage = 5;\n\n    var sendCloseFrame = (this.readyState === 1);\n    this.readyState = 2;\n\n    this._extensions.close(function() {\n      if (sendCloseFrame) this.frame(reason, 'close', code);\n      this.readyState = 3;\n      if (error) this.emit('error', new Error(reason));\n      this.emit('close', new Base.CloseEvent(code, reason));\n    }, this);\n  },\n\n  _fail: function(type, message) {\n    if (this.readyState > 1) return;\n    this._shutdown(this.ERRORS[type], message, true);\n  },\n\n  _parseOpcode: function(octet) {\n    var rsvs = [this.RSV1, this.RSV2, this.RSV3].map(function(rsv) {\n      return (octet & rsv) === rsv;\n    });\n\n    var frame = this._frame = new Frame();\n\n    frame.final  = (octet & this.FIN) === this.FIN;\n    frame.rsv1   = rsvs[0];\n    frame.rsv2   = rsvs[1];\n    frame.rsv3   = rsvs[2];\n    frame.opcode = (octet & this.OPCODE);\n\n    this._stage = 1;\n\n    if (!this._extensions.validFrameRsv(frame))\n      return this._fail('protocol_error',\n          'One or more reserved bits are on: reserved1 = ' + (frame.rsv1 ? 1 : 0) +\n          ', reserved2 = ' + (frame.rsv2 ? 1 : 0) +\n          ', reserved3 = ' + (frame.rsv3 ? 1 : 0));\n\n    if (this.OPCODE_CODES.indexOf(frame.opcode) < 0)\n      return this._fail('protocol_error', 'Unrecognized frame opcode: ' + frame.opcode);\n\n    if (this.MESSAGE_OPCODES.indexOf(frame.opcode) < 0 && !frame.final)\n      return this._fail('protocol_error', 'Received fragmented control frame: opcode = ' + frame.opcode);\n\n    if (this._message && this.OPENING_OPCODES.indexOf(frame.opcode) >= 0)\n      return this._fail('protocol_error', 'Received new data frame but previous continuous frame is unfinished');\n  },\n\n  _parseLength: function(octet) {\n    var frame = this._frame;\n    frame.masked = (octet & this.MASK) === this.MASK;\n    frame.length = (octet & this.LENGTH);\n\n    if (frame.length >= 0 && frame.length <= 125) {\n      this._stage = frame.masked ? 3 : 4;\n      if (!this._checkFrameLength()) return;\n    } else {\n      this._stage = 2;\n      frame.lengthBytes = (frame.length === 126 ? 2 : 8);\n    }\n\n    if (this._requireMasking && !frame.masked)\n      return this._fail('unacceptable', 'Received unmasked frame but masking is required');\n  },\n\n  _parseExtendedLength: function(buffer) {\n    var frame = this._frame;\n    frame.length = this._readUInt(buffer);\n\n    this._stage = frame.masked ? 3 : 4;\n\n    if (this.MESSAGE_OPCODES.indexOf(frame.opcode) < 0 && frame.length > 125)\n      return this._fail('protocol_error', 'Received control frame having too long payload: ' + frame.length);\n\n    if (!this._checkFrameLength()) return;\n  },\n\n  _checkFrameLength: function() {\n    var length = this._message ? this._message.length : 0;\n\n    if (length + this._frame.length > this._maxLength) {\n      this._fail('too_large', 'WebSocket frame length too large');\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  _emitFrame: function(buffer) {\n    var frame   = this._frame,\n        payload = frame.payload = Hybi.mask(buffer, frame.maskingKey),\n        opcode  = frame.opcode,\n        message,\n        code, reason,\n        callbacks, callback;\n\n    delete this._frame;\n\n    if (opcode === this.OPCODES.continuation) {\n      if (!this._message) return this._fail('protocol_error', 'Received unexpected continuation frame');\n      this._message.pushFrame(frame);\n    }\n\n    if (opcode === this.OPCODES.text || opcode === this.OPCODES.binary) {\n      this._message = new Message();\n      this._message.pushFrame(frame);\n    }\n\n    if (frame.final && this.MESSAGE_OPCODES.indexOf(opcode) >= 0)\n      return this._emitMessage(this._message);\n\n    if (opcode === this.OPCODES.close) {\n      code   = (payload.length >= 2) ? payload.readUInt16BE(0) : null;\n      reason = (payload.length > 2) ? this._encode(payload.slice(2)) : null;\n\n      if (!(payload.length === 0) &&\n          !(code !== null && code >= this.MIN_RESERVED_ERROR && code <= this.MAX_RESERVED_ERROR) &&\n          this.ERROR_CODES.indexOf(code) < 0)\n        code = this.ERRORS.protocol_error;\n\n      if (payload.length > 125 || (payload.length > 2 && !reason))\n        code = this.ERRORS.protocol_error;\n\n      this._shutdown(code || this.DEFAULT_ERROR_CODE, reason || '');\n    }\n\n    if (opcode === this.OPCODES.ping) {\n      this.frame(payload, 'pong');\n      this.emit('ping', new Base.PingEvent(payload.toString()))\n    }\n\n    if (opcode === this.OPCODES.pong) {\n      callbacks = this._pingCallbacks;\n      message   = this._encode(payload);\n      callback  = callbacks[message];\n\n      delete callbacks[message];\n      if (callback) callback()\n\n      this.emit('pong', new Base.PongEvent(payload.toString()))\n    }\n  },\n\n  _emitMessage: function(message) {\n    var message = this._message;\n    message.read();\n\n    delete this._message;\n\n    this._extensions.processIncomingMessage(message, function(error, message) {\n      if (error) return this._fail('extension_error', error.message);\n\n      var payload = message.data;\n      if (message.opcode === this.OPCODES.text) payload = this._encode(payload);\n\n      if (payload === null)\n        return this._fail('encoding_error', 'Could not decode a text frame as UTF-8');\n      else\n        this.emit('message', new Base.MessageEvent(payload));\n    }, this);\n  },\n\n  _encode: function(buffer) {\n    try {\n      var string = buffer.toString('binary', 0, buffer.length);\n      if (!this.UTF8_MATCH.test(string)) return null;\n    } catch (e) {}\n    return buffer.toString('utf8', 0, buffer.length);\n  },\n\n  _readUInt: function(buffer) {\n    if (buffer.length === 2) return buffer.readUInt16BE(0);\n\n    return buffer.readUInt32BE(0) * 0x100000000 +\n           buffer.readUInt32BE(4);\n  }\n};\n\nfor (var key in instance)\n  Hybi.prototype[key] = instance[key];\n\nmodule.exports = Hybi;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js":
/*!**************************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js ***!
  \**************************************************************************/
/***/ ((module) => {

eval("\n\nvar Frame = function() {};\n\nvar instance = {\n  final:        false,\n  rsv1:         false,\n  rsv2:         false,\n  rsv3:         false,\n  opcode:       null,\n  masked:       false,\n  maskingKey:   null,\n  lengthBytes:  1,\n  length:       0,\n  payload:      null\n};\n\nfor (var key in instance)\n  Frame.prototype[key] = instance[key];\n\nmodule.exports = Frame;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9oeWJpL2ZyYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zZHVzdHJ5LXRlY2hub2xvZ2llcy8uL25vZGVfbW9kdWxlcy93ZWJzb2NrZXQtZHJpdmVyL2xpYi93ZWJzb2NrZXQvZHJpdmVyL2h5YmkvZnJhbWUuanM/NWU4NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbnZhciBGcmFtZSA9IGZ1bmN0aW9uKCkge307XG5cbnZhciBpbnN0YW5jZSA9IHtcbiAgZmluYWw6ICAgICAgICBmYWxzZSxcbiAgcnN2MTogICAgICAgICBmYWxzZSxcbiAgcnN2MjogICAgICAgICBmYWxzZSxcbiAgcnN2MzogICAgICAgICBmYWxzZSxcbiAgb3Bjb2RlOiAgICAgICBudWxsLFxuICBtYXNrZWQ6ICAgICAgIGZhbHNlLFxuICBtYXNraW5nS2V5OiAgIG51bGwsXG4gIGxlbmd0aEJ5dGVzOiAgMSxcbiAgbGVuZ3RoOiAgICAgICAwLFxuICBwYXlsb2FkOiAgICAgIG51bGxcbn07XG5cbmZvciAodmFyIGtleSBpbiBpbnN0YW5jZSlcbiAgRnJhbWUucHJvdG90eXBlW2tleV0gPSBpbnN0YW5jZVtrZXldO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEZyYW1lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi/frame.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js":
/*!****************************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer);\n\nvar Message = function() {\n  this.rsv1    = false;\n  this.rsv2    = false;\n  this.rsv3    = false;\n  this.opcode  = null;\n  this.length  = 0;\n  this._chunks = [];\n};\n\nvar instance = {\n  read: function() {\n    return this.data = this.data || Buffer.concat(this._chunks, this.length);\n  },\n\n  pushFrame: function(frame) {\n    this.rsv1 = this.rsv1 || frame.rsv1;\n    this.rsv2 = this.rsv2 || frame.rsv2;\n    this.rsv3 = this.rsv3 || frame.rsv3;\n\n    if (this.opcode === null) this.opcode = frame.opcode;\n\n    this._chunks.push(frame.payload);\n    this.length += frame.length;\n  }\n};\n\nfor (var key in instance)\n  Message.prototype[key] = instance[key];\n\nmodule.exports = Message;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9oeWJpL21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsYUFBYSw0RkFBNkI7O0FBRTFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zZHVzdHJ5LXRlY2hub2xvZ2llcy8uL25vZGVfbW9kdWxlcy93ZWJzb2NrZXQtZHJpdmVyL2xpYi93ZWJzb2NrZXQvZHJpdmVyL2h5YmkvbWVzc2FnZS5qcz8zYmM0Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIEJ1ZmZlciA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyO1xuXG52YXIgTWVzc2FnZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLnJzdjEgICAgPSBmYWxzZTtcbiAgdGhpcy5yc3YyICAgID0gZmFsc2U7XG4gIHRoaXMucnN2MyAgICA9IGZhbHNlO1xuICB0aGlzLm9wY29kZSAgPSBudWxsO1xuICB0aGlzLmxlbmd0aCAgPSAwO1xuICB0aGlzLl9jaHVua3MgPSBbXTtcbn07XG5cbnZhciBpbnN0YW5jZSA9IHtcbiAgcmVhZDogZnVuY3Rpb24oKSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YSA9IHRoaXMuZGF0YSB8fCBCdWZmZXIuY29uY2F0KHRoaXMuX2NodW5rcywgdGhpcy5sZW5ndGgpO1xuICB9LFxuXG4gIHB1c2hGcmFtZTogZnVuY3Rpb24oZnJhbWUpIHtcbiAgICB0aGlzLnJzdjEgPSB0aGlzLnJzdjEgfHwgZnJhbWUucnN2MTtcbiAgICB0aGlzLnJzdjIgPSB0aGlzLnJzdjIgfHwgZnJhbWUucnN2MjtcbiAgICB0aGlzLnJzdjMgPSB0aGlzLnJzdjMgfHwgZnJhbWUucnN2MztcblxuICAgIGlmICh0aGlzLm9wY29kZSA9PT0gbnVsbCkgdGhpcy5vcGNvZGUgPSBmcmFtZS5vcGNvZGU7XG5cbiAgICB0aGlzLl9jaHVua3MucHVzaChmcmFtZS5wYXlsb2FkKTtcbiAgICB0aGlzLmxlbmd0aCArPSBmcmFtZS5sZW5ndGg7XG4gIH1cbn07XG5cbmZvciAodmFyIGtleSBpbiBpbnN0YW5jZSlcbiAgTWVzc2FnZS5wcm90b3R5cGVba2V5XSA9IGluc3RhbmNlW2tleV07XG5cbm1vZHVsZS5leHBvcnRzID0gTWVzc2FnZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi/message.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/proxy.js":
/*!*********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/proxy.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer     = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer),\n    Stream     = (__webpack_require__(/*! stream */ \"stream\").Stream),\n    url        = __webpack_require__(/*! url */ \"url\"),\n    util       = __webpack_require__(/*! util */ \"util\"),\n    Base       = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"),\n    Headers    = __webpack_require__(/*! ./headers */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/headers.js\"),\n    HttpParser = __webpack_require__(/*! ../http_parser */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/http_parser.js\");\n\nvar PORTS = { 'ws:': 80, 'wss:': 443 };\n\nvar Proxy = function(client, origin, options) {\n  this._client  = client;\n  this._http    = new HttpParser('response');\n  this._origin  = (typeof client.url === 'object') ? client.url : url.parse(client.url);\n  this._url     = (typeof origin === 'object') ? origin : url.parse(origin);\n  this._options = options || {};\n  this._state   = 0;\n\n  this.readable = this.writable = true;\n  this._paused  = false;\n\n  this._headers = new Headers();\n  this._headers.set('Host', this._origin.host);\n  this._headers.set('Connection', 'keep-alive');\n  this._headers.set('Proxy-Connection', 'keep-alive');\n\n  var auth = this._url.auth && Buffer.from(this._url.auth, 'utf8').toString('base64');\n  if (auth) this._headers.set('Proxy-Authorization', 'Basic ' + auth);\n};\nutil.inherits(Proxy, Stream);\n\nvar instance = {\n  setHeader: function(name, value) {\n    if (this._state !== 0) return false;\n    this._headers.set(name, value);\n    return true;\n  },\n\n  start: function() {\n    if (this._state !== 0) return false;\n    this._state = 1;\n\n    var origin = this._origin,\n        port   = origin.port || PORTS[origin.protocol],\n        start  = 'CONNECT ' + origin.hostname + ':' + port + ' HTTP/1.1';\n\n    var headers = [start, this._headers.toString(), ''];\n\n    this.emit('data', Buffer.from(headers.join('\\r\\n'), 'utf8'));\n    return true;\n  },\n\n  pause: function() {\n    this._paused = true;\n  },\n\n  resume: function() {\n    this._paused = false;\n    this.emit('drain');\n  },\n\n  write: function(chunk) {\n    if (!this.writable) return false;\n\n    this._http.parse(chunk);\n    if (!this._http.isComplete()) return !this._paused;\n\n    this.statusCode = this._http.statusCode;\n    this.headers    = this._http.headers;\n\n    if (this.statusCode === 200) {\n      this.emit('connect', new Base.ConnectEvent());\n    } else {\n      var message = \"Can't establish a connection to the server at \" + this._origin.href;\n      this.emit('error', new Error(message));\n    }\n    this.end();\n    return !this._paused;\n  },\n\n  end: function(chunk) {\n    if (!this.writable) return;\n    if (chunk !== undefined) this.write(chunk);\n    this.readable = this.writable = false;\n    this.emit('close');\n    this.emit('end');\n  },\n\n  destroy: function() {\n    this.end();\n  }\n};\n\nfor (var key in instance)\n  Proxy.prototype[key] = instance[key];\n\nmodule.exports = Proxy;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9wcm94eS5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYixpQkFBaUIsNEZBQTZCO0FBQzlDLGlCQUFpQixvREFBd0I7QUFDekMsaUJBQWlCLG1CQUFPLENBQUMsZ0JBQUs7QUFDOUIsaUJBQWlCLG1CQUFPLENBQUMsa0JBQU07QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsa0ZBQVE7QUFDakMsaUJBQWlCLG1CQUFPLENBQUMsd0ZBQVc7QUFDcEMsaUJBQWlCLG1CQUFPLENBQUMsMEZBQWdCOztBQUV6QyxjQUFjOztBQUVkO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zZHVzdHJ5LXRlY2hub2xvZ2llcy8uL25vZGVfbW9kdWxlcy93ZWJzb2NrZXQtZHJpdmVyL2xpYi93ZWJzb2NrZXQvZHJpdmVyL3Byb3h5LmpzP2QxYzEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQnVmZmVyICAgICA9IHJlcXVpcmUoJ3NhZmUtYnVmZmVyJykuQnVmZmVyLFxuICAgIFN0cmVhbSAgICAgPSByZXF1aXJlKCdzdHJlYW0nKS5TdHJlYW0sXG4gICAgdXJsICAgICAgICA9IHJlcXVpcmUoJ3VybCcpLFxuICAgIHV0aWwgICAgICAgPSByZXF1aXJlKCd1dGlsJyksXG4gICAgQmFzZSAgICAgICA9IHJlcXVpcmUoJy4vYmFzZScpLFxuICAgIEhlYWRlcnMgICAgPSByZXF1aXJlKCcuL2hlYWRlcnMnKSxcbiAgICBIdHRwUGFyc2VyID0gcmVxdWlyZSgnLi4vaHR0cF9wYXJzZXInKTtcblxudmFyIFBPUlRTID0geyAnd3M6JzogODAsICd3c3M6JzogNDQzIH07XG5cbnZhciBQcm94eSA9IGZ1bmN0aW9uKGNsaWVudCwgb3JpZ2luLCBvcHRpb25zKSB7XG4gIHRoaXMuX2NsaWVudCAgPSBjbGllbnQ7XG4gIHRoaXMuX2h0dHAgICAgPSBuZXcgSHR0cFBhcnNlcigncmVzcG9uc2UnKTtcbiAgdGhpcy5fb3JpZ2luICA9ICh0eXBlb2YgY2xpZW50LnVybCA9PT0gJ29iamVjdCcpID8gY2xpZW50LnVybCA6IHVybC5wYXJzZShjbGllbnQudXJsKTtcbiAgdGhpcy5fdXJsICAgICA9ICh0eXBlb2Ygb3JpZ2luID09PSAnb2JqZWN0JykgPyBvcmlnaW4gOiB1cmwucGFyc2Uob3JpZ2luKTtcbiAgdGhpcy5fb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIHRoaXMuX3N0YXRlICAgPSAwO1xuXG4gIHRoaXMucmVhZGFibGUgPSB0aGlzLndyaXRhYmxlID0gdHJ1ZTtcbiAgdGhpcy5fcGF1c2VkICA9IGZhbHNlO1xuXG4gIHRoaXMuX2hlYWRlcnMgPSBuZXcgSGVhZGVycygpO1xuICB0aGlzLl9oZWFkZXJzLnNldCgnSG9zdCcsIHRoaXMuX29yaWdpbi5ob3N0KTtcbiAgdGhpcy5faGVhZGVycy5zZXQoJ0Nvbm5lY3Rpb24nLCAna2VlcC1hbGl2ZScpO1xuICB0aGlzLl9oZWFkZXJzLnNldCgnUHJveHktQ29ubmVjdGlvbicsICdrZWVwLWFsaXZlJyk7XG5cbiAgdmFyIGF1dGggPSB0aGlzLl91cmwuYXV0aCAmJiBCdWZmZXIuZnJvbSh0aGlzLl91cmwuYXV0aCwgJ3V0ZjgnKS50b1N0cmluZygnYmFzZTY0Jyk7XG4gIGlmIChhdXRoKSB0aGlzLl9oZWFkZXJzLnNldCgnUHJveHktQXV0aG9yaXphdGlvbicsICdCYXNpYyAnICsgYXV0aCk7XG59O1xudXRpbC5pbmhlcml0cyhQcm94eSwgU3RyZWFtKTtcblxudmFyIGluc3RhbmNlID0ge1xuICBzZXRIZWFkZXI6IGZ1bmN0aW9uKG5hbWUsIHZhbHVlKSB7XG4gICAgaWYgKHRoaXMuX3N0YXRlICE9PSAwKSByZXR1cm4gZmFsc2U7XG4gICAgdGhpcy5faGVhZGVycy5zZXQobmFtZSwgdmFsdWUpO1xuICAgIHJldHVybiB0cnVlO1xuICB9LFxuXG4gIHN0YXJ0OiBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fc3RhdGUgIT09IDApIHJldHVybiBmYWxzZTtcbiAgICB0aGlzLl9zdGF0ZSA9IDE7XG5cbiAgICB2YXIgb3JpZ2luID0gdGhpcy5fb3JpZ2luLFxuICAgICAgICBwb3J0ICAgPSBvcmlnaW4ucG9ydCB8fCBQT1JUU1tvcmlnaW4ucHJvdG9jb2xdLFxuICAgICAgICBzdGFydCAgPSAnQ09OTkVDVCAnICsgb3JpZ2luLmhvc3RuYW1lICsgJzonICsgcG9ydCArICcgSFRUUC8xLjEnO1xuXG4gICAgdmFyIGhlYWRlcnMgPSBbc3RhcnQsIHRoaXMuX2hlYWRlcnMudG9TdHJpbmcoKSwgJyddO1xuXG4gICAgdGhpcy5lbWl0KCdkYXRhJywgQnVmZmVyLmZyb20oaGVhZGVycy5qb2luKCdcXHJcXG4nKSwgJ3V0ZjgnKSk7XG4gICAgcmV0dXJuIHRydWU7XG4gIH0sXG5cbiAgcGF1c2U6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuX3BhdXNlZCA9IHRydWU7XG4gIH0sXG5cbiAgcmVzdW1lOiBmdW5jdGlvbigpIHtcbiAgICB0aGlzLl9wYXVzZWQgPSBmYWxzZTtcbiAgICB0aGlzLmVtaXQoJ2RyYWluJyk7XG4gIH0sXG5cbiAgd3JpdGU6IGZ1bmN0aW9uKGNodW5rKSB7XG4gICAgaWYgKCF0aGlzLndyaXRhYmxlKSByZXR1cm4gZmFsc2U7XG5cbiAgICB0aGlzLl9odHRwLnBhcnNlKGNodW5rKTtcbiAgICBpZiAoIXRoaXMuX2h0dHAuaXNDb21wbGV0ZSgpKSByZXR1cm4gIXRoaXMuX3BhdXNlZDtcblxuICAgIHRoaXMuc3RhdHVzQ29kZSA9IHRoaXMuX2h0dHAuc3RhdHVzQ29kZTtcbiAgICB0aGlzLmhlYWRlcnMgICAgPSB0aGlzLl9odHRwLmhlYWRlcnM7XG5cbiAgICBpZiAodGhpcy5zdGF0dXNDb2RlID09PSAyMDApIHtcbiAgICAgIHRoaXMuZW1pdCgnY29ubmVjdCcsIG5ldyBCYXNlLkNvbm5lY3RFdmVudCgpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIG1lc3NhZ2UgPSBcIkNhbid0IGVzdGFibGlzaCBhIGNvbm5lY3Rpb24gdG8gdGhlIHNlcnZlciBhdCBcIiArIHRoaXMuX29yaWdpbi5ocmVmO1xuICAgICAgdGhpcy5lbWl0KCdlcnJvcicsIG5ldyBFcnJvcihtZXNzYWdlKSk7XG4gICAgfVxuICAgIHRoaXMuZW5kKCk7XG4gICAgcmV0dXJuICF0aGlzLl9wYXVzZWQ7XG4gIH0sXG5cbiAgZW5kOiBmdW5jdGlvbihjaHVuaykge1xuICAgIGlmICghdGhpcy53cml0YWJsZSkgcmV0dXJuO1xuICAgIGlmIChjaHVuayAhPT0gdW5kZWZpbmVkKSB0aGlzLndyaXRlKGNodW5rKTtcbiAgICB0aGlzLnJlYWRhYmxlID0gdGhpcy53cml0YWJsZSA9IGZhbHNlO1xuICAgIHRoaXMuZW1pdCgnY2xvc2UnKTtcbiAgICB0aGlzLmVtaXQoJ2VuZCcpO1xuICB9LFxuXG4gIGRlc3Ryb3k6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMuZW5kKCk7XG4gIH1cbn07XG5cbmZvciAodmFyIGtleSBpbiBpbnN0YW5jZSlcbiAgUHJveHkucHJvdG90eXBlW2tleV0gPSBpbnN0YW5jZVtrZXldO1xuXG5tb2R1bGUuZXhwb3J0cyA9IFByb3h5O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/proxy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/server.js":
/*!**********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/server.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar util       = __webpack_require__(/*! util */ \"util\"),\n    HttpParser = __webpack_require__(/*! ../http_parser */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/http_parser.js\"),\n    Base       = __webpack_require__(/*! ./base */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/base.js\"),\n    Draft75    = __webpack_require__(/*! ./draft75 */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/draft75.js\"),\n    Draft76    = __webpack_require__(/*! ./draft76 */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/draft76.js\"),\n    Hybi       = __webpack_require__(/*! ./hybi */ \"(ssr)/./node_modules/websocket-driver/lib/websocket/driver/hybi.js\");\n\nvar Server = function(options) {\n  Base.call(this, null, null, options);\n  this._http = new HttpParser('request');\n};\nutil.inherits(Server, Base);\n\nvar instance = {\n  EVENTS: ['open', 'message', 'error', 'close', 'ping', 'pong'],\n\n  _bindEventListeners: function() {\n    this.messages.on('error', function() {});\n    this.on('error', function() {});\n  },\n\n  parse: function(chunk) {\n    if (this._delegate) return this._delegate.parse(chunk);\n\n    this._http.parse(chunk);\n    if (!this._http.isComplete()) return;\n\n    this.method  = this._http.method;\n    this.url     = this._http.url;\n    this.headers = this._http.headers;\n    this.body    = this._http.body;\n\n    var self = this;\n    this._delegate = Server.http(this, this._options);\n    this._delegate.messages = this.messages;\n    this._delegate.io = this.io;\n    this._open();\n\n    this.EVENTS.forEach(function(event) {\n      this._delegate.on(event, function(e) { self.emit(event, e) });\n    }, this);\n\n    this.protocol = this._delegate.protocol;\n    this.version  = this._delegate.version;\n\n    this.parse(this._http.body);\n    this.emit('connect', new Base.ConnectEvent());\n  },\n\n  _open: function() {\n    this.__queue.forEach(function(msg) {\n      this._delegate[msg[0]].apply(this._delegate, msg[1]);\n    }, this);\n    this.__queue = [];\n  }\n};\n\n['addExtension', 'setHeader', 'start', 'frame', 'text', 'binary', 'ping', 'close'].forEach(function(method) {\n  instance[method] = function() {\n    if (this._delegate) {\n      return this._delegate[method].apply(this._delegate, arguments);\n    } else {\n      this.__queue.push([method, arguments]);\n      return true;\n    }\n  };\n});\n\nfor (var key in instance)\n  Server.prototype[key] = instance[key];\n\nServer.isSecureRequest = function(request) {\n  if (request.connection && request.connection.authorized !== undefined) return true;\n  if (request.socket && request.socket.secure) return true;\n\n  var headers = request.headers;\n  if (!headers) return false;\n  if (headers['https'] === 'on') return true;\n  if (headers['x-forwarded-ssl'] === 'on') return true;\n  if (headers['x-forwarded-scheme'] === 'https') return true;\n  if (headers['x-forwarded-proto'] === 'https') return true;\n\n  return false;\n};\n\nServer.determineUrl = function(request) {\n  var scheme = this.isSecureRequest(request) ? 'wss:' : 'ws:';\n  return scheme + '//' + request.headers.host + request.url;\n};\n\nServer.http = function(request, options) {\n  options = options || {};\n  if (options.requireMasking === undefined) options.requireMasking = true;\n\n  var headers = request.headers,\n      version = headers['sec-websocket-version'],\n      key     = headers['sec-websocket-key'],\n      key1    = headers['sec-websocket-key1'],\n      key2    = headers['sec-websocket-key2'],\n      url     = this.determineUrl(request);\n\n  if (version || key)\n    return new Hybi(request, url, options);\n  else if (key1 || key2)\n    return new Draft76(request, url, options);\n  else\n    return new Draft75(request, url, options);\n};\n\nmodule.exports = Server;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9zZXJ2ZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsaUJBQWlCLG1CQUFPLENBQUMsa0JBQU07QUFDL0IsaUJBQWlCLG1CQUFPLENBQUMsMEZBQWdCO0FBQ3pDLGlCQUFpQixtQkFBTyxDQUFDLGtGQUFRO0FBQ2pDLGlCQUFpQixtQkFBTyxDQUFDLHdGQUFXO0FBQ3BDLGlCQUFpQixtQkFBTyxDQUFDLHdGQUFXO0FBQ3BDLGlCQUFpQixtQkFBTyxDQUFDLGtGQUFROztBQUVqQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQSwyQ0FBMkM7QUFDM0Msa0NBQWtDO0FBQ2xDLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSw2Q0FBNkMscUJBQXFCO0FBQ2xFLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQzs7QUFFRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaW5zZHVzdHJ5LXRlY2hub2xvZ2llcy8uL25vZGVfbW9kdWxlcy93ZWJzb2NrZXQtZHJpdmVyL2xpYi93ZWJzb2NrZXQvZHJpdmVyL3NlcnZlci5qcz81M2VjIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIHV0aWwgICAgICAgPSByZXF1aXJlKCd1dGlsJyksXG4gICAgSHR0cFBhcnNlciA9IHJlcXVpcmUoJy4uL2h0dHBfcGFyc2VyJyksXG4gICAgQmFzZSAgICAgICA9IHJlcXVpcmUoJy4vYmFzZScpLFxuICAgIERyYWZ0NzUgICAgPSByZXF1aXJlKCcuL2RyYWZ0NzUnKSxcbiAgICBEcmFmdDc2ICAgID0gcmVxdWlyZSgnLi9kcmFmdDc2JyksXG4gICAgSHliaSAgICAgICA9IHJlcXVpcmUoJy4vaHliaScpO1xuXG52YXIgU2VydmVyID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICBCYXNlLmNhbGwodGhpcywgbnVsbCwgbnVsbCwgb3B0aW9ucyk7XG4gIHRoaXMuX2h0dHAgPSBuZXcgSHR0cFBhcnNlcigncmVxdWVzdCcpO1xufTtcbnV0aWwuaW5oZXJpdHMoU2VydmVyLCBCYXNlKTtcblxudmFyIGluc3RhbmNlID0ge1xuICBFVkVOVFM6IFsnb3BlbicsICdtZXNzYWdlJywgJ2Vycm9yJywgJ2Nsb3NlJywgJ3BpbmcnLCAncG9uZyddLFxuXG4gIF9iaW5kRXZlbnRMaXN0ZW5lcnM6IGZ1bmN0aW9uKCkge1xuICAgIHRoaXMubWVzc2FnZXMub24oJ2Vycm9yJywgZnVuY3Rpb24oKSB7fSk7XG4gICAgdGhpcy5vbignZXJyb3InLCBmdW5jdGlvbigpIHt9KTtcbiAgfSxcblxuICBwYXJzZTogZnVuY3Rpb24oY2h1bmspIHtcbiAgICBpZiAodGhpcy5fZGVsZWdhdGUpIHJldHVybiB0aGlzLl9kZWxlZ2F0ZS5wYXJzZShjaHVuayk7XG5cbiAgICB0aGlzLl9odHRwLnBhcnNlKGNodW5rKTtcbiAgICBpZiAoIXRoaXMuX2h0dHAuaXNDb21wbGV0ZSgpKSByZXR1cm47XG5cbiAgICB0aGlzLm1ldGhvZCAgPSB0aGlzLl9odHRwLm1ldGhvZDtcbiAgICB0aGlzLnVybCAgICAgPSB0aGlzLl9odHRwLnVybDtcbiAgICB0aGlzLmhlYWRlcnMgPSB0aGlzLl9odHRwLmhlYWRlcnM7XG4gICAgdGhpcy5ib2R5ICAgID0gdGhpcy5faHR0cC5ib2R5O1xuXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHRoaXMuX2RlbGVnYXRlID0gU2VydmVyLmh0dHAodGhpcywgdGhpcy5fb3B0aW9ucyk7XG4gICAgdGhpcy5fZGVsZWdhdGUubWVzc2FnZXMgPSB0aGlzLm1lc3NhZ2VzO1xuICAgIHRoaXMuX2RlbGVnYXRlLmlvID0gdGhpcy5pbztcbiAgICB0aGlzLl9vcGVuKCk7XG5cbiAgICB0aGlzLkVWRU5UUy5mb3JFYWNoKGZ1bmN0aW9uKGV2ZW50KSB7XG4gICAgICB0aGlzLl9kZWxlZ2F0ZS5vbihldmVudCwgZnVuY3Rpb24oZSkgeyBzZWxmLmVtaXQoZXZlbnQsIGUpIH0pO1xuICAgIH0sIHRoaXMpO1xuXG4gICAgdGhpcy5wcm90b2NvbCA9IHRoaXMuX2RlbGVnYXRlLnByb3RvY29sO1xuICAgIHRoaXMudmVyc2lvbiAgPSB0aGlzLl9kZWxlZ2F0ZS52ZXJzaW9uO1xuXG4gICAgdGhpcy5wYXJzZSh0aGlzLl9odHRwLmJvZHkpO1xuICAgIHRoaXMuZW1pdCgnY29ubmVjdCcsIG5ldyBCYXNlLkNvbm5lY3RFdmVudCgpKTtcbiAgfSxcblxuICBfb3BlbjogZnVuY3Rpb24oKSB7XG4gICAgdGhpcy5fX3F1ZXVlLmZvckVhY2goZnVuY3Rpb24obXNnKSB7XG4gICAgICB0aGlzLl9kZWxlZ2F0ZVttc2dbMF1dLmFwcGx5KHRoaXMuX2RlbGVnYXRlLCBtc2dbMV0pO1xuICAgIH0sIHRoaXMpO1xuICAgIHRoaXMuX19xdWV1ZSA9IFtdO1xuICB9XG59O1xuXG5bJ2FkZEV4dGVuc2lvbicsICdzZXRIZWFkZXInLCAnc3RhcnQnLCAnZnJhbWUnLCAndGV4dCcsICdiaW5hcnknLCAncGluZycsICdjbG9zZSddLmZvckVhY2goZnVuY3Rpb24obWV0aG9kKSB7XG4gIGluc3RhbmNlW21ldGhvZF0gPSBmdW5jdGlvbigpIHtcbiAgICBpZiAodGhpcy5fZGVsZWdhdGUpIHtcbiAgICAgIHJldHVybiB0aGlzLl9kZWxlZ2F0ZVttZXRob2RdLmFwcGx5KHRoaXMuX2RlbGVnYXRlLCBhcmd1bWVudHMpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9fcXVldWUucHVzaChbbWV0aG9kLCBhcmd1bWVudHNdKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgfTtcbn0pO1xuXG5mb3IgKHZhciBrZXkgaW4gaW5zdGFuY2UpXG4gIFNlcnZlci5wcm90b3R5cGVba2V5XSA9IGluc3RhbmNlW2tleV07XG5cblNlcnZlci5pc1NlY3VyZVJlcXVlc3QgPSBmdW5jdGlvbihyZXF1ZXN0KSB7XG4gIGlmIChyZXF1ZXN0LmNvbm5lY3Rpb24gJiYgcmVxdWVzdC5jb25uZWN0aW9uLmF1dGhvcml6ZWQgIT09IHVuZGVmaW5lZCkgcmV0dXJuIHRydWU7XG4gIGlmIChyZXF1ZXN0LnNvY2tldCAmJiByZXF1ZXN0LnNvY2tldC5zZWN1cmUpIHJldHVybiB0cnVlO1xuXG4gIHZhciBoZWFkZXJzID0gcmVxdWVzdC5oZWFkZXJzO1xuICBpZiAoIWhlYWRlcnMpIHJldHVybiBmYWxzZTtcbiAgaWYgKGhlYWRlcnNbJ2h0dHBzJ10gPT09ICdvbicpIHJldHVybiB0cnVlO1xuICBpZiAoaGVhZGVyc1sneC1mb3J3YXJkZWQtc3NsJ10gPT09ICdvbicpIHJldHVybiB0cnVlO1xuICBpZiAoaGVhZGVyc1sneC1mb3J3YXJkZWQtc2NoZW1lJ10gPT09ICdodHRwcycpIHJldHVybiB0cnVlO1xuICBpZiAoaGVhZGVyc1sneC1mb3J3YXJkZWQtcHJvdG8nXSA9PT0gJ2h0dHBzJykgcmV0dXJuIHRydWU7XG5cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuU2VydmVyLmRldGVybWluZVVybCA9IGZ1bmN0aW9uKHJlcXVlc3QpIHtcbiAgdmFyIHNjaGVtZSA9IHRoaXMuaXNTZWN1cmVSZXF1ZXN0KHJlcXVlc3QpID8gJ3dzczonIDogJ3dzOic7XG4gIHJldHVybiBzY2hlbWUgKyAnLy8nICsgcmVxdWVzdC5oZWFkZXJzLmhvc3QgKyByZXF1ZXN0LnVybDtcbn07XG5cblNlcnZlci5odHRwID0gZnVuY3Rpb24ocmVxdWVzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgaWYgKG9wdGlvbnMucmVxdWlyZU1hc2tpbmcgPT09IHVuZGVmaW5lZCkgb3B0aW9ucy5yZXF1aXJlTWFza2luZyA9IHRydWU7XG5cbiAgdmFyIGhlYWRlcnMgPSByZXF1ZXN0LmhlYWRlcnMsXG4gICAgICB2ZXJzaW9uID0gaGVhZGVyc1snc2VjLXdlYnNvY2tldC12ZXJzaW9uJ10sXG4gICAgICBrZXkgICAgID0gaGVhZGVyc1snc2VjLXdlYnNvY2tldC1rZXknXSxcbiAgICAgIGtleTEgICAgPSBoZWFkZXJzWydzZWMtd2Vic29ja2V0LWtleTEnXSxcbiAgICAgIGtleTIgICAgPSBoZWFkZXJzWydzZWMtd2Vic29ja2V0LWtleTInXSxcbiAgICAgIHVybCAgICAgPSB0aGlzLmRldGVybWluZVVybChyZXF1ZXN0KTtcblxuICBpZiAodmVyc2lvbiB8fCBrZXkpXG4gICAgcmV0dXJuIG5ldyBIeWJpKHJlcXVlc3QsIHVybCwgb3B0aW9ucyk7XG4gIGVsc2UgaWYgKGtleTEgfHwga2V5MilcbiAgICByZXR1cm4gbmV3IERyYWZ0NzYocmVxdWVzdCwgdXJsLCBvcHRpb25zKTtcbiAgZWxzZVxuICAgIHJldHVybiBuZXcgRHJhZnQ3NShyZXF1ZXN0LCB1cmwsIG9wdGlvbnMpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBTZXJ2ZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/server.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js ***!
  \*****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Buffer = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer);\n\nvar StreamReader = function() {\n  this._queue     = [];\n  this._queueSize = 0;\n  this._offset    = 0;\n};\n\nStreamReader.prototype.put = function(buffer) {\n  if (!buffer || buffer.length === 0) return;\n  if (!Buffer.isBuffer(buffer)) buffer = Buffer.from(buffer);\n  this._queue.push(buffer);\n  this._queueSize += buffer.length;\n};\n\nStreamReader.prototype.read = function(length) {\n  if (length > this._queueSize) return null;\n  if (length === 0) return Buffer.alloc(0);\n\n  this._queueSize -= length;\n\n  var queue  = this._queue,\n      remain = length,\n      first  = queue[0],\n      buffers, buffer;\n\n  if (first.length >= length) {\n    if (first.length === length) {\n      return queue.shift();\n    } else {\n      buffer = first.slice(0, length);\n      queue[0] = first.slice(length);\n      return buffer;\n    }\n  }\n\n  for (var i = 0, n = queue.length; i < n; i++) {\n    if (remain < queue[i].length) break;\n    remain -= queue[i].length;\n  }\n  buffers = queue.splice(0, i);\n\n  if (remain > 0 && queue.length > 0) {\n    buffers.push(queue[0].slice(0, remain));\n    queue[0] = queue[0].slice(remain);\n  }\n  return Buffer.concat(buffers, length);\n};\n\nStreamReader.prototype.eachByte = function(callback, context) {\n  var buffer, n, index;\n\n  while (this._queue.length > 0) {\n    buffer = this._queue[0];\n    n = buffer.length;\n\n    while (this._offset < n) {\n      index = this._offset;\n      this._offset += 1;\n      callback.call(context, buffer[index]);\n    }\n    this._offset = 0;\n    this._queue.shift();\n  }\n};\n\nmodule.exports = StreamReader;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9zdHJlYW1fcmVhZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLGFBQWEsNEZBQTZCOztBQUUxQztBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsb0NBQW9DLE9BQU87QUFDM0M7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL2luc2R1c3RyeS10ZWNobm9sb2dpZXMvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2RyaXZlci9zdHJlYW1fcmVhZGVyLmpzP2NmODYiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG52YXIgQnVmZmVyID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG5cbnZhciBTdHJlYW1SZWFkZXIgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fcXVldWUgICAgID0gW107XG4gIHRoaXMuX3F1ZXVlU2l6ZSA9IDA7XG4gIHRoaXMuX29mZnNldCAgICA9IDA7XG59O1xuXG5TdHJlYW1SZWFkZXIucHJvdG90eXBlLnB1dCA9IGZ1bmN0aW9uKGJ1ZmZlcikge1xuICBpZiAoIWJ1ZmZlciB8fCBidWZmZXIubGVuZ3RoID09PSAwKSByZXR1cm47XG4gIGlmICghQnVmZmVyLmlzQnVmZmVyKGJ1ZmZlcikpIGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGJ1ZmZlcik7XG4gIHRoaXMuX3F1ZXVlLnB1c2goYnVmZmVyKTtcbiAgdGhpcy5fcXVldWVTaXplICs9IGJ1ZmZlci5sZW5ndGg7XG59O1xuXG5TdHJlYW1SZWFkZXIucHJvdG90eXBlLnJlYWQgPSBmdW5jdGlvbihsZW5ndGgpIHtcbiAgaWYgKGxlbmd0aCA+IHRoaXMuX3F1ZXVlU2l6ZSkgcmV0dXJuIG51bGw7XG4gIGlmIChsZW5ndGggPT09IDApIHJldHVybiBCdWZmZXIuYWxsb2MoMCk7XG5cbiAgdGhpcy5fcXVldWVTaXplIC09IGxlbmd0aDtcblxuICB2YXIgcXVldWUgID0gdGhpcy5fcXVldWUsXG4gICAgICByZW1haW4gPSBsZW5ndGgsXG4gICAgICBmaXJzdCAgPSBxdWV1ZVswXSxcbiAgICAgIGJ1ZmZlcnMsIGJ1ZmZlcjtcblxuICBpZiAoZmlyc3QubGVuZ3RoID49IGxlbmd0aCkge1xuICAgIGlmIChmaXJzdC5sZW5ndGggPT09IGxlbmd0aCkge1xuICAgICAgcmV0dXJuIHF1ZXVlLnNoaWZ0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGJ1ZmZlciA9IGZpcnN0LnNsaWNlKDAsIGxlbmd0aCk7XG4gICAgICBxdWV1ZVswXSA9IGZpcnN0LnNsaWNlKGxlbmd0aCk7XG4gICAgICByZXR1cm4gYnVmZmVyO1xuICAgIH1cbiAgfVxuXG4gIGZvciAodmFyIGkgPSAwLCBuID0gcXVldWUubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgaWYgKHJlbWFpbiA8IHF1ZXVlW2ldLmxlbmd0aCkgYnJlYWs7XG4gICAgcmVtYWluIC09IHF1ZXVlW2ldLmxlbmd0aDtcbiAgfVxuICBidWZmZXJzID0gcXVldWUuc3BsaWNlKDAsIGkpO1xuXG4gIGlmIChyZW1haW4gPiAwICYmIHF1ZXVlLmxlbmd0aCA+IDApIHtcbiAgICBidWZmZXJzLnB1c2gocXVldWVbMF0uc2xpY2UoMCwgcmVtYWluKSk7XG4gICAgcXVldWVbMF0gPSBxdWV1ZVswXS5zbGljZShyZW1haW4pO1xuICB9XG4gIHJldHVybiBCdWZmZXIuY29uY2F0KGJ1ZmZlcnMsIGxlbmd0aCk7XG59O1xuXG5TdHJlYW1SZWFkZXIucHJvdG90eXBlLmVhY2hCeXRlID0gZnVuY3Rpb24oY2FsbGJhY2ssIGNvbnRleHQpIHtcbiAgdmFyIGJ1ZmZlciwgbiwgaW5kZXg7XG5cbiAgd2hpbGUgKHRoaXMuX3F1ZXVlLmxlbmd0aCA+IDApIHtcbiAgICBidWZmZXIgPSB0aGlzLl9xdWV1ZVswXTtcbiAgICBuID0gYnVmZmVyLmxlbmd0aDtcblxuICAgIHdoaWxlICh0aGlzLl9vZmZzZXQgPCBuKSB7XG4gICAgICBpbmRleCA9IHRoaXMuX29mZnNldDtcbiAgICAgIHRoaXMuX29mZnNldCArPSAxO1xuICAgICAgY2FsbGJhY2suY2FsbChjb250ZXh0LCBidWZmZXJbaW5kZXhdKTtcbiAgICB9XG4gICAgdGhpcy5fb2Zmc2V0ID0gMDtcbiAgICB0aGlzLl9xdWV1ZS5zaGlmdCgpO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFN0cmVhbVJlYWRlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/driver/stream_reader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/http_parser.js":
/*!********************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/http_parser.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar NodeHTTPParser = (__webpack_require__(/*! http-parser-js */ \"(ssr)/./node_modules/http-parser-js/http-parser.js\").HTTPParser),\n    Buffer         = (__webpack_require__(/*! safe-buffer */ \"(ssr)/./node_modules/safe-buffer/index.js\").Buffer);\n\nvar TYPES = {\n  request:  NodeHTTPParser.REQUEST  || 'request',\n  response: NodeHTTPParser.RESPONSE || 'response'\n};\n\nvar HttpParser = function(type) {\n  this._type     = type;\n  this._parser   = new NodeHTTPParser(TYPES[type]);\n  this._complete = false;\n  this.headers   = {};\n\n  var current = null,\n      self    = this;\n\n  this._parser.onHeaderField = function(b, start, length) {\n    current = b.toString('utf8', start, start + length).toLowerCase();\n  };\n\n  this._parser.onHeaderValue = function(b, start, length) {\n    var value = b.toString('utf8', start, start + length);\n\n    if (self.headers.hasOwnProperty(current))\n      self.headers[current] += ', ' + value;\n    else\n      self.headers[current] = value;\n  };\n\n  this._parser.onHeadersComplete = this._parser[NodeHTTPParser.kOnHeadersComplete] =\n  function(majorVersion, minorVersion, headers, method, pathname, statusCode) {\n    var info = arguments[0];\n\n    if (typeof info === 'object') {\n      method     = info.method;\n      pathname   = info.url;\n      statusCode = info.statusCode;\n      headers    = info.headers;\n    }\n\n    self.method     = (typeof method === 'number') ? HttpParser.METHODS[method] : method;\n    self.statusCode = statusCode;\n    self.url        = pathname;\n\n    if (!headers) return;\n\n    for (var i = 0, n = headers.length, key, value; i < n; i += 2) {\n      key   = headers[i].toLowerCase();\n      value = headers[i+1];\n      if (self.headers.hasOwnProperty(key))\n        self.headers[key] += ', ' + value;\n      else\n        self.headers[key] = value;\n    }\n\n    self._complete = true;\n  };\n};\n\nHttpParser.METHODS = {\n  0:  'DELETE',\n  1:  'GET',\n  2:  'HEAD',\n  3:  'POST',\n  4:  'PUT',\n  5:  'CONNECT',\n  6:  'OPTIONS',\n  7:  'TRACE',\n  8:  'COPY',\n  9:  'LOCK',\n  10: 'MKCOL',\n  11: 'MOVE',\n  12: 'PROPFIND',\n  13: 'PROPPATCH',\n  14: 'SEARCH',\n  15: 'UNLOCK',\n  16: 'BIND',\n  17: 'REBIND',\n  18: 'UNBIND',\n  19: 'ACL',\n  20: 'REPORT',\n  21: 'MKACTIVITY',\n  22: 'CHECKOUT',\n  23: 'MERGE',\n  24: 'M-SEARCH',\n  25: 'NOTIFY',\n  26: 'SUBSCRIBE',\n  27: 'UNSUBSCRIBE',\n  28: 'PATCH',\n  29: 'PURGE',\n  30: 'MKCALENDAR',\n  31: 'LINK',\n  32: 'UNLINK'\n};\n\nvar VERSION = process.version\n  ? process.version.match(/[0-9]+/g).map(function(n) { return parseInt(n, 10) })\n  : [];\n\nif (VERSION[0] === 0 && VERSION[1] === 12) {\n  HttpParser.METHODS[16] = 'REPORT';\n  HttpParser.METHODS[17] = 'MKACTIVITY';\n  HttpParser.METHODS[18] = 'CHECKOUT';\n  HttpParser.METHODS[19] = 'MERGE';\n  HttpParser.METHODS[20] = 'M-SEARCH';\n  HttpParser.METHODS[21] = 'NOTIFY';\n  HttpParser.METHODS[22] = 'SUBSCRIBE';\n  HttpParser.METHODS[23] = 'UNSUBSCRIBE';\n  HttpParser.METHODS[24] = 'PATCH';\n  HttpParser.METHODS[25] = 'PURGE';\n}\n\nHttpParser.prototype.isComplete = function() {\n  return this._complete;\n};\n\nHttpParser.prototype.parse = function(chunk) {\n  var consumed = this._parser.execute(chunk, 0, chunk.length);\n\n  if (typeof consumed !== 'number') {\n    this.error     = consumed;\n    this._complete = true;\n    return;\n  }\n\n  if (this._complete)\n    this.body = (consumed < chunk.length)\n              ? chunk.slice(consumed)\n              : Buffer.alloc(0);\n};\n\nmodule.exports = HttpParser;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L2h0dHBfcGFyc2VyLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLHFCQUFxQiw0R0FBb0M7QUFDekQscUJBQXFCLDRGQUE2Qjs7QUFFbEQ7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUEsb0RBQW9ELE9BQU87QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSx1REFBdUQsd0JBQXdCO0FBQy9FOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pbnNkdXN0cnktdGVjaG5vbG9naWVzLy4vbm9kZV9tb2R1bGVzL3dlYnNvY2tldC1kcml2ZXIvbGliL3dlYnNvY2tldC9odHRwX3BhcnNlci5qcz9jODdiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxudmFyIE5vZGVIVFRQUGFyc2VyID0gcmVxdWlyZSgnaHR0cC1wYXJzZXItanMnKS5IVFRQUGFyc2VyLFxuICAgIEJ1ZmZlciAgICAgICAgID0gcmVxdWlyZSgnc2FmZS1idWZmZXInKS5CdWZmZXI7XG5cbnZhciBUWVBFUyA9IHtcbiAgcmVxdWVzdDogIE5vZGVIVFRQUGFyc2VyLlJFUVVFU1QgIHx8ICdyZXF1ZXN0JyxcbiAgcmVzcG9uc2U6IE5vZGVIVFRQUGFyc2VyLlJFU1BPTlNFIHx8ICdyZXNwb25zZSdcbn07XG5cbnZhciBIdHRwUGFyc2VyID0gZnVuY3Rpb24odHlwZSkge1xuICB0aGlzLl90eXBlICAgICA9IHR5cGU7XG4gIHRoaXMuX3BhcnNlciAgID0gbmV3IE5vZGVIVFRQUGFyc2VyKFRZUEVTW3R5cGVdKTtcbiAgdGhpcy5fY29tcGxldGUgPSBmYWxzZTtcbiAgdGhpcy5oZWFkZXJzICAgPSB7fTtcblxuICB2YXIgY3VycmVudCA9IG51bGwsXG4gICAgICBzZWxmICAgID0gdGhpcztcblxuICB0aGlzLl9wYXJzZXIub25IZWFkZXJGaWVsZCA9IGZ1bmN0aW9uKGIsIHN0YXJ0LCBsZW5ndGgpIHtcbiAgICBjdXJyZW50ID0gYi50b1N0cmluZygndXRmOCcsIHN0YXJ0LCBzdGFydCArIGxlbmd0aCkudG9Mb3dlckNhc2UoKTtcbiAgfTtcblxuICB0aGlzLl9wYXJzZXIub25IZWFkZXJWYWx1ZSA9IGZ1bmN0aW9uKGIsIHN0YXJ0LCBsZW5ndGgpIHtcbiAgICB2YXIgdmFsdWUgPSBiLnRvU3RyaW5nKCd1dGY4Jywgc3RhcnQsIHN0YXJ0ICsgbGVuZ3RoKTtcblxuICAgIGlmIChzZWxmLmhlYWRlcnMuaGFzT3duUHJvcGVydHkoY3VycmVudCkpXG4gICAgICBzZWxmLmhlYWRlcnNbY3VycmVudF0gKz0gJywgJyArIHZhbHVlO1xuICAgIGVsc2VcbiAgICAgIHNlbGYuaGVhZGVyc1tjdXJyZW50XSA9IHZhbHVlO1xuICB9O1xuXG4gIHRoaXMuX3BhcnNlci5vbkhlYWRlcnNDb21wbGV0ZSA9IHRoaXMuX3BhcnNlcltOb2RlSFRUUFBhcnNlci5rT25IZWFkZXJzQ29tcGxldGVdID1cbiAgZnVuY3Rpb24obWFqb3JWZXJzaW9uLCBtaW5vclZlcnNpb24sIGhlYWRlcnMsIG1ldGhvZCwgcGF0aG5hbWUsIHN0YXR1c0NvZGUpIHtcbiAgICB2YXIgaW5mbyA9IGFyZ3VtZW50c1swXTtcblxuICAgIGlmICh0eXBlb2YgaW5mbyA9PT0gJ29iamVjdCcpIHtcbiAgICAgIG1ldGhvZCAgICAgPSBpbmZvLm1ldGhvZDtcbiAgICAgIHBhdGhuYW1lICAgPSBpbmZvLnVybDtcbiAgICAgIHN0YXR1c0NvZGUgPSBpbmZvLnN0YXR1c0NvZGU7XG4gICAgICBoZWFkZXJzICAgID0gaW5mby5oZWFkZXJzO1xuICAgIH1cblxuICAgIHNlbGYubWV0aG9kICAgICA9ICh0eXBlb2YgbWV0aG9kID09PSAnbnVtYmVyJykgPyBIdHRwUGFyc2VyLk1FVEhPRFNbbWV0aG9kXSA6IG1ldGhvZDtcbiAgICBzZWxmLnN0YXR1c0NvZGUgPSBzdGF0dXNDb2RlO1xuICAgIHNlbGYudXJsICAgICAgICA9IHBhdGhuYW1lO1xuXG4gICAgaWYgKCFoZWFkZXJzKSByZXR1cm47XG5cbiAgICBmb3IgKHZhciBpID0gMCwgbiA9IGhlYWRlcnMubGVuZ3RoLCBrZXksIHZhbHVlOyBpIDwgbjsgaSArPSAyKSB7XG4gICAgICBrZXkgICA9IGhlYWRlcnNbaV0udG9Mb3dlckNhc2UoKTtcbiAgICAgIHZhbHVlID0gaGVhZGVyc1tpKzFdO1xuICAgICAgaWYgKHNlbGYuaGVhZGVycy5oYXNPd25Qcm9wZXJ0eShrZXkpKVxuICAgICAgICBzZWxmLmhlYWRlcnNba2V5XSArPSAnLCAnICsgdmFsdWU7XG4gICAgICBlbHNlXG4gICAgICAgIHNlbGYuaGVhZGVyc1trZXldID0gdmFsdWU7XG4gICAgfVxuXG4gICAgc2VsZi5fY29tcGxldGUgPSB0cnVlO1xuICB9O1xufTtcblxuSHR0cFBhcnNlci5NRVRIT0RTID0ge1xuICAwOiAgJ0RFTEVURScsXG4gIDE6ICAnR0VUJyxcbiAgMjogICdIRUFEJyxcbiAgMzogICdQT1NUJyxcbiAgNDogICdQVVQnLFxuICA1OiAgJ0NPTk5FQ1QnLFxuICA2OiAgJ09QVElPTlMnLFxuICA3OiAgJ1RSQUNFJyxcbiAgODogICdDT1BZJyxcbiAgOTogICdMT0NLJyxcbiAgMTA6ICdNS0NPTCcsXG4gIDExOiAnTU9WRScsXG4gIDEyOiAnUFJPUEZJTkQnLFxuICAxMzogJ1BST1BQQVRDSCcsXG4gIDE0OiAnU0VBUkNIJyxcbiAgMTU6ICdVTkxPQ0snLFxuICAxNjogJ0JJTkQnLFxuICAxNzogJ1JFQklORCcsXG4gIDE4OiAnVU5CSU5EJyxcbiAgMTk6ICdBQ0wnLFxuICAyMDogJ1JFUE9SVCcsXG4gIDIxOiAnTUtBQ1RJVklUWScsXG4gIDIyOiAnQ0hFQ0tPVVQnLFxuICAyMzogJ01FUkdFJyxcbiAgMjQ6ICdNLVNFQVJDSCcsXG4gIDI1OiAnTk9USUZZJyxcbiAgMjY6ICdTVUJTQ1JJQkUnLFxuICAyNzogJ1VOU1VCU0NSSUJFJyxcbiAgMjg6ICdQQVRDSCcsXG4gIDI5OiAnUFVSR0UnLFxuICAzMDogJ01LQ0FMRU5EQVInLFxuICAzMTogJ0xJTksnLFxuICAzMjogJ1VOTElOSydcbn07XG5cbnZhciBWRVJTSU9OID0gcHJvY2Vzcy52ZXJzaW9uXG4gID8gcHJvY2Vzcy52ZXJzaW9uLm1hdGNoKC9bMC05XSsvZykubWFwKGZ1bmN0aW9uKG4pIHsgcmV0dXJuIHBhcnNlSW50KG4sIDEwKSB9KVxuICA6IFtdO1xuXG5pZiAoVkVSU0lPTlswXSA9PT0gMCAmJiBWRVJTSU9OWzFdID09PSAxMikge1xuICBIdHRwUGFyc2VyLk1FVEhPRFNbMTZdID0gJ1JFUE9SVCc7XG4gIEh0dHBQYXJzZXIuTUVUSE9EU1sxN10gPSAnTUtBQ1RJVklUWSc7XG4gIEh0dHBQYXJzZXIuTUVUSE9EU1sxOF0gPSAnQ0hFQ0tPVVQnO1xuICBIdHRwUGFyc2VyLk1FVEhPRFNbMTldID0gJ01FUkdFJztcbiAgSHR0cFBhcnNlci5NRVRIT0RTWzIwXSA9ICdNLVNFQVJDSCc7XG4gIEh0dHBQYXJzZXIuTUVUSE9EU1syMV0gPSAnTk9USUZZJztcbiAgSHR0cFBhcnNlci5NRVRIT0RTWzIyXSA9ICdTVUJTQ1JJQkUnO1xuICBIdHRwUGFyc2VyLk1FVEhPRFNbMjNdID0gJ1VOU1VCU0NSSUJFJztcbiAgSHR0cFBhcnNlci5NRVRIT0RTWzI0XSA9ICdQQVRDSCc7XG4gIEh0dHBQYXJzZXIuTUVUSE9EU1syNV0gPSAnUFVSR0UnO1xufVxuXG5IdHRwUGFyc2VyLnByb3RvdHlwZS5pc0NvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiB0aGlzLl9jb21wbGV0ZTtcbn07XG5cbkh0dHBQYXJzZXIucHJvdG90eXBlLnBhcnNlID0gZnVuY3Rpb24oY2h1bmspIHtcbiAgdmFyIGNvbnN1bWVkID0gdGhpcy5fcGFyc2VyLmV4ZWN1dGUoY2h1bmssIDAsIGNodW5rLmxlbmd0aCk7XG5cbiAgaWYgKHR5cGVvZiBjb25zdW1lZCAhPT0gJ251bWJlcicpIHtcbiAgICB0aGlzLmVycm9yICAgICA9IGNvbnN1bWVkO1xuICAgIHRoaXMuX2NvbXBsZXRlID0gdHJ1ZTtcbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAodGhpcy5fY29tcGxldGUpXG4gICAgdGhpcy5ib2R5ID0gKGNvbnN1bWVkIDwgY2h1bmsubGVuZ3RoKVxuICAgICAgICAgICAgICA/IGNodW5rLnNsaWNlKGNvbnN1bWVkKVxuICAgICAgICAgICAgICA6IEJ1ZmZlci5hbGxvYygwKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gSHR0cFBhcnNlcjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/http_parser.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/websocket-driver/lib/websocket/streams.js":
/*!****************************************************************!*\
  !*** ./node_modules/websocket-driver/lib/websocket/streams.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\n\n/**\n\nStreams in a WebSocket connection\n---------------------------------\n\nWe model a WebSocket as two duplex streams: one stream is for the wire protocol\nover an I/O socket, and the other is for incoming/outgoing messages.\n\n\n                        +----------+      +---------+      +----------+\n    [1] write(chunk) -->| ~~~~~~~~ +----->| parse() +----->| ~~~~~~~~ +--> emit('data') [2]\n                        |          |      +----+----+      |          |\n                        |          |           |           |          |\n                        |    IO    |           | [5]       | Messages |\n                        |          |           V           |          |\n                        |          |      +---------+      |          |\n    [4] emit('data') <--+ ~~~~~~~~ |<-----+ frame() |<-----+ ~~~~~~~~ |<-- write(chunk) [3]\n                        +----------+      +---------+      +----------+\n\n\nMessage transfer in each direction is simple: IO receives a byte stream [1] and\nsends this stream for parsing. The parser will periodically emit a complete\nmessage text on the Messages stream [2]. Similarly, when messages are written\nto the Messages stream [3], they are framed using the WebSocket wire format and\nemitted via IO [4].\n\nThere is a feedback loop via [5] since some input from [1] will be things like\nping, pong and close frames. In these cases the protocol responds by emitting\nresponses directly back to [4] rather than emitting messages via [2].\n\nFor the purposes of flow control, we consider the sources of each Readable\nstream to be as follows:\n\n* [2] receives input from [1]\n* [4] receives input from [1] and [3]\n\nThe classes below express the relationships described above without prescribing\nanything about how parse() and frame() work, other than assuming they emit\n'data' events to the IO and Messages streams. They will work with any protocol\ndriver having these two methods.\n**/\n\n\nvar Stream = (__webpack_require__(/*! stream */ \"stream\").Stream),\n    util   = __webpack_require__(/*! util */ \"util\");\n\n\nvar IO = function(driver) {\n  this.readable = this.writable = true;\n  this._paused  = false;\n  this._driver  = driver;\n};\nutil.inherits(IO, Stream);\n\n// The IO pause() and resume() methods will be called when the socket we are\n// piping to gets backed up and drains. Since IO output [4] comes from IO input\n// [1] and Messages input [3], we need to tell both of those to return false\n// from write() when this stream is paused.\n\nIO.prototype.pause = function() {\n  this._paused = true;\n  this._driver.messages._paused = true;\n};\n\nIO.prototype.resume = function() {\n  this._paused = false;\n  this.emit('drain');\n\n  var messages = this._driver.messages;\n  messages._paused = false;\n  messages.emit('drain');\n};\n\n// When we receive input from a socket, send it to the parser and tell the\n// source whether to back off.\nIO.prototype.write = function(chunk) {\n  if (!this.writable) return false;\n  this._driver.parse(chunk);\n  return !this._paused;\n};\n\n// The IO end() method will be called when the socket piping into it emits\n// 'close' or 'end', i.e. the socket is closed. In this situation the Messages\n// stream will not emit any more data so we emit 'end'.\nIO.prototype.end = function(chunk) {\n  if (!this.writable) return;\n  if (chunk !== undefined) this.write(chunk);\n  this.writable = false;\n\n  var messages = this._driver.messages;\n  if (messages.readable) {\n    messages.readable = messages.writable = false;\n    messages.emit('end');\n  }\n};\n\nIO.prototype.destroy = function() {\n  this.end();\n};\n\n\nvar Messages = function(driver) {\n  this.readable = this.writable = true;\n  this._paused  = false;\n  this._driver  = driver;\n};\nutil.inherits(Messages, Stream);\n\n// The Messages pause() and resume() methods will be called when the app that's\n// processing the messages gets backed up and drains. If we're emitting\n// messages too fast we should tell the source to slow down. Message output [2]\n// comes from IO input [1].\n\nMessages.prototype.pause = function() {\n  this._driver.io._paused = true;\n};\n\nMessages.prototype.resume = function() {\n  this._driver.io._paused = false;\n  this._driver.io.emit('drain');\n};\n\n// When we receive messages from the user, send them to the formatter and tell\n// the source whether to back off.\nMessages.prototype.write = function(message) {\n  if (!this.writable) return false;\n  if (typeof message === 'string') this._driver.text(message);\n  else this._driver.binary(message);\n  return !this._paused;\n};\n\n// The Messages end() method will be called when a stream piping into it emits\n// 'end'. Many streams may be piped into the WebSocket and one of them ending\n// does not mean the whole socket is done, so just process the input and move\n// on leaving the socket open.\nMessages.prototype.end = function(message) {\n  if (message !== undefined) this.write(message);\n};\n\nMessages.prototype.destroy = function() {};\n\n\nexports.IO = IO;\nexports.Messages = Messages;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L3N0cmVhbXMuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQSxhQUFhLG9EQUF3QjtBQUNyQyxhQUFhLG1CQUFPLENBQUMsa0JBQU07OztBQUczQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7O0FBR0EsVUFBVTtBQUNWLGdCQUFnQiIsInNvdXJjZXMiOlsid2VicGFjazovL2luc2R1c3RyeS10ZWNobm9sb2dpZXMvLi9ub2RlX21vZHVsZXMvd2Vic29ja2V0LWRyaXZlci9saWIvd2Vic29ja2V0L3N0cmVhbXMuanM/YTA3ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuXG5TdHJlYW1zIGluIGEgV2ViU29ja2V0IGNvbm5lY3Rpb25cbi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG5XZSBtb2RlbCBhIFdlYlNvY2tldCBhcyB0d28gZHVwbGV4IHN0cmVhbXM6IG9uZSBzdHJlYW0gaXMgZm9yIHRoZSB3aXJlIHByb3RvY29sXG5vdmVyIGFuIEkvTyBzb2NrZXQsIGFuZCB0aGUgb3RoZXIgaXMgZm9yIGluY29taW5nL291dGdvaW5nIG1lc3NhZ2VzLlxuXG5cbiAgICAgICAgICAgICAgICAgICAgICAgICstLS0tLS0tLS0tKyAgICAgICstLS0tLS0tLS0rICAgICAgKy0tLS0tLS0tLS0rXG4gICAgWzFdIHdyaXRlKGNodW5rKSAtLT58IH5+fn5+fn5+ICstLS0tLT58IHBhcnNlKCkgKy0tLS0tPnwgfn5+fn5+fn4gKy0tPiBlbWl0KCdkYXRhJykgWzJdXG4gICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgIHwgICAgICArLS0tLSstLS0tKyAgICAgIHwgICAgICAgICAgfFxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICB8ICAgICAgICAgICB8ICAgICAgICAgICB8ICAgICAgICAgIHxcbiAgICAgICAgICAgICAgICAgICAgICAgIHwgICAgSU8gICAgfCAgICAgICAgICAgfCBbNV0gICAgICAgfCBNZXNzYWdlcyB8XG4gICAgICAgICAgICAgICAgICAgICAgICB8ICAgICAgICAgIHwgICAgICAgICAgIFYgICAgICAgICAgIHwgICAgICAgICAgfFxuICAgICAgICAgICAgICAgICAgICAgICAgfCAgICAgICAgICB8ICAgICAgKy0tLS0tLS0tLSsgICAgICB8ICAgICAgICAgIHxcbiAgICBbNF0gZW1pdCgnZGF0YScpIDwtLSsgfn5+fn5+fn4gfDwtLS0tLSsgZnJhbWUoKSB8PC0tLS0tKyB+fn5+fn5+fiB8PC0tIHdyaXRlKGNodW5rKSBbM11cbiAgICAgICAgICAgICAgICAgICAgICAgICstLS0tLS0tLS0tKyAgICAgICstLS0tLS0tLS0rICAgICAgKy0tLS0tLS0tLS0rXG5cblxuTWVzc2FnZSB0cmFuc2ZlciBpbiBlYWNoIGRpcmVjdGlvbiBpcyBzaW1wbGU6IElPIHJlY2VpdmVzIGEgYnl0ZSBzdHJlYW0gWzFdIGFuZFxuc2VuZHMgdGhpcyBzdHJlYW0gZm9yIHBhcnNpbmcuIFRoZSBwYXJzZXIgd2lsbCBwZXJpb2RpY2FsbHkgZW1pdCBhIGNvbXBsZXRlXG5tZXNzYWdlIHRleHQgb24gdGhlIE1lc3NhZ2VzIHN0cmVhbSBbMl0uIFNpbWlsYXJseSwgd2hlbiBtZXNzYWdlcyBhcmUgd3JpdHRlblxudG8gdGhlIE1lc3NhZ2VzIHN0cmVhbSBbM10sIHRoZXkgYXJlIGZyYW1lZCB1c2luZyB0aGUgV2ViU29ja2V0IHdpcmUgZm9ybWF0IGFuZFxuZW1pdHRlZCB2aWEgSU8gWzRdLlxuXG5UaGVyZSBpcyBhIGZlZWRiYWNrIGxvb3AgdmlhIFs1XSBzaW5jZSBzb21lIGlucHV0IGZyb20gWzFdIHdpbGwgYmUgdGhpbmdzIGxpa2VcbnBpbmcsIHBvbmcgYW5kIGNsb3NlIGZyYW1lcy4gSW4gdGhlc2UgY2FzZXMgdGhlIHByb3RvY29sIHJlc3BvbmRzIGJ5IGVtaXR0aW5nXG5yZXNwb25zZXMgZGlyZWN0bHkgYmFjayB0byBbNF0gcmF0aGVyIHRoYW4gZW1pdHRpbmcgbWVzc2FnZXMgdmlhIFsyXS5cblxuRm9yIHRoZSBwdXJwb3NlcyBvZiBmbG93IGNvbnRyb2wsIHdlIGNvbnNpZGVyIHRoZSBzb3VyY2VzIG9mIGVhY2ggUmVhZGFibGVcbnN0cmVhbSB0byBiZSBhcyBmb2xsb3dzOlxuXG4qIFsyXSByZWNlaXZlcyBpbnB1dCBmcm9tIFsxXVxuKiBbNF0gcmVjZWl2ZXMgaW5wdXQgZnJvbSBbMV0gYW5kIFszXVxuXG5UaGUgY2xhc3NlcyBiZWxvdyBleHByZXNzIHRoZSByZWxhdGlvbnNoaXBzIGRlc2NyaWJlZCBhYm92ZSB3aXRob3V0IHByZXNjcmliaW5nXG5hbnl0aGluZyBhYm91dCBob3cgcGFyc2UoKSBhbmQgZnJhbWUoKSB3b3JrLCBvdGhlciB0aGFuIGFzc3VtaW5nIHRoZXkgZW1pdFxuJ2RhdGEnIGV2ZW50cyB0byB0aGUgSU8gYW5kIE1lc3NhZ2VzIHN0cmVhbXMuIFRoZXkgd2lsbCB3b3JrIHdpdGggYW55IHByb3RvY29sXG5kcml2ZXIgaGF2aW5nIHRoZXNlIHR3byBtZXRob2RzLlxuKiovXG5cblxudmFyIFN0cmVhbSA9IHJlcXVpcmUoJ3N0cmVhbScpLlN0cmVhbSxcbiAgICB1dGlsICAgPSByZXF1aXJlKCd1dGlsJyk7XG5cblxudmFyIElPID0gZnVuY3Rpb24oZHJpdmVyKSB7XG4gIHRoaXMucmVhZGFibGUgPSB0aGlzLndyaXRhYmxlID0gdHJ1ZTtcbiAgdGhpcy5fcGF1c2VkICA9IGZhbHNlO1xuICB0aGlzLl9kcml2ZXIgID0gZHJpdmVyO1xufTtcbnV0aWwuaW5oZXJpdHMoSU8sIFN0cmVhbSk7XG5cbi8vIFRoZSBJTyBwYXVzZSgpIGFuZCByZXN1bWUoKSBtZXRob2RzIHdpbGwgYmUgY2FsbGVkIHdoZW4gdGhlIHNvY2tldCB3ZSBhcmVcbi8vIHBpcGluZyB0byBnZXRzIGJhY2tlZCB1cCBhbmQgZHJhaW5zLiBTaW5jZSBJTyBvdXRwdXQgWzRdIGNvbWVzIGZyb20gSU8gaW5wdXRcbi8vIFsxXSBhbmQgTWVzc2FnZXMgaW5wdXQgWzNdLCB3ZSBuZWVkIHRvIHRlbGwgYm90aCBvZiB0aG9zZSB0byByZXR1cm4gZmFsc2Vcbi8vIGZyb20gd3JpdGUoKSB3aGVuIHRoaXMgc3RyZWFtIGlzIHBhdXNlZC5cblxuSU8ucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX3BhdXNlZCA9IHRydWU7XG4gIHRoaXMuX2RyaXZlci5tZXNzYWdlcy5fcGF1c2VkID0gdHJ1ZTtcbn07XG5cbklPLnByb3RvdHlwZS5yZXN1bWUgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fcGF1c2VkID0gZmFsc2U7XG4gIHRoaXMuZW1pdCgnZHJhaW4nKTtcblxuICB2YXIgbWVzc2FnZXMgPSB0aGlzLl9kcml2ZXIubWVzc2FnZXM7XG4gIG1lc3NhZ2VzLl9wYXVzZWQgPSBmYWxzZTtcbiAgbWVzc2FnZXMuZW1pdCgnZHJhaW4nKTtcbn07XG5cbi8vIFdoZW4gd2UgcmVjZWl2ZSBpbnB1dCBmcm9tIGEgc29ja2V0LCBzZW5kIGl0IHRvIHRoZSBwYXJzZXIgYW5kIHRlbGwgdGhlXG4vLyBzb3VyY2Ugd2hldGhlciB0byBiYWNrIG9mZi5cbklPLnByb3RvdHlwZS53cml0ZSA9IGZ1bmN0aW9uKGNodW5rKSB7XG4gIGlmICghdGhpcy53cml0YWJsZSkgcmV0dXJuIGZhbHNlO1xuICB0aGlzLl9kcml2ZXIucGFyc2UoY2h1bmspO1xuICByZXR1cm4gIXRoaXMuX3BhdXNlZDtcbn07XG5cbi8vIFRoZSBJTyBlbmQoKSBtZXRob2Qgd2lsbCBiZSBjYWxsZWQgd2hlbiB0aGUgc29ja2V0IHBpcGluZyBpbnRvIGl0IGVtaXRzXG4vLyAnY2xvc2UnIG9yICdlbmQnLCBpLmUuIHRoZSBzb2NrZXQgaXMgY2xvc2VkLiBJbiB0aGlzIHNpdHVhdGlvbiB0aGUgTWVzc2FnZXNcbi8vIHN0cmVhbSB3aWxsIG5vdCBlbWl0IGFueSBtb3JlIGRhdGEgc28gd2UgZW1pdCAnZW5kJy5cbklPLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbihjaHVuaykge1xuICBpZiAoIXRoaXMud3JpdGFibGUpIHJldHVybjtcbiAgaWYgKGNodW5rICE9PSB1bmRlZmluZWQpIHRoaXMud3JpdGUoY2h1bmspO1xuICB0aGlzLndyaXRhYmxlID0gZmFsc2U7XG5cbiAgdmFyIG1lc3NhZ2VzID0gdGhpcy5fZHJpdmVyLm1lc3NhZ2VzO1xuICBpZiAobWVzc2FnZXMucmVhZGFibGUpIHtcbiAgICBtZXNzYWdlcy5yZWFkYWJsZSA9IG1lc3NhZ2VzLndyaXRhYmxlID0gZmFsc2U7XG4gICAgbWVzc2FnZXMuZW1pdCgnZW5kJyk7XG4gIH1cbn07XG5cbklPLnByb3RvdHlwZS5kZXN0cm95ID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuZW5kKCk7XG59O1xuXG5cbnZhciBNZXNzYWdlcyA9IGZ1bmN0aW9uKGRyaXZlcikge1xuICB0aGlzLnJlYWRhYmxlID0gdGhpcy53cml0YWJsZSA9IHRydWU7XG4gIHRoaXMuX3BhdXNlZCAgPSBmYWxzZTtcbiAgdGhpcy5fZHJpdmVyICA9IGRyaXZlcjtcbn07XG51dGlsLmluaGVyaXRzKE1lc3NhZ2VzLCBTdHJlYW0pO1xuXG4vLyBUaGUgTWVzc2FnZXMgcGF1c2UoKSBhbmQgcmVzdW1lKCkgbWV0aG9kcyB3aWxsIGJlIGNhbGxlZCB3aGVuIHRoZSBhcHAgdGhhdCdzXG4vLyBwcm9jZXNzaW5nIHRoZSBtZXNzYWdlcyBnZXRzIGJhY2tlZCB1cCBhbmQgZHJhaW5zLiBJZiB3ZSdyZSBlbWl0dGluZ1xuLy8gbWVzc2FnZXMgdG9vIGZhc3Qgd2Ugc2hvdWxkIHRlbGwgdGhlIHNvdXJjZSB0byBzbG93IGRvd24uIE1lc3NhZ2Ugb3V0cHV0IFsyXVxuLy8gY29tZXMgZnJvbSBJTyBpbnB1dCBbMV0uXG5cbk1lc3NhZ2VzLnByb3RvdHlwZS5wYXVzZSA9IGZ1bmN0aW9uKCkge1xuICB0aGlzLl9kcml2ZXIuaW8uX3BhdXNlZCA9IHRydWU7XG59O1xuXG5NZXNzYWdlcy5wcm90b3R5cGUucmVzdW1lID0gZnVuY3Rpb24oKSB7XG4gIHRoaXMuX2RyaXZlci5pby5fcGF1c2VkID0gZmFsc2U7XG4gIHRoaXMuX2RyaXZlci5pby5lbWl0KCdkcmFpbicpO1xufTtcblxuLy8gV2hlbiB3ZSByZWNlaXZlIG1lc3NhZ2VzIGZyb20gdGhlIHVzZXIsIHNlbmQgdGhlbSB0byB0aGUgZm9ybWF0dGVyIGFuZCB0ZWxsXG4vLyB0aGUgc291cmNlIHdoZXRoZXIgdG8gYmFjayBvZmYuXG5NZXNzYWdlcy5wcm90b3R5cGUud3JpdGUgPSBmdW5jdGlvbihtZXNzYWdlKSB7XG4gIGlmICghdGhpcy53cml0YWJsZSkgcmV0dXJuIGZhbHNlO1xuICBpZiAodHlwZW9mIG1lc3NhZ2UgPT09ICdzdHJpbmcnKSB0aGlzLl9kcml2ZXIudGV4dChtZXNzYWdlKTtcbiAgZWxzZSB0aGlzLl9kcml2ZXIuYmluYXJ5KG1lc3NhZ2UpO1xuICByZXR1cm4gIXRoaXMuX3BhdXNlZDtcbn07XG5cbi8vIFRoZSBNZXNzYWdlcyBlbmQoKSBtZXRob2Qgd2lsbCBiZSBjYWxsZWQgd2hlbiBhIHN0cmVhbSBwaXBpbmcgaW50byBpdCBlbWl0c1xuLy8gJ2VuZCcuIE1hbnkgc3RyZWFtcyBtYXkgYmUgcGlwZWQgaW50byB0aGUgV2ViU29ja2V0IGFuZCBvbmUgb2YgdGhlbSBlbmRpbmdcbi8vIGRvZXMgbm90IG1lYW4gdGhlIHdob2xlIHNvY2tldCBpcyBkb25lLCBzbyBqdXN0IHByb2Nlc3MgdGhlIGlucHV0IGFuZCBtb3ZlXG4vLyBvbiBsZWF2aW5nIHRoZSBzb2NrZXQgb3Blbi5cbk1lc3NhZ2VzLnByb3RvdHlwZS5lbmQgPSBmdW5jdGlvbihtZXNzYWdlKSB7XG4gIGlmIChtZXNzYWdlICE9PSB1bmRlZmluZWQpIHRoaXMud3JpdGUobWVzc2FnZSk7XG59O1xuXG5NZXNzYWdlcy5wcm90b3R5cGUuZGVzdHJveSA9IGZ1bmN0aW9uKCkge307XG5cblxuZXhwb3J0cy5JTyA9IElPO1xuZXhwb3J0cy5NZXNzYWdlcyA9IE1lc3NhZ2VzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/websocket-driver/lib/websocket/streams.js\n");

/***/ })

};
;